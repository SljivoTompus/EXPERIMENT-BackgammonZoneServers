ZAPISNIK ZA INTERVAL SERVERA(LOBBY) I MOZDA POCINJANJE IGRE
#Ovde cu zapisivati sve sto li po meni ima sumnju za vezu intervala na serveru nakon uspesnog handshake
#Interval gde se clijenti medu najslicnijima pronadu i zapocnu partiju tavle 

#DISPLAY


HDC FUN_6f017e67(HDC param_1,int param_2)

{
  int iVar1;
  DEVMODEW *pdm;
  
  pdm = (DEVMODEW *)0x0;
  if (param_2 == 0) {
    if ((param_1 == (HDC)0x0) || (iVar1 = GetDeviceCaps(param_1,2), iVar1 == 5)) {
      param_1 = CreateDCW(u_DISPLAY_6f03f390,(LPCWSTR)0x0,(LPCWSTR)0x0,(DEVMODEW *)0x0);
    }
  }
  else {
    if (*(ushort *)(param_2 + 10) != 0) {
      pdm = (DEVMODEW *)((uint)*(ushort *)(param_2 + 10) + param_2);
    }
    param_1 = CreateDCW((LPCWSTR)((uint)*(ushort *)(param_2 + 4) + param_2),
                        (LPCWSTR)((uint)*(ushort *)(param_2 + 6) + param_2),
                        (LPCWSTR)((uint)*(ushort *)(param_2 + 8) + param_2),pdm);
  }
  return param_1;
}


#Moguce da je ovo po imenu neko merenje dimenzija klijentovog ekrana da zna koliki prozor igre da napravi

#ATL:%8.8X
##na lokaciji 6f018b30

undefined2 FUN_6f018b30(int param_1,WNDCLASSEXW *param_2,UINT *param_3)

{
  LPCRITICAL_SECTION lpCriticalSection;
  byte *pbVar1;
  LPWSTR pWVar2;
  WNDPROC pWVar3;
  LPCWSTR pWVar4;
  ATOM AVar5;
  BOOL BVar6;
  HCURSOR pHVar7;
  HINSTANCE pHVar8;
  tagWNDCLASSEXW local_68;
  tagWNDCLASSEXW local_38;
  HINSTANCE local_8;
  
  if (*(short *)&param_2[1].cbWndExtra == 0) {
    lpCriticalSection = (LPCRITICAL_SECTION)(param_1 + 0x34);
    EnterCriticalSection(lpCriticalSection);
    if (*(short *)&param_2[1].cbWndExtra == 0) {
      pHVar8 = *(HINSTANCE *)(param_1 + 4);
      local_8 = pHVar8;
      if ((LPCWSTR)param_2[1].cbSize == (LPCWSTR)0x0) {
        pHVar7 = LoadCursorW((HINSTANCE)(~-(uint)(param_2[1].cbClsExtra != 0) & (uint)pHVar8),
                             (LPCWSTR)param_2[1].lpfnWndProc);
        param_2->hCursor = pHVar7;
      }
      else {
        pWVar3 = param_2->lpfnWndProc;
        pWVar4 = param_2->lpszClassName;
        local_38.cbSize = 0x30;
        BVar6 = GetClassInfoExW((HINSTANCE)0x0,(LPCWSTR)param_2[1].cbSize,&local_38);
        if ((BVar6 == 0) &&
           (BVar6 = GetClassInfoExW(DAT_6f041b24,(LPCWSTR)param_2[1].cbSize,&local_38), BVar6 ==  0))
        {
          LeaveCriticalSection(lpCriticalSection);
          return 0;
        }
        memcpy(param_2,&local_38,0x30);
        param_2->lpszClassName = pWVar4;
        param_2[1].style = (UINT)param_2->lpfnWndProc;
        param_2->lpfnWndProc = pWVar3;
        pHVar8 = local_8;
      }
      pbVar1 = (byte *)((int)&param_2->style + 1);
      *pbVar1 = *pbVar1 & 0xbf;
      param_2->hInstance = pHVar8;
      if (param_2->lpszClassName == (LPCWSTR)0x0) {
        pWVar2 = (LPWSTR)((int)&param_2[1].cbWndExtra + 2);
        wsprintfW(pWVar2,u_ATL:%8.8X_6f03f4dc,param_2);
        param_2->lpszClassName = pWVar2;
      }
      memcpy(&local_68,param_2,0x30);
      BVar6 = GetClassInfoExW(param_2->hInstance,param_2->lpszClassName,&local_68);
      *(short *)&param_2[1].cbWndExtra = (short)BVar6;
      if ((short)BVar6 == 0) {
        AVar5 = RegisterClassExW(param_2);
        *(ATOM *)&param_2[1].cbWndExtra = AVar5;
      }
    }
    LeaveCriticalSection(lpCriticalSection);
  }
  if (param_2[1].cbSize != 0) {
    *param_3 = param_2[1].style;
  }
  return *(undefined2 *)&param_2[1].cbWndExtra;
}


##na lokaciji 6f01c544



undefined2 __thiscall FUN_6f01c544(void *this,undefined4 *param_1)

{
  undefined4 uVar1;
  ATOM AVar2;
  BOOL BVar3;
  HCURSOR pHVar4;
  HANDLE pvVar5;
  uint uVar6;
  tagWNDCLASSEXW local_6c;
  tagWNDCLASSEXW local_3c;
  uint local_c;
  undefined4 local_8;
  
  if (*(short *)((int)this + 0x40) == 0) {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
    uVar6 = DAT_6f041b24;
    if (*(short *)((int)this + 0x40) == 0) {
      local_c = DAT_6f041b24;
      if (*(LPCWSTR *)((int)this + 0x30) == (LPCWSTR)0x0) {
        pHVar4 = LoadCursorW((HINSTANCE)(~-(uint)(*(int *)((int)this + 0x3c) != 0) & DAT_6f041b24 ),
                             *(LPCWSTR *)((int)this + 0x38));
        *(HCURSOR *)((int)this + 0x1c) = pHVar4;
      }
      else {
        local_8 = *(undefined4 *)((int)this + 8);
        uVar1 = *(undefined4 *)((int)this + 0x28);
        local_3c.cbSize = 0x30;
        BVar3 = GetClassInfoExW((HINSTANCE)0x0,*(LPCWSTR *)((int)this + 0x30),&local_3c);
        if (BVar3 == 0) {
          LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
          return 0;
        }
        memcpy(this,&local_3c,0x30);
        *(undefined4 *)((int)this + 0x28) = uVar1;
        *(undefined4 *)((int)this + 0x34) = *(undefined4 *)((int)this + 8);
        *(undefined4 *)((int)this + 8) = local_8;
        uVar6 = local_c;
      }
      *(byte *)((int)this + 5) = *(byte *)((int)this + 5) & 0xbf;
      *(uint *)((int)this + 0x14) = uVar6;
      if (*(int *)((int)this + 0x28) == 0) {
        wsprintfW((LPWSTR)((int)this + 0x42),u_ATL:%8.8X_6f03f4dc,this);
        *(LPWSTR *)((int)this + 0x28) = (LPWSTR)((int)this + 0x42);
      }
      memcpy(&local_6c,this,0x30);
      BVar3 = GetClassInfoExW(*(HINSTANCE *)((int)this + 0x14),*(LPCWSTR *)((int)this + 0x28),
                              &local_6c);
      *(short *)((int)this + 0x40) = (short)BVar3;
      if ((short)BVar3 == 0) {
        if (*(int *)((int)this + 0x5c) != 0) {
          pvVar5 = LoadImageW(DAT_6f041b28,(LPCWSTR)(uint)*(ushort *)((int)this + 0x5c),1,0x20,0x 20,
                              0);
          *(HANDLE *)((int)this + 0x18) = pvVar5;
          pvVar5 = LoadImageW(DAT_6f041b28,(LPCWSTR)(uint)*(ushort *)((int)this + 0x5c),1,0x10,0x 10,
                              0);
          *(HANDLE *)((int)this + 0x2c) = pvVar5;
        }
        AVar2 = RegisterClassExW((WNDCLASSEXW *)this);
        *(ATOM *)((int)this + 0x40) = AVar2;
      }
    }
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  }
  if (*(int *)((int)this + 0x30) != 0) {
    *param_1 = *(undefined4 *)((int)this + 0x34);
  }
  return *(undefined2 *)((int)this + 0x40);
}


#Nemam pojma sta li radi ovaj kod.
#Moguce da cuva i ucitava neke slike, mozda strelicu/kruzor ili u vezi cuvanja memorije

#MonitorFromWindow


int FUN_6f01b4f1(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_MonitorFromWindow_6f03f554);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f01b52c;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f01b52c:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Ovaj kod je mozda duzan da prati desavanje i prikazuje iz prozora.
#Ucitava biblioteku neku i uzima adresu prozora

#user32.dll
#na lokaciji 6f01b4f3


int FUN_6f01b4f1(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_MonitorFromWindow_6f03f554);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f01b52c;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f01b52c:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#na lokaciji 6f01b540


int FUN_6f01b53e(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_GetMonitorInfo_6f03f574);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f01b579;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f01b579:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}

#na lokaciji 6f027498


int FUN_6f027496(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_GetAncestor_6f03fb00);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f0274d1;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f0274d1:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#na lokaciji 6f027c1b


int FUN_6f027c19(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetProcessDefaultLayout_6f03fb0c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f027c50;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f027c50:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#nisam uopste siguran sta li treba uraditi ova funkcija
#po imenu "user32.dll" je mozda samo neka od WINDOWS funkcija za profil i sl.

#GetMonitorInfo


int FUN_6f01b53e(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_GetMonitorInfo_6f03f574);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f01b579;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f01b579:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Moguce je da ovaj kod ima slicno kao prethodni u vezi sa "Monitor"
#Cak i ako ne ovaj gleda kako li se uspostavlju informacije

#AtlAxWin
#na lokaciji 6f01b91c


uint FUN_6f01b8de(void)

{
  ATOM AVar1;
  tagWNDCLASSEXW local_38;
  uint local_8;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  Msg_6f041b0c = RegisterWindowMessageW(u_WM_ATLGETHOST_6f03f5bc);
  Msg_6f041b08 = RegisterWindowMessageW(u_WM_ATLGETCONTROL_6f03f598);
  local_38.cbSize = 0x30;
  local_8 = GetClassInfoExW(DAT_6f041b24,u_AtlAxWin_6f03f584,&local_38);
  if (local_8 == 0) {
    local_38.cbSize = 0x30;
    local_38.style = 0;
    local_38.lpfnWndProc = FUN_6f01b996;
    local_38.cbClsExtra = 0;
    local_38.cbWndExtra = 0;
    local_38.hInstance = DAT_6f041b24;
    local_38.hIcon = (HICON)0x0;
    local_38.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);
    local_38.lpszMenuName = (LPCWSTR)0x0;
    local_38.hIconSm = (HICON)0x0;
    local_38.hbrBackground = (HBRUSH)&DAT_00000006;
    local_38.lpszClassName = u_AtlAxWin_6f03f584;
    AVar1 = RegisterClassExW(&local_38);
    local_8 = (uint)AVar1;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  return local_8;
}


#na lokaciji 6f0320ae


undefined4 __fastcall FUN_6f03203f(int param_1)

{
  int *piVar1;
  int iVar2;
  tagRECT local_1c;
  void *local_c;
  int *local_8;
  
  *(undefined *)(param_1 + 0x11c) = 1;
  GetClientRect(*(HWND *)(param_1 + 0x50),&local_1c);
  *(int *)(param_1 + 0xcc) = local_1c.left;
  *(LONG *)(param_1 + 0xd0) = local_1c.top;
  *(LONG *)(param_1 + 0xd4) = local_1c.right;
  *(LONG *)(param_1 + 0xd8) = local_1c.bottom;
  *(LONG *)(param_1 + 0xdc) = local_1c.left;
  *(LONG *)(param_1 + 0xe0) = local_1c.top;
  *(LONG *)(param_1 + 0xe4) = local_1c.right;
  iVar2 = *(int *)(param_1 + 0xf0) + *(int *)(param_1 + 0xd0);
  *(LONG *)(param_1 + 0xe8) = local_1c.bottom;
  *(int *)(param_1 + 0xd8) = iVar2;
  *(int *)(param_1 + 0xe0) = iVar2;
  FUN_6f01b897((void *)(param_1 + 0xc4),u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),
               (int *)(param_1 + 0xcc),(LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,
               (LPVOID)0x0);
  local_c = (void *)(param_1 + 200);
  FUN_6f01b897(local_c,u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),(int *)(param_1 + 0xdc),
               (LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,(LPVOID)0x0);
  local_8 = (int *)0x0;
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&DAT_6f014e48,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&DAT_6f014e48,local_8);
    FUN_6f01d015((void *)(param_1 + 0xc4),(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
  }
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&LAB_6f014e28,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&LAB_6f014e28,local_8);
    FUN_6f01d015(local_c,(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return 0;
}


#na lokaciji 6f01b978



uint FUN_6f01b8de(void)

{
  ATOM AVar1;
  tagWNDCLASSEXW local_38;
  uint local_8;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  Msg_6f041b0c = RegisterWindowMessageW(u_WM_ATLGETHOST_6f03f5bc);
  Msg_6f041b08 = RegisterWindowMessageW(u_WM_ATLGETCONTROL_6f03f598);
  local_38.cbSize = 0x30;
  local_8 = GetClassInfoExW(DAT_6f041b24,u_AtlAxWin_6f03f584,&local_38);
  if (local_8 == 0) {
    local_38.cbSize = 0x30;
    local_38.style = 0;
    local_38.lpfnWndProc = FUN_6f01b996;
    local_38.cbClsExtra = 0;
    local_38.cbWndExtra = 0;
    local_38.hInstance = DAT_6f041b24;
    local_38.hIcon = (HICON)0x0;
    local_38.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);
    local_38.lpszMenuName = (LPCWSTR)0x0;
    local_38.hIconSm = (HICON)0x0;
    local_38.hbrBackground = (HBRUSH)&DAT_00000006;
    local_38.lpszClassName = u_AtlAxWin_6f03f584;
    AVar1 = RegisterClassExW(&local_38);
    local_8 = (uint)AVar1;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  return local_8;
}



#na lokaciji 6f01b922



uint FUN_6f01b8de(void)

{
  ATOM AVar1;
  tagWNDCLASSEXW local_38;
  uint local_8;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  Msg_6f041b0c = RegisterWindowMessageW(u_WM_ATLGETHOST_6f03f5bc);
  Msg_6f041b08 = RegisterWindowMessageW(u_WM_ATLGETCONTROL_6f03f598);
  local_38.cbSize = 0x30;
  local_8 = GetClassInfoExW(DAT_6f041b24,u_AtlAxWin_6f03f584,&local_38);
  if (local_8 == 0) {
    local_38.cbSize = 0x30;
    local_38.style = 0;
    local_38.lpfnWndProc = FUN_6f01b996;
    local_38.cbClsExtra = 0;
    local_38.cbWndExtra = 0;
    local_38.hInstance = DAT_6f041b24;
    local_38.hIcon = (HICON)0x0;
    local_38.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);
    local_38.lpszMenuName = (LPCWSTR)0x0;
    local_38.hIconSm = (HICON)0x0;
    local_38.hbrBackground = (HBRUSH)&DAT_00000006;
    local_38.lpszClassName = u_AtlAxWin_6f03f584;
    AVar1 = RegisterClassExW(&local_38);
    local_8 = (uint)AVar1;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  return local_8;
}


#na lokaciji 6f0320b3



undefined4 __fastcall FUN_6f03203f(int param_1)

{
  int *piVar1;
  int iVar2;
  tagRECT local_1c;
  void *local_c;
  int *local_8;
  
  *(undefined *)(param_1 + 0x11c) = 1;
  GetClientRect(*(HWND *)(param_1 + 0x50),&local_1c);
  *(int *)(param_1 + 0xcc) = local_1c.left;
  *(LONG *)(param_1 + 0xd0) = local_1c.top;
  *(LONG *)(param_1 + 0xd4) = local_1c.right;
  *(LONG *)(param_1 + 0xd8) = local_1c.bottom;
  *(LONG *)(param_1 + 0xdc) = local_1c.left;
  *(LONG *)(param_1 + 0xe0) = local_1c.top;
  *(LONG *)(param_1 + 0xe4) = local_1c.right;
  iVar2 = *(int *)(param_1 + 0xf0) + *(int *)(param_1 + 0xd0);
  *(LONG *)(param_1 + 0xe8) = local_1c.bottom;
  *(int *)(param_1 + 0xd8) = iVar2;
  *(int *)(param_1 + 0xe0) = iVar2;
  FUN_6f01b897((void *)(param_1 + 0xc4),u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),
               (int *)(param_1 + 0xcc),(LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,
               (LPVOID)0x0);
  local_c = (void *)(param_1 + 200);
  FUN_6f01b897(local_c,u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),(int *)(param_1 + 0xdc),
               (LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,(LPVOID)0x0);
  local_8 = (int *)0x0;
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&DAT_6f014e48,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&DAT_6f014e48,local_8);
    FUN_6f01d015((void *)(param_1 + 0xc4),(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
  }
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&LAB_6f014e28,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&LAB_6f014e28,local_8);
    FUN_6f01d015(local_c,(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return 0;
}



#na lokaciji 6f0320d7



undefined4 __fastcall FUN_6f03203f(int param_1)

{
  int *piVar1;
  int iVar2;
  tagRECT local_1c;
  void *local_c;
  int *local_8;
  
  *(undefined *)(param_1 + 0x11c) = 1;
  GetClientRect(*(HWND *)(param_1 + 0x50),&local_1c);
  *(int *)(param_1 + 0xcc) = local_1c.left;
  *(LONG *)(param_1 + 0xd0) = local_1c.top;
  *(LONG *)(param_1 + 0xd4) = local_1c.right;
  *(LONG *)(param_1 + 0xd8) = local_1c.bottom;
  *(LONG *)(param_1 + 0xdc) = local_1c.left;
  *(LONG *)(param_1 + 0xe0) = local_1c.top;
  *(LONG *)(param_1 + 0xe4) = local_1c.right;
  iVar2 = *(int *)(param_1 + 0xf0) + *(int *)(param_1 + 0xd0);
  *(LONG *)(param_1 + 0xe8) = local_1c.bottom;
  *(int *)(param_1 + 0xd8) = iVar2;
  *(int *)(param_1 + 0xe0) = iVar2;
  FUN_6f01b897((void *)(param_1 + 0xc4),u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),
               (int *)(param_1 + 0xcc),(LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,
               (LPVOID)0x0);
  local_c = (void *)(param_1 + 200);
  FUN_6f01b897(local_c,u_AtlAxWin_6f03f584,*(HWND *)(param_1 + 0x50),(int *)(param_1 + 0xdc),
               (LPCWSTR)&lpString_6f041bb8,0x56000000,0,(HMENU)0x0,(LPVOID)0x0);
  local_8 = (int *)0x0;
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&DAT_6f014e48,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&DAT_6f014e48,local_8);
    FUN_6f01d015((void *)(param_1 + 0xc4),(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
  }
  iVar2 = (**(code **)(**(int **)(param_1 + 0x98) + 0x78))
                    (*(int **)(param_1 + 0x98),&LAB_6f014e28,&DAT_6f014f48,&local_8,
                     *(undefined4 *)(param_1 + 0x90),1);
  if (-1 < iVar2) {
    (**(code **)(**(int **)(param_1 + 0x98) + 0x34))
              (*(int **)(param_1 + 0x98),&LAB_6f014e28,local_8);
    FUN_6f01d015(local_c,(int)local_8,(undefined4 *)0x0);
  }
  piVar1 = local_8;
  if (local_8 != (int *)0x0) {
    local_8 = (int *)0x0;
    (**(code **)(*piVar1 + 8))(piVar1);
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return 0;
}



#na lokaciji 6f01b5cc


/* WARNING: Removing unreachable block (ram,0x6f01b621) */
/* WARNING: Removing unreachable block (ram,0x6f01b88b) */

undefined4 FUN_6f01b58b(void)

{
  undefined4 uVar1;
  int iVar2;
  HMENU pHVar3;
  HMENU pHVar4;
  int extraout_ECX;
  int iVar5;
  WCHAR local_1058 [1024];
  undefined local_858 [2008];
  undefined4 uStackY_80;
  LPCMENUITEMINFOW pMVar6;
  UINT UVar7;
  BOOL BVar8;
  UINT UVar9;
  
  FUN_6f03c940();
  FUN_6f01b8de();
  GetClientRect(*(HWND *)(extraout_ECX + 4),(LPRECT)&stack0xffffffa8);
  uVar1 = FUN_6f01b897((void *)(extraout_ECX + 0x9c),u_AtlAxWin_6f03f584,*(HWND *)(extraout_ECX + 4)
                       ,(int *)&stack0xffffffa8,(LPCWSTR)&lpString_6f041bb8,0x52000000,0,(HMENU)0 x0,
                       (LPVOID)0x0);
  *(undefined4 *)(extraout_ECX + 0x28) = uVar1;
  iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x44) + 0x78))();
  iVar5 = extraout_ECX;
  if (-1 < iVar2) {
    (**(code **)(**(int **)(extraout_ECX + 0x44) + 0x34))();
    iVar5 = FUN_6f01d015((void *)(extraout_ECX + 0x9c),0,(undefined4 *)0x0);
  }
  SendMessageW(*(HWND *)(iVar5 + 4),0x80,1,*(LPARAM *)(iVar5 + 0x94));
  SendMessageW(*(HWND *)(iVar5 + 4),0x80,0,*(LPARAM *)(iVar5 + 0x98));
  pHVar3 = GetMenu(*(HWND *)(iVar5 + 4));
  iVar2 = (**(code **)(**(int **)(iVar5 + 0x50) + 0x28))();
  if (iVar2 != 0) {
    iVar2 = (**(code **)(**(int **)(iVar5 + 0x50) + 0x28))();
    if ((iVar2 != 0) && (iVar2 = FUN_6f01bbf9(local_858,local_1058,0x400), iVar2 != 0)) {
      pMVar6 = (LPCMENUITEMINFOW)&stack0xffffffb8;
      BVar8 = 0;
      UVar7 = 0x5e2;
      pHVar4 = GetSubMenu(pHVar3,1);
      SetMenuItemInfoW(pHVar4,UVar7,BVar8,pMVar6);
    }
    iVar2 = (**(code **)(**(int **)(iVar5 + 0x50) + 0x28))();
    if ((iVar2 != 0) && (iVar2 = FUN_6f01bbf9(local_858,local_1058,0x400), iVar2 != 0)) {
      pMVar6 = (LPCMENUITEMINFOW)&stack0xffffffb8;
      BVar8 = 0;
      UVar7 = 0x5e0;
      pHVar4 = GetSubMenu(pHVar3,1);
      SetMenuItemInfoW(pHVar4,UVar7,BVar8,pMVar6);
    }
    iVar2 = (**(code **)(**(int **)(iVar5 + 0x50) + 0x28))();
    if ((iVar2 != 0) && (iVar2 = FUN_6f01bbf9(local_858,local_1058,0x400), iVar2 != 0)) {
      pMVar6 = (LPCMENUITEMINFOW)&stack0xffffffb8;
      BVar8 = 0;
      UVar7 = 0x5e1;
      uStackY_80 = 0x6f01b79d;
      pHVar4 = GetSubMenu(pHVar3,1);
      SetMenuItemInfoW(pHVar4,UVar7,BVar8,pMVar6);
    }
    iVar2 = (**(code **)(**(int **)(iVar5 + 0x50) + 0x28))();
    if (iVar2 != 0) {
      pMVar6 = (LPCMENUITEMINFOW)&stack0xffffffb8;
      UVar9 = 0;
      UVar7 = 0x5df;
      pHVar4 = GetSubMenu(pHVar3,0);
      SetMenuItemInfoW(pHVar4,UVar7,UVar9,pMVar6);
    }
  }
  (**(code **)(**(int **)(iVar5 + 0x60) + 0x5c))();
  UVar9 = 0;
  UVar7 = 0x5e6;
  pHVar4 = GetSubMenu(pHVar3,0);
  DeleteMenu(pHVar4,UVar7,UVar9);
  (**(code **)(*(int *)(iVar5 + 0x6c) + 0x34))();
  iVar2 = 0;
  (**(code **)(**(int **)(iVar5 + 0x60) + 0x5c))();
  if (iVar2 == 0) {
    UVar9 = 0;
    UVar7 = 0x5e7;
    pHVar3 = GetSubMenu(pHVar3,0);
    DeleteMenu(pHVar3,UVar7,UVar9);
  }
  DrawMenuBar(*(HWND *)(iVar5 + 4));
  SetFocus(*(HWND *)(iVar5 + 0x9c));
  (**(code **)(**(int **)(iVar5 + 0x44) + 0x38))();
  return 0;
}


#na lokaciji 6f0288c6



uint * FUN_6f028859(uint *param_1,ushort *param_2)

{
  void *pvVar1;
  short *psVar2;
  int iVar3;
  int iVar4;
  uint *_Dst;
  uint *puVar5;
  size_t sVar6;
  SIZE_T dwBytes;
  uint uVar7;
  bool bVar8;
  int local_20;
  short *local_1c;
  short *local_18;
  int local_14;
  short *local_10;
  void *local_c;
  uint local_8;
  
  pvVar1 = (void *)FUN_6f028a5d(param_1);
  sVar6 = (int)pvVar1 - (int)param_1;
  local_8 = (uint)(*(short *)((int)param_1 + 2) == -1);
  puVar5 = param_1 + 4;
  if (*(short *)((int)param_1 + 2) != -1) {
    puVar5 = param_1 + 2;
  }
  local_1c = (short *)(uint)*(ushort *)puVar5;
  local_14 = 0;
  dwBytes = sVar6;
  local_18 = (short *)pvVar1;
  local_10 = local_1c;
  if (local_1c != (short *)0x0) {
    do {
      local_c = (void *)FUN_6f028ae6((int)pvVar1,local_8);
      psVar2 = (short *)((int)pvVar1 + 0x18);
      if (local_8 == 0) {
        psVar2 = (short *)((int)pvVar1 + 0x12);
      }
      if (*psVar2 == 0x7b) {
        local_14 = 1;
        iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
        bVar8 = local_8 != 0;
        if (local_8 == 0) {
          uVar7 = (uint)*(ushort *)((int)pvVar1 + 0x10);
        }
        else {
          uVar7 = *(uint *)((int)pvVar1 + 0x14);
        }
        iVar4 = FUN_6f028b3a(uVar7,param_2,&local_20);
        dwBytes = iVar4 + (-(uint)bVar8 & 6) + dwBytes + 0x67 + iVar3 * 2 & 0xfffffffc;
      }
      else {
        dwBytes = (int)local_c + (dwBytes - (int)pvVar1);
      }
      local_10 = (short *)((int)local_10 + -1);
      pvVar1 = local_c;
    } while (local_10 != (short *)0x0);
    if (local_14 != 0) {
      _Dst = (uint *)GlobalAlloc(0,dwBytes);
      memcpy(_Dst,param_1,sVar6);
      psVar2 = local_18;
      pvVar1 = (void *)((int)_Dst + sVar6);
      puVar5 = _Dst + 4;
      if (*(short *)((int)_Dst + 2) != -1) {
        puVar5 = _Dst + 2;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = local_1c;
      do {
        local_c = (void *)FUN_6f028ae6((int)psVar2,local_8);
        if (local_8 == 0) {
          local_10 = (short *)((int)psVar2 + 0x12);
        }
        else {
          local_10 = (short *)((int)psVar2 + 0x18);
        }
        if (*local_10 == 0x7b) {
          sVar6 = (-(uint)(local_8 != 0) & 6) + 0x12;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
          sVar6 = iVar3 * 2 + 2;
          memcpy(pvVar1,u_AtlAxWin_6f03f584,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          memcpy(pvVar1,local_10,0x4e);
          if (local_8 == 0) {
            uVar7 = (uint)*(ushort *)((int)psVar2 + 0x10);
          }
          else {
            uVar7 = *(uint *)((int)psVar2 + 0x14);
          }
          sVar6 = FUN_6f028b3a(uVar7,param_2,(int *)&local_1c);
          *(short *)((int)pvVar1 + 0x4e) = (short)sVar6;
          memcpy((void *)((int)pvVar1 + 0x50),local_1c,sVar6);
          uVar7 = (int)pvVar1 + 0x50 + sVar6;
          pvVar1 = (void *)(uVar7 + (~uVar7 + 1 & 3));
        }
        else {
          sVar6 = (int)local_c - (int)psVar2;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
        }
        puVar5 = _Dst + 4;
        if (*(short *)((int)_Dst + 2) != -1) {
          puVar5 = _Dst + 2;
        }
        *(short *)puVar5 = *(short *)puVar5 + 1;
        local_18 = (short *)((int)local_18 + -1);
        param_1 = _Dst;
        psVar2 = (short *)local_c;
      } while (local_18 != (short *)0x0);
    }
  }
  return param_1;
}


#na lokaciji 6f0289b1



uint * FUN_6f028859(uint *param_1,ushort *param_2)

{
  void *pvVar1;
  short *psVar2;
  int iVar3;
  int iVar4;
  uint *_Dst;
  uint *puVar5;
  size_t sVar6;
  SIZE_T dwBytes;
  uint uVar7;
  bool bVar8;
  int local_20;
  short *local_1c;
  short *local_18;
  int local_14;
  short *local_10;
  void *local_c;
  uint local_8;
  
  pvVar1 = (void *)FUN_6f028a5d(param_1);
  sVar6 = (int)pvVar1 - (int)param_1;
  local_8 = (uint)(*(short *)((int)param_1 + 2) == -1);
  puVar5 = param_1 + 4;
  if (*(short *)((int)param_1 + 2) != -1) {
    puVar5 = param_1 + 2;
  }
  local_1c = (short *)(uint)*(ushort *)puVar5;
  local_14 = 0;
  dwBytes = sVar6;
  local_18 = (short *)pvVar1;
  local_10 = local_1c;
  if (local_1c != (short *)0x0) {
    do {
      local_c = (void *)FUN_6f028ae6((int)pvVar1,local_8);
      psVar2 = (short *)((int)pvVar1 + 0x18);
      if (local_8 == 0) {
        psVar2 = (short *)((int)pvVar1 + 0x12);
      }
      if (*psVar2 == 0x7b) {
        local_14 = 1;
        iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
        bVar8 = local_8 != 0;
        if (local_8 == 0) {
          uVar7 = (uint)*(ushort *)((int)pvVar1 + 0x10);
        }
        else {
          uVar7 = *(uint *)((int)pvVar1 + 0x14);
        }
        iVar4 = FUN_6f028b3a(uVar7,param_2,&local_20);
        dwBytes = iVar4 + (-(uint)bVar8 & 6) + dwBytes + 0x67 + iVar3 * 2 & 0xfffffffc;
      }
      else {
        dwBytes = (int)local_c + (dwBytes - (int)pvVar1);
      }
      local_10 = (short *)((int)local_10 + -1);
      pvVar1 = local_c;
    } while (local_10 != (short *)0x0);
    if (local_14 != 0) {
      _Dst = (uint *)GlobalAlloc(0,dwBytes);
      memcpy(_Dst,param_1,sVar6);
      psVar2 = local_18;
      pvVar1 = (void *)((int)_Dst + sVar6);
      puVar5 = _Dst + 4;
      if (*(short *)((int)_Dst + 2) != -1) {
        puVar5 = _Dst + 2;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = local_1c;
      do {
        local_c = (void *)FUN_6f028ae6((int)psVar2,local_8);
        if (local_8 == 0) {
          local_10 = (short *)((int)psVar2 + 0x12);
        }
        else {
          local_10 = (short *)((int)psVar2 + 0x18);
        }
        if (*local_10 == 0x7b) {
          sVar6 = (-(uint)(local_8 != 0) & 6) + 0x12;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
          sVar6 = iVar3 * 2 + 2;
          memcpy(pvVar1,u_AtlAxWin_6f03f584,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          memcpy(pvVar1,local_10,0x4e);
          if (local_8 == 0) {
            uVar7 = (uint)*(ushort *)((int)psVar2 + 0x10);
          }
          else {
            uVar7 = *(uint *)((int)psVar2 + 0x14);
          }
          sVar6 = FUN_6f028b3a(uVar7,param_2,(int *)&local_1c);
          *(short *)((int)pvVar1 + 0x4e) = (short)sVar6;
          memcpy((void *)((int)pvVar1 + 0x50),local_1c,sVar6);
          uVar7 = (int)pvVar1 + 0x50 + sVar6;
          pvVar1 = (void *)(uVar7 + (~uVar7 + 1 & 3));
        }
        else {
          sVar6 = (int)local_c - (int)psVar2;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
        }
        puVar5 = _Dst + 4;
        if (*(short *)((int)_Dst + 2) != -1) {
          puVar5 = _Dst + 2;
        }
        *(short *)puVar5 = *(short *)puVar5 + 1;
        local_18 = (short *)((int)local_18 + -1);
        param_1 = _Dst;
        psVar2 = (short *)local_c;
      } while (local_18 != (short *)0x0);
    }
  }
  return param_1;
}


#na lokaciji 6f0289c1



uint * FUN_6f028859(uint *param_1,ushort *param_2)

{
  void *pvVar1;
  short *psVar2;
  int iVar3;
  int iVar4;
  uint *_Dst;
  uint *puVar5;
  size_t sVar6;
  SIZE_T dwBytes;
  uint uVar7;
  bool bVar8;
  int local_20;
  short *local_1c;
  short *local_18;
  int local_14;
  short *local_10;
  void *local_c;
  uint local_8;
  
  pvVar1 = (void *)FUN_6f028a5d(param_1);
  sVar6 = (int)pvVar1 - (int)param_1;
  local_8 = (uint)(*(short *)((int)param_1 + 2) == -1);
  puVar5 = param_1 + 4;
  if (*(short *)((int)param_1 + 2) != -1) {
    puVar5 = param_1 + 2;
  }
  local_1c = (short *)(uint)*(ushort *)puVar5;
  local_14 = 0;
  dwBytes = sVar6;
  local_18 = (short *)pvVar1;
  local_10 = local_1c;
  if (local_1c != (short *)0x0) {
    do {
      local_c = (void *)FUN_6f028ae6((int)pvVar1,local_8);
      psVar2 = (short *)((int)pvVar1 + 0x18);
      if (local_8 == 0) {
        psVar2 = (short *)((int)pvVar1 + 0x12);
      }
      if (*psVar2 == 0x7b) {
        local_14 = 1;
        iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
        bVar8 = local_8 != 0;
        if (local_8 == 0) {
          uVar7 = (uint)*(ushort *)((int)pvVar1 + 0x10);
        }
        else {
          uVar7 = *(uint *)((int)pvVar1 + 0x14);
        }
        iVar4 = FUN_6f028b3a(uVar7,param_2,&local_20);
        dwBytes = iVar4 + (-(uint)bVar8 & 6) + dwBytes + 0x67 + iVar3 * 2 & 0xfffffffc;
      }
      else {
        dwBytes = (int)local_c + (dwBytes - (int)pvVar1);
      }
      local_10 = (short *)((int)local_10 + -1);
      pvVar1 = local_c;
    } while (local_10 != (short *)0x0);
    if (local_14 != 0) {
      _Dst = (uint *)GlobalAlloc(0,dwBytes);
      memcpy(_Dst,param_1,sVar6);
      psVar2 = local_18;
      pvVar1 = (void *)((int)_Dst + sVar6);
      puVar5 = _Dst + 4;
      if (*(short *)((int)_Dst + 2) != -1) {
        puVar5 = _Dst + 2;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = local_1c;
      do {
        local_c = (void *)FUN_6f028ae6((int)psVar2,local_8);
        if (local_8 == 0) {
          local_10 = (short *)((int)psVar2 + 0x12);
        }
        else {
          local_10 = (short *)((int)psVar2 + 0x18);
        }
        if (*local_10 == 0x7b) {
          sVar6 = (-(uint)(local_8 != 0) & 6) + 0x12;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          iVar3 = lstrlenW(u_AtlAxWin_6f03f584);
          sVar6 = iVar3 * 2 + 2;
          memcpy(pvVar1,u_AtlAxWin_6f03f584,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
          memcpy(pvVar1,local_10,0x4e);
          if (local_8 == 0) {
            uVar7 = (uint)*(ushort *)((int)psVar2 + 0x10);
          }
          else {
            uVar7 = *(uint *)((int)psVar2 + 0x14);
          }
          sVar6 = FUN_6f028b3a(uVar7,param_2,(int *)&local_1c);
          *(short *)((int)pvVar1 + 0x4e) = (short)sVar6;
          memcpy((void *)((int)pvVar1 + 0x50),local_1c,sVar6);
          uVar7 = (int)pvVar1 + 0x50 + sVar6;
          pvVar1 = (void *)(uVar7 + (~uVar7 + 1 & 3));
        }
        else {
          sVar6 = (int)local_c - (int)psVar2;
          memcpy(pvVar1,psVar2,sVar6);
          pvVar1 = (void *)((int)pvVar1 + sVar6);
        }
        puVar5 = _Dst + 4;
        if (*(short *)((int)_Dst + 2) != -1) {
          puVar5 = _Dst + 2;
        }
        *(short *)puVar5 = *(short *)puVar5 + 1;
        local_18 = (short *)((int)local_18 + -1);
        param_1 = _Dst;
        psVar2 = (short *)local_c;
      } while (local_18 != (short *)0x0);
    }
  }
  return param_1;
}



#Verujem da je ovo primerak pravljenja i osposobljavanja menija za igru
#cak i ako ne mozda i pripremanje posle handshake da prede u drugciju fazu igre?

#WM_ALTGETCONTROL


uint FUN_6f01b8de(void)

{
  ATOM AVar1;
  tagWNDCLASSEXW local_38;
  uint local_8;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  Msg_6f041b0c = RegisterWindowMessageW(u_WM_ATLGETHOST_6f03f5bc);
  Msg_6f041b08 = RegisterWindowMessageW(u_WM_ATLGETCONTROL_6f03f598);
  local_38.cbSize = 0x30;
  local_8 = GetClassInfoExW(DAT_6f041b24,u_AtlAxWin_6f03f584,&local_38);
  if (local_8 == 0) {
    local_38.cbSize = 0x30;
    local_38.style = 0;
    local_38.lpfnWndProc = FUN_6f01b996;
    local_38.cbClsExtra = 0;
    local_38.cbWndExtra = 0;
    local_38.hInstance = DAT_6f041b24;
    local_38.hIcon = (HICON)0x0;
    local_38.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);
    local_38.lpszMenuName = (LPCWSTR)0x0;
    local_38.hIconSm = (HICON)0x0;
    local_38.hbrBackground = (HBRUSH)&DAT_00000006;
    local_38.lpszClassName = u_AtlAxWin_6f03f584;
    AVar1 = RegisterClassExW(&local_38);
    local_8 = (uint)AVar1;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  return local_8;
}


#Verovatno string ili kod duzan za uzimanje kontrole
#naravno sudeci po imenu. MOzda preko ATL

#WM_ATLGETHOST


uint FUN_6f01b8de(void)

{
  ATOM AVar1;
  tagWNDCLASSEXW local_38;
  uint local_8;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  Msg_6f041b0c = RegisterWindowMessageW(u_WM_ATLGETHOST_6f03f5bc);
  Msg_6f041b08 = RegisterWindowMessageW(u_WM_ATLGETCONTROL_6f03f598);
  local_38.cbSize = 0x30;
  local_8 = GetClassInfoExW(DAT_6f041b24,u_AtlAxWin_6f03f584,&local_38);
  if (local_8 == 0) {
    local_38.cbSize = 0x30;
    local_38.style = 0;
    local_38.lpfnWndProc = FUN_6f01b996;
    local_38.cbClsExtra = 0;
    local_38.cbWndExtra = 0;
    local_38.hInstance = DAT_6f041b24;
    local_38.hIcon = (HICON)0x0;
    local_38.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);
    local_38.lpszMenuName = (LPCWSTR)0x0;
    local_38.hIconSm = (HICON)0x0;
    local_38.hbrBackground = (HBRUSH)&DAT_00000006;
    local_38.lpszClassName = u_AtlAxWin_6f03f584;
    AVar1 = RegisterClassExW(&local_38);
    local_8 = (uint)AVar1;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_6f041b54);
  return local_8;
}


#Isti kod
#Samo ovaj pod imenom uzima HOST

#ZoneLobbyWindow

#Na zalost, ovaj nema kod niti reference ikakve.
#mozda moze posluziti kao definisanje necega u kodu ili sl.


# #32770


bool __fastcall FUN_6f01e37a(undefined4 *param_1)

{
  HWND hWnd;
  int iVar1;
  WCHAR local_14 [8];
  
  hWnd = GetParent((HWND)*param_1);
  GetClassNameW(hWnd,local_14,8);
  iVar1 = lstrcmpW(local_14,u_#32770_6f03f738);
  return (bool)('\x01' - (iVar1 != 0));
}


#Nema specificnog naziva u string imenu.
#U kodu se vidi da brzo poziva jednu od funkcija.

#AXWIN


undefined4 __thiscall FUN_6f01f231(void *this,int *param_1,int *param_2,int param_3)

{
  int *piVar1;
  int *piVar2;
  undefined4 *puVar3;
  int iVar4;
  undefined4 *puVar5;
  undefined4 uVar6;
  int *local_18;
  int *local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  if (param_1 != (int *)0x0) {
    FUN_6f0170ff((int *)((int)this + 0x50),param_1);
    piVar1 = (int *)((int)this + 0x54);
    (**(code **)*param_1)(param_1,&DAT_6f015dc0,piVar1);
    piVar2 = (int *)*piVar1;
    if (piVar2 != (int *)0x0) {
      (**(code **)(*piVar2 + 0x58))(piVar2,1,(int)this + 0x90);
      if ((*(byte *)((int)this + 0x92) & 2) != 0) {
                    /* WARNING: Load size is inaccurate */
        puVar3 = (undefined4 *)(**(code **)(*this + 0xc))();
        local_c = (int *)0x0;
        if (puVar3 != (undefined4 *)0x0) {
          (**(code **)*puVar3)(puVar3,&DAT_6f03f718,&local_c);
        }
        (**(code **)(*(int *)*piVar1 + 0xc))((int *)*piVar1,local_c);
        if (local_c != (int *)0x0) {
          (**(code **)(*local_c + 8))(local_c);
        }
      }
      puVar3 = (undefined4 *)*piVar1;
      local_14 = (int *)0x0;
      if (puVar3 != (undefined4 *)0x0) {
        (**(code **)*puVar3)(puVar3,&DAT_6f015ec0,&local_14);
      }
      if (((char)param_2 == '\0') && (local_14 != (int *)0x0)) {
        if (param_3 == 0) {
          (**(code **)(*local_14 + 0x20))(local_14);
        }
        else {
          (**(code **)(*local_14 + 0x14))(local_14,param_3);
        }
      }
      if ((*(byte *)((int)this + 0x92) & 2) == 0) {
                    /* WARNING: Load size is inaccurate */
        puVar3 = (undefined4 *)(**(code **)(*this + 0xc))();
        param_2 = (int *)0x0;
        if (puVar3 != (undefined4 *)0x0) {
          (**(code **)*puVar3)(puVar3,&DAT_6f03f718,&param_2);
        }
        (**(code **)(*(int *)*piVar1 + 0xc))((int *)*piVar1,param_2);
        if (param_2 != (int *)0x0) {
          (**(code **)(*param_2 + 8))(param_2);
        }
      }
      *(undefined4 *)((int)this + 0x80) = 0;
      puVar3 = (undefined4 *)((int)this + 0x60);
      iVar4 = (*(code *)**(undefined4 **)*piVar1)((undefined4 *)*piVar1,&LAB_6f015f90,puVar3);
      if (iVar4 < 0) {
        iVar4 = (*(code *)**(undefined4 **)*piVar1)((undefined4 *)*piVar1,&LAB_6f015f80,puVar3);
        *(undefined4 *)((int)this + 0x80) = 3;
      }
      else {
        *(undefined4 *)((int)this + 0x80) = 7;
      }
      if (iVar4 < 0) {
        (*(code *)**(undefined4 **)*piVar1)((undefined4 *)*piVar1,&LAB_6f015f70,puVar3);
        *(undefined4 *)((int)this + 0x80) = 1;
      }
                    /* WARNING: Load size is inaccurate */
      puVar5 = (undefined4 *)(**(code **)(*this + 0xc))();
      local_8 = (int *)0x0;
      if (puVar5 != (undefined4 *)0x0) {
        (**(code **)*puVar5)(puVar5,&DAT_6f03f678,&local_8);
      }
      (**(code **)(*(int *)*piVar1 + 0x4c))((int *)*piVar1,local_8,(int)this + 0x8c);
      if (*(int *)((int)this + 0x80) != 0) {
        (**(code **)(*(int *)*puVar3 + 0x1c))((int *)*puVar3,1,0,local_8);
      }
      (**(code **)(*(int *)*piVar1 + 0x14))((int *)*piVar1,u_AXWIN_6f03f748,0);
      GetClientRect(*(HWND *)((int)this + 4),(LPRECT)((int)this + 0xa4));
      piVar2 = (int *)((int)this + 0x9c);
      *piVar2 = *(int *)((int)this + 0xac) - *(int *)((int)this + 0xa4);
      *(int *)((int)this + 0xa0) = *(int *)((int)this + 0xb0) - *(int *)((int)this + 0xa8);
      FUN_6f01dd19(piVar2,(int *)((int)this + 0x94));
      (**(code **)(*(int *)*piVar1 + 0x44))((int *)*piVar1,1,(int)this + 0x94);
      (**(code **)(*(int *)*piVar1 + 0x48))((int *)*piVar1,1,(int)this + 0x94);
      FUN_6f017f65((int *)((int)this + 0x94),piVar2);
      *(int *)((int)this + 0xac) = *piVar2 + *(int *)((int)this + 0xa4);
      *(int *)((int)this + 0xb0) = *(int *)((int)this + 0xa8) + *(int *)((int)this + 0xa0);
                    /* WARNING: Load size is inaccurate */
      puVar3 = (undefined4 *)(**(code **)(*this + 0xc))();
      local_10 = (int *)0x0;
      if (puVar3 != (undefined4 *)0x0) {
        (**(code **)*puVar3)(puVar3,&DAT_6f03f718,&local_10);
      }
      (**(code **)(*(int *)*piVar1 + 0x2c))
                ((int *)*piVar1,0xfffffffb,0,local_10,0,*(undefined4 *)((int)this + 4),
                 (int *)((int)this + 0xa4));
      RedrawWindow(*(HWND *)((int)this + 4),(RECT *)0x0,(HRGN)0x0,0x507);
      if (local_10 != (int *)0x0) {
        (**(code **)(*local_10 + 8))(local_10);
      }
      if (local_8 != (int *)0x0) {
        (**(code **)(*local_8 + 8))(local_8);
      }
      if (local_14 != (int *)0x0) {
        (**(code **)(*local_14 + 8))(local_14);
      }
    }
    local_18 = (int *)0x0;
    (**(code **)*param_1)(param_1,&DAT_6f015e70,&local_18);
    piVar1 = local_18;
    if (local_18 != (int *)0x0) {
      iVar4 = *local_18;
                    /* WARNING: Load size is inaccurate */
      uVar6 = (**(code **)(*this + 0xc))();
      (**(code **)(iVar4 + 0xc))(piVar1,uVar6);
      if (local_18 != (int *)0x0) {
        (**(code **)(*local_18 + 8))(local_18);
      }
    }
  }
  return 0;
}


#Po kodu u nekim predelima vidim da imaju neke veze oko klijenta
#Nikako nema predstave sta li drugo traze ili rade sa klijentom.

#ChatContol

#Ovaj takode string nema kod ili reference
#Ali po imenu bi mogo reci da se neka kontrola caskanja vodi sa stringom


#AXWIN Frame Window


undefined4 FUN_6f023261(int param_1,undefined4 *param_2)

{
  ushort uVar1;
  int local_14 [4];
  
  if (*(int *)(param_1 + -0x1c) == 0) {
    local_14[0] = -0x80000000;
    local_14[1] = 0;
    local_14[2] = 0;
    local_14[3] = 0;
    if (DAT_6f03f978 == 0) {
      DAT_6f03f978 = 0;
    }
    uVar1 = FUN_6f018b30(0x6f041b20,(WNDCLASSEXW *)&DAT_6f03f948,(UINT *)(param_1 + -4));
    FUN_6f02375e((void *)(param_1 + -0x20),(HWND)0x0,local_14,u_AXWIN_Frame_Window_6f03f920,0xcf 0000
                 ,0,(HMENU)0x0,uVar1,(LPVOID)0x0);
  }
  *param_2 = *(undefined4 *)(param_1 + -0x1c);
  return 0;
}


#sudeci po imenu stringa mogo bi reci da je u vezi neko uramljivanje prozora
#Mogao bi posluziti mozda kod onoga da pri pocinjanju igre se urami prozor gde ce biti igra

#AXWIN UI Window


undefined4 FUN_6f02340d(int param_1,undefined4 *param_2)

{
  ushort uVar1;
  int local_14 [4];
  
  if (*(int *)(param_1 + -0x1c) == 0) {
    local_14[0] = -0x80000000;
    local_14[1] = 0x80000000;
    local_14[2] = 0;
    local_14[3] = 0;
    if (DAT_6f03fa18 == 0) {
      DAT_6f03fa18 = 0;
    }
    uVar1 = FUN_6f018b30(0x6f041b20,(WNDCLASSEXW *)&DAT_6f03f9e8,(UINT *)(param_1 + -4));
    FUN_6f02375e((void *)(param_1 + -0x20),(HWND)0x0,local_14,u_AXWIN_UI_Window_6f03f9c8,0xcf000 0,0,
                 (HMENU)0x0,uVar1,(LPVOID)0x0);
  }
  *param_2 = *(undefined4 *)(param_1 + -0x1c);
  return 0;
}


#Moguce da je ucitavanje UI/Teksture prozora
#nisam siguran ima li jos sta?

#(spremi se 'we are cooked ahh string')
#SOFTWARE\Microsoft\zone.com\Free Games 1.0\Prefrences

#na lokaciji 6f027e03


int FUN_6f027d69(int *param_1,LPCWSTR param_2,ushort *param_3)

{
  LPWSTR lpString1;
  LPCWSTR lpString2;
  int iVar1;
  LSTATUS LVar2;
  WCHAR local_80c [1024];
  LPWSTR local_c;
  HKEY local_8;
  
  local_8 = (HKEY)0x0;
  if ((((param_2 == (LPCWSTR)0x0) || (param_3 == (ushort *)0x0)) || (*param_2 == L'\0')) ||
     (*param_3 == 0)) {
    iVar1 = -0x7fffbffb;
  }
  else {
    lstrcpyW((LPWSTR)(param_1 + 0x2c),param_2);
    lpString1 = (LPWSTR)(param_1 + 0x1c);
    local_c = lpString1;
    lpString2 = (LPCWSTR)FUN_6f03bfcf(param_3);
    lstrcpyW(lpString1,lpString2);
    param_2 = (LPCWSTR)0x0;
    iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&DAT_6f014d08,&DAT_6f014c48,&param_2);
    if (iVar1 < 0) {
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
    }
    else {
      wsprintfW(local_80c,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58 ,
                lpString1);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0x20019,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Zone",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      wsprintfW(local_80c,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,param_1 + 0x2c);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0xf003f,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Lobby",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
      iVar1 = 0;
    }
  }
  return iVar1;
}


#na lokaciji 6f027e70


int FUN_6f027d69(int *param_1,LPCWSTR param_2,ushort *param_3)

{
  LPWSTR lpString1;
  LPCWSTR lpString2;
  int iVar1;
  LSTATUS LVar2;
  WCHAR local_80c [1024];
  LPWSTR local_c;
  HKEY local_8;
  
  local_8 = (HKEY)0x0;
  if ((((param_2 == (LPCWSTR)0x0) || (param_3 == (ushort *)0x0)) || (*param_2 == L'\0')) ||
     (*param_3 == 0)) {
    iVar1 = -0x7fffbffb;
  }
  else {
    lstrcpyW((LPWSTR)(param_1 + 0x2c),param_2);
    lpString1 = (LPWSTR)(param_1 + 0x1c);
    local_c = lpString1;
    lpString2 = (LPCWSTR)FUN_6f03bfcf(param_3);
    lstrcpyW(lpString1,lpString2);
    param_2 = (LPCWSTR)0x0;
    iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&DAT_6f014d08,&DAT_6f014c48,&param_2);
    if (iVar1 < 0) {
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
    }
    else {
      wsprintfW(local_80c,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58 ,
                lpString1);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0x20019,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Zone",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      wsprintfW(local_80c,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,param_1 + 0x2c);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0xf003f,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Lobby",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
      iVar1 = 0;
    }
  }
  return iVar1;
}


#na lokaciji 6f027f91


int FUN_6f027edd(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  LSTATUS LVar4;
  WCHAR local_814 [1024];
  int *local_14;
  DWORD local_10;
  int *local_c;
  HKEY local_8;
  
  piVar1 = param_1;
  local_8 = (HKEY)0x0;
  while (puVar2 = (undefined4 *)FUN_6f02587b(piVar1 + 8), puVar2 != (undefined4 *)0x0) {
    if ((HWND)*puVar2 != (HWND)0x0) {
      DestroyWindow((HWND)*puVar2);
    }
    if (puVar2 != (undefined4 *)0x0) {
      FUN_6f0263b0((int)puVar2);
      FUN_6f03b71c((int)puVar2);
    }
  }
  FUN_6f028dee((ushort *)(piVar1 + 99),FUN_6f0284c9,piVar1);
  local_14 = piVar1 + 0x2c;
  if ((*(short *)(piVar1 + 0x2c) == 0) || (*(short *)(piVar1 + 0x1c) == 0)) {
LAB_6f028069:
    iVar3 = 0;
  }
  else {
    param_1 = (int *)0x0;
    local_c = piVar1 + 0x1c;
    iVar3 = (**(code **)(*piVar1 + 0x74))(piVar1,&DAT_6f014d08,&DAT_6f014c48,&param_1);
    if (iVar3 < 0) {
      if (param_1 == (int *)0x0) {
        return iVar3;
      }
      (**(code **)(*param_1 + 8))(param_1);
      return iVar3;
    }
    wsprintfW(local_814,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
              piVar1 + 0x1c);
    LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
    if (LVar4 == 0) {
      (**(code **)(*param_1 + 0xa0))(param_1,L"Zone",local_8);
      RegCloseKey(local_8);
      wsprintfW(local_814,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,local_14);
      LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                              (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
      if (LVar4 == 0) {
        (**(code **)(*param_1 + 0xa0))(param_1,L"Lobby",local_8);
        RegCloseKey(local_8);
        if (param_1 != (int *)0x0) {
          (**(code **)(*param_1 + 8))(param_1);
        }
        goto LAB_6f028069;
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
    iVar3 = -0x7fffbffb;
  }
  return iVar3;
}



#na lokaciji 6f027ffa


int FUN_6f027edd(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  LSTATUS LVar4;
  WCHAR local_814 [1024];
  int *local_14;
  DWORD local_10;
  int *local_c;
  HKEY local_8;
  
  piVar1 = param_1;
  local_8 = (HKEY)0x0;
  while (puVar2 = (undefined4 *)FUN_6f02587b(piVar1 + 8), puVar2 != (undefined4 *)0x0) {
    if ((HWND)*puVar2 != (HWND)0x0) {
      DestroyWindow((HWND)*puVar2);
    }
    if (puVar2 != (undefined4 *)0x0) {
      FUN_6f0263b0((int)puVar2);
      FUN_6f03b71c((int)puVar2);
    }
  }
  FUN_6f028dee((ushort *)(piVar1 + 99),FUN_6f0284c9,piVar1);
  local_14 = piVar1 + 0x2c;
  if ((*(short *)(piVar1 + 0x2c) == 0) || (*(short *)(piVar1 + 0x1c) == 0)) {
LAB_6f028069:
    iVar3 = 0;
  }
  else {
    param_1 = (int *)0x0;
    local_c = piVar1 + 0x1c;
    iVar3 = (**(code **)(*piVar1 + 0x74))(piVar1,&DAT_6f014d08,&DAT_6f014c48,&param_1);
    if (iVar3 < 0) {
      if (param_1 == (int *)0x0) {
        return iVar3;
      }
      (**(code **)(*param_1 + 8))(param_1);
      return iVar3;
    }
    wsprintfW(local_814,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
              piVar1 + 0x1c);
    LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
    if (LVar4 == 0) {
      (**(code **)(*param_1 + 0xa0))(param_1,L"Zone",local_8);
      RegCloseKey(local_8);
      wsprintfW(local_814,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,local_14);
      LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                              (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
      if (LVar4 == 0) {
        (**(code **)(*param_1 + 0xa0))(param_1,L"Lobby",local_8);
        RegCloseKey(local_8);
        if (param_1 != (int *)0x0) {
          (**(code **)(*param_1 + 8))(param_1);
        }
        goto LAB_6f028069;
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
    iVar3 = -0x7fffbffb;
  }
  return iVar3;
}


#na lokaciji 6f03fa58



int FUN_6f027edd(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  LSTATUS LVar4;
  WCHAR local_814 [1024];
  int *local_14;
  DWORD local_10;
  int *local_c;
  HKEY local_8;
  
  piVar1 = param_1;
  local_8 = (HKEY)0x0;
  while (puVar2 = (undefined4 *)FUN_6f02587b(piVar1 + 8), puVar2 != (undefined4 *)0x0) {
    if ((HWND)*puVar2 != (HWND)0x0) {
      DestroyWindow((HWND)*puVar2);
    }
    if (puVar2 != (undefined4 *)0x0) {
      FUN_6f0263b0((int)puVar2);
      FUN_6f03b71c((int)puVar2);
    }
  }
  FUN_6f028dee((ushort *)(piVar1 + 99),FUN_6f0284c9,piVar1);
  local_14 = piVar1 + 0x2c;
  if ((*(short *)(piVar1 + 0x2c) == 0) || (*(short *)(piVar1 + 0x1c) == 0)) {
LAB_6f028069:
    iVar3 = 0;
  }
  else {
    param_1 = (int *)0x0;
    local_c = piVar1 + 0x1c;
    iVar3 = (**(code **)(*piVar1 + 0x74))(piVar1,&DAT_6f014d08,&DAT_6f014c48,&param_1);
    if (iVar3 < 0) {
      if (param_1 == (int *)0x0) {
        return iVar3;
      }
      (**(code **)(*param_1 + 8))(param_1);
      return iVar3;
    }
    wsprintfW(local_814,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
              piVar1 + 0x1c);
    LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
    if (LVar4 == 0) {
      (**(code **)(*param_1 + 0xa0))(param_1,L"Zone",local_8);
      RegCloseKey(local_8);
      wsprintfW(local_814,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,local_14);
      LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                              (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
      if (LVar4 == 0) {
        (**(code **)(*param_1 + 0xa0))(param_1,L"Lobby",local_8);
        RegCloseKey(local_8);
        if (param_1 != (int *)0x0) {
          (**(code **)(*param_1 + 8))(param_1);
        }
        goto LAB_6f028069;
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
    iVar3 = -0x7fffbffb;
  }
  return iVar3;
}


#Nemam pojam  kako i sta svodi ovi kodovi
#Po imenu stringa izgleda kao neka lokacija ili adresa u file explorer, nezz

#PALETTE

#na lokaciji 6f026a33


HPALETTE FUN_6f0269d8(int *param_1)

{
  int iVar1;
  HMODULE hModule;
  HRSRC hResInfo;
  HGLOBAL hResData;
  DWORD DVar2;
  LPVOID pvVar3;
  BYTE *pBVar4;
  BYTE *pBVar5;
  LOGPALETTE local_414 [129];
  HPALETTE local_c;
  int *local_8;
  
  local_c = (HPALETTE)0x0;
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&_Buf2_6f014d18,&LAB_6f014bc8,&local_8);
  if (iVar1 < 0) {
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    local_c = (HPALETTE)0x0;
  }
  else {
    memset(local_414,0,0x408);
    hModule = (HMODULE)(**(code **)(*local_8 + 0xc))(local_8,0x3f4,u_PALETTE_6f03facc);
    hResInfo = FindResourceW(hModule,(LPCWSTR)0x3f4,u_PALETTE_6f03facc);
    if ((hResInfo != (HRSRC)0x0) &&
       (hResData = LoadResource(hModule,hResInfo), hResData != (HGLOBAL)0x0)) {
      DVar2 = SizeofResource(hModule,hResInfo);
      if (DVar2 == 0x300) {
        pvVar3 = LockResource(hResData);
        iVar1 = 0x100;
        pBVar5 = (BYTE *)((int)pvVar3 + 2);
        local_414[0].palVersion = 0x300;
        local_414[0].palNumEntries = 0x100;
        pBVar4 = &local_414[0].palPalEntry[0].peGreen;
        do {
          ((PALETTEENTRY *)(pBVar4 + -1))->peRed = pBVar5[-2];
          *pBVar4 = pBVar5[-1];
          pBVar4[1] = *pBVar5;
          pBVar4[2] = '\0';
          pBVar5 = pBVar5 + 3;
          pBVar4 = pBVar4 + 4;
          iVar1 = iVar1 + -1;
        } while (iVar1 != 0);
        local_c = CreatePalette(local_414);
      }
      FreeResource(hResData);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return local_c;
}


#na lokaciji 6f026a3f


HPALETTE FUN_6f0269d8(int *param_1)

{
  int iVar1;
  HMODULE hModule;
  HRSRC hResInfo;
  HGLOBAL hResData;
  DWORD DVar2;
  LPVOID pvVar3;
  BYTE *pBVar4;
  BYTE *pBVar5;
  LOGPALETTE local_414 [129];
  HPALETTE local_c;
  int *local_8;
  
  local_c = (HPALETTE)0x0;
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&_Buf2_6f014d18,&LAB_6f014bc8,&local_8);
  if (iVar1 < 0) {
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    local_c = (HPALETTE)0x0;
  }
  else {
    memset(local_414,0,0x408);
    hModule = (HMODULE)(**(code **)(*local_8 + 0xc))(local_8,0x3f4,u_PALETTE_6f03facc);
    hResInfo = FindResourceW(hModule,(LPCWSTR)0x3f4,u_PALETTE_6f03facc);
    if ((hResInfo != (HRSRC)0x0) &&
       (hResData = LoadResource(hModule,hResInfo), hResData != (HGLOBAL)0x0)) {
      DVar2 = SizeofResource(hModule,hResInfo);
      if (DVar2 == 0x300) {
        pvVar3 = LockResource(hResData);
        iVar1 = 0x100;
        pBVar5 = (BYTE *)((int)pvVar3 + 2);
        local_414[0].palVersion = 0x300;
        local_414[0].palNumEntries = 0x100;
        pBVar4 = &local_414[0].palPalEntry[0].peGreen;
        do {
          ((PALETTEENTRY *)(pBVar4 + -1))->peRed = pBVar5[-2];
          *pBVar4 = pBVar5[-1];
          pBVar4[1] = *pBVar5;
          pBVar4[2] = '\0';
          pBVar5 = pBVar5 + 3;
          pBVar4 = pBVar4 + 4;
          iVar1 = iVar1 + -1;
        } while (iVar1 != 0);
        local_c = CreatePalette(local_414);
      }
      FreeResource(hResData);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return local_c;
}



#na lokaciji 6f026a47



HPALETTE FUN_6f0269d8(int *param_1)

{
  int iVar1;
  HMODULE hModule;
  HRSRC hResInfo;
  HGLOBAL hResData;
  DWORD DVar2;
  LPVOID pvVar3;
  BYTE *pBVar4;
  BYTE *pBVar5;
  LOGPALETTE local_414 [129];
  HPALETTE local_c;
  int *local_8;
  
  local_c = (HPALETTE)0x0;
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&_Buf2_6f014d18,&LAB_6f014bc8,&local_8);
  if (iVar1 < 0) {
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    local_c = (HPALETTE)0x0;
  }
  else {
    memset(local_414,0,0x408);
    hModule = (HMODULE)(**(code **)(*local_8 + 0xc))(local_8,0x3f4,u_PALETTE_6f03facc);
    hResInfo = FindResourceW(hModule,(LPCWSTR)0x3f4,u_PALETTE_6f03facc);
    if ((hResInfo != (HRSRC)0x0) &&
       (hResData = LoadResource(hModule,hResInfo), hResData != (HGLOBAL)0x0)) {
      DVar2 = SizeofResource(hModule,hResInfo);
      if (DVar2 == 0x300) {
        pvVar3 = LockResource(hResData);
        iVar1 = 0x100;
        pBVar5 = (BYTE *)((int)pvVar3 + 2);
        local_414[0].palVersion = 0x300;
        local_414[0].palNumEntries = 0x100;
        pBVar4 = &local_414[0].palPalEntry[0].peGreen;
        do {
          ((PALETTEENTRY *)(pBVar4 + -1))->peRed = pBVar5[-2];
          *pBVar4 = pBVar5[-1];
          pBVar4[1] = *pBVar5;
          pBVar4[2] = '\0';
          pBVar5 = pBVar5 + 3;
          pBVar4 = pBVar4 + 4;
          iVar1 = iVar1 + -1;
        } while (iVar1 != 0);
        local_c = CreatePalette(local_414);
      }
      FreeResource(hResData);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return local_c;
}


#Sve ovo izgleda kao isti kod i smatram da je duzan za boje ili nesto tako
#Samo zato sto je ime stringa PALETTE (kao paleta za bojenje?)

#%1 - %2


void FUN_6f026c62(int param_1,WCHAR *param_2,LPWSTR param_3,DWORD param_4)

{
  WCHAR local_1804 [1024];
  WCHAR local_1004 [1024];
  WCHAR local_804 [990];
  undefined4 uStackY_48;
  
  FUN_6f03c940();
  local_804[0] = L'\0';
  local_1004[0] = L'\0';
  if (param_2 == (WCHAR *)0x0) {
    local_804[0] = L'\0';
  }
  else {
    if ((short)((uint)param_2 >> 0x10) != 0) goto LAB_6f026cbc;
    (**(code **)(**(int **)(param_1 + 0x5c) + 0x28))();
  }
  param_2 = local_804;
LAB_6f026cbc:
  local_1004[0] = L'\0';
  (**(code **)(**(int **)(param_1 + 0x5c) + 0x28))();
  lstrcpyW(local_1804,u_%1_-_%2_6f03fadc);
  (**(code **)(**(int **)(param_1 + 0x5c) + 0x28))();
  if (local_1004[0] != L'\0') {
    if (*param_2 != L'\0') {
      uStackY_48 = 0x6f026d2c;
      FUN_6f01bbf9(local_1804,param_3,param_4);
      return;
    }
    param_2 = local_1004;
  }
  lstrcpynW(param_3,param_2,param_4);
  return;
}


#Veoma mi je cudan string (%1 - %2)
#moguce je da je nesto do interneta/koriscenja interneta ili stakovanje neko..

#This game


undefined4
FUN_6f026d51(void *param_1,int param_2,WCHAR *param_3,WCHAR *param_4,LPCWSTR param_5,LPCWSTR par am_6
            ,LPCWSTR param_7,undefined4 param_8,undefined4 param_9,undefined4 param_10,
            undefined4 param_11,undefined4 param_12)

{
  undefined4 *puVar1;
  int iVar2;
  WCHAR local_1804 [1024];
  WCHAR local_1004 [1024];
  WCHAR local_804 [1000];
  undefined4 uStackY_34;
  
  FUN_6f03c940();
  puVar1 = FUN_6f03b6fa(0x48);
  if (puVar1 == (undefined4 *)0x0) {
    puVar1 = (undefined4 *)0x0;
  }
  else {
    puVar1 = (undefined4 *)FUN_6f026efe((int)puVar1);
  }
  *puVar1 = 0;
  puVar1[0x11] = param_2;
  puVar1[0xc] = param_9;
  puVar1[0xd] = param_10;
  puVar1[0xe] = param_11;
  puVar1[0xf] = param_12;
  if ((param_3 != (WCHAR *)0x0) && ((short)((uint)param_3 >> 0x10) == 0)) {
    (**(code **)(**(int **)((int)param_1 + 0x5c) + 0x28))();
    param_3 = local_804;
  }
  lstrcpyW(local_1004,u_This_game_6f03faec);
  (**(code **)(**(int **)((int)param_1 + 0x5c) + 0x28))();
  uStackY_34 = 0x6f026e0f;
  iVar2 = FUN_6f01bbf9(param_3,local_1804,0x400);
  if (iVar2 != 0) {
    param_3 = local_1804;
  }
  FUN_6f03bdf9(puVar1 + 3,param_3);
  uStackY_34 = 0x6f026e3b;
  FUN_6f026c62((int)param_1,param_4,local_804,0x400);
  FUN_6f03bdf9(puVar1 + 1,local_804);
  if ((param_5 != (LPCWSTR)0x0) && ((short)((uint)param_5 >> 0x10) == 0)) {
    uStackY_34 = 0x6f026e6f;
    (**(code **)(**(int **)((int)param_1 + 0x5c) + 0x28))();
    param_5 = local_804;
  }
  FUN_6f03bdf9(puVar1 + 5,param_5);
  if ((param_6 != (LPCWSTR)0x0) && ((short)((uint)param_6 >> 0x10) == 0)) {
    uStackY_34 = 0x6f026ea3;
    (**(code **)(**(int **)((int)param_1 + 0x5c) + 0x28))();
    param_6 = local_804;
  }
  FUN_6f03bdf9(puVar1 + 7,param_6);
  if ((param_7 != (LPCWSTR)0x0) && ((short)((uint)param_7 >> 0x10) == 0)) {
    uStackY_34 = 0x6f026ed5;
    (**(code **)(**(int **)((int)param_1 + 0x5c) + 0x28))();
    param_7 = local_804;
  }
  FUN_6f03bdf9(puVar1 + 9,param_7);
  puVar1[0xb] = param_8;
  FUN_6f026faf(param_1,param_2,(size_t)puVar1);
  return 0;
}


#Zanimljiv naziv...
#Mogu voditi sumnju da je vodenje stanja ili necega vezano za trenutnu igru

#GetAncestor


int FUN_6f027496(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_GetAncestor_6f03fb00);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f0274d1;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f0274d1:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Kod koji verovatno trazi da se iz biblioteke uzme nesto
#String navodi neki Ancestor. Dok po kodu mogu reci nesto u vezi adrese(GetProcAddress)

#SetProcessDefaultLayout


int FUN_6f027c19(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_user32.dll_6f03f568);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetProcessDefaultLayout_6f03fb0c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f027c50;
    }
  }
  SetLastError(1);
  iVar2 = 0;
LAB_6f027c50:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Namesta se proces prosecnog/standardnog tipa/rasporeda(layout)

#CONFIG


int FUN_6f027c62(int *param_1,ushort param_2,int param_3,int param_4)

{
  HRSRC hResInfo;
  HGLOBAL hResData;
  LPVOID _Src;
  DWORD _Size;
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  int local_8;
  
  param_4 = param_4 + -1;
  local_8 = -0x7fffbffb;
  if (-1 < param_4) {
    puVar3 = (undefined4 *)(param_3 + param_4 * 4);
    do {
      hResInfo = FindResourceW((HMODULE)*puVar3,(LPCWSTR)(uint)param_2,u_CONFIG_6f03fb24);
      if (hResInfo != (HRSRC)0x0) {
        hResData = LoadResource((HMODULE)*puVar3,hResInfo);
        _Src = LockResource(hResData);
        if (_Src != (LPVOID)0x0) {
          _Size = SizeofResource((HMODULE)*puVar3,hResInfo);
          FUN_6f03c940();
          if (&stack0x00000000 == (undefined *)0x14) {
            return -0x7fffbffb;
          }
          memcpy(&stack0xffffffec,_Src,_Size);
          (&stack0xffffffec)[_Size] = 0;
          iVar1 = lstrlenA(&stack0xffffffec);
          FUN_6f03c940();
          MultiByteToWideChar(0,0,&stack0xffffffec,-1,(LPWSTR)&stack0xffffffec,iVar1 + 1);
          if (&stack0x00000000 == (undefined *)0x14) {
            return -0x7fffbffb;
          }
          iVar1 = *param_1;
          iVar2 = lstrlenW((LPCWSTR)&stack0xffffffec);
          iVar1 = (**(code **)(iVar1 + 0xb0))(param_1,0,&stack0xffffffec,iVar2 << 1);
          if (iVar1 < 0) {
            return iVar1;
          }
          local_8 = 0;
        }
      }
      param_4 = param_4 + -1;
      puVar3 = puVar3 + -1;
    } while (-1 < param_4);
  }
  return local_8;
}


#najverovatnije da je kod za konfiguraciju necega
#najvise pomisljeno zbog samog imena (CONFIG)

#%s\%s\%s

#na lokaciji 6f027e76


int FUN_6f027d69(int *param_1,LPCWSTR param_2,ushort *param_3)

{
  LPWSTR lpString1;
  LPCWSTR lpString2;
  int iVar1;
  LSTATUS LVar2;
  WCHAR local_80c [1024];
  LPWSTR local_c;
  HKEY local_8;
  
  local_8 = (HKEY)0x0;
  if ((((param_2 == (LPCWSTR)0x0) || (param_3 == (ushort *)0x0)) || (*param_2 == L'\0')) ||
     (*param_3 == 0)) {
    iVar1 = -0x7fffbffb;
  }
  else {
    lstrcpyW((LPWSTR)(param_1 + 0x2c),param_2);
    lpString1 = (LPWSTR)(param_1 + 0x1c);
    local_c = lpString1;
    lpString2 = (LPCWSTR)FUN_6f03bfcf(param_3);
    lstrcpyW(lpString1,lpString2);
    param_2 = (LPCWSTR)0x0;
    iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&DAT_6f014d08,&DAT_6f014c48,&param_2);
    if (iVar1 < 0) {
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
    }
    else {
      wsprintfW(local_80c,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58 ,
                lpString1);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0x20019,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Zone",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      wsprintfW(local_80c,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,param_1 + 0x2c);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0xf003f,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Lobby",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
      iVar1 = 0;
    }
  }
  return iVar1;
}


#na lokaciji 6f028000


int FUN_6f027edd(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  LSTATUS LVar4;
  WCHAR local_814 [1024];
  int *local_14;
  DWORD local_10;
  int *local_c;
  HKEY local_8;
  
  piVar1 = param_1;
  local_8 = (HKEY)0x0;
  while (puVar2 = (undefined4 *)FUN_6f02587b(piVar1 + 8), puVar2 != (undefined4 *)0x0) {
    if ((HWND)*puVar2 != (HWND)0x0) {
      DestroyWindow((HWND)*puVar2);
    }
    if (puVar2 != (undefined4 *)0x0) {
      FUN_6f0263b0((int)puVar2);
      FUN_6f03b71c((int)puVar2);
    }
  }
  FUN_6f028dee((ushort *)(piVar1 + 99),FUN_6f0284c9,piVar1);
  local_14 = piVar1 + 0x2c;
  if ((*(short *)(piVar1 + 0x2c) == 0) || (*(short *)(piVar1 + 0x1c) == 0)) {
LAB_6f028069:
    iVar3 = 0;
  }
  else {
    param_1 = (int *)0x0;
    local_c = piVar1 + 0x1c;
    iVar3 = (**(code **)(*piVar1 + 0x74))(piVar1,&DAT_6f014d08,&DAT_6f014c48,&param_1);
    if (iVar3 < 0) {
      if (param_1 == (int *)0x0) {
        return iVar3;
      }
      (**(code **)(*param_1 + 8))(param_1);
      return iVar3;
    }
    wsprintfW(local_814,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
              piVar1 + 0x1c);
    LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
    if (LVar4 == 0) {
      (**(code **)(*param_1 + 0xa0))(param_1,L"Zone",local_8);
      RegCloseKey(local_8);
      wsprintfW(local_814,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,local_14);
      LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                              (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
      if (LVar4 == 0) {
        (**(code **)(*param_1 + 0xa0))(param_1,L"Lobby",local_8);
        RegCloseKey(local_8);
        if (param_1 != (int *)0x0) {
          (**(code **)(*param_1 + 8))(param_1);
        }
        goto LAB_6f028069;
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
    iVar3 = -0x7fffbffb;
  }
  return iVar3;
}


#Mozda su duzni za pravljenje nekog jednokratnog reg kljuca i posle zatvaranjem.
#ime isto izgleda kao neka File Explorer adresa, mozda su %s znacenja da ocekuje neki string(sudim jer sam pre nesto malo radio sa pawn)

#%s\%s\Zone

#na lokaciji 6f027e0f


int FUN_6f027d69(int *param_1,LPCWSTR param_2,ushort *param_3)

{
  LPWSTR lpString1;
  LPCWSTR lpString2;
  int iVar1;
  LSTATUS LVar2;
  WCHAR local_80c [1024];
  LPWSTR local_c;
  HKEY local_8;
  
  local_8 = (HKEY)0x0;
  if ((((param_2 == (LPCWSTR)0x0) || (param_3 == (ushort *)0x0)) || (*param_2 == L'\0')) ||
     (*param_3 == 0)) {
    iVar1 = -0x7fffbffb;
  }
  else {
    lstrcpyW((LPWSTR)(param_1 + 0x2c),param_2);
    lpString1 = (LPWSTR)(param_1 + 0x1c);
    local_c = lpString1;
    lpString2 = (LPCWSTR)FUN_6f03bfcf(param_3);
    lstrcpyW(lpString1,lpString2);
    param_2 = (LPCWSTR)0x0;
    iVar1 = (**(code **)(*param_1 + 0x74))(param_1,&DAT_6f014d08,&DAT_6f014c48,&param_2);
    if (iVar1 < 0) {
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
    }
    else {
      wsprintfW(local_80c,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58 ,
                lpString1);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0x20019,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Zone",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      wsprintfW(local_80c,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,param_1 + 0x2c);
      LVar2 = RegOpenKeyExW((HKEY)0x80000001,local_80c,0,0xf003f,&local_8);
      if ((LVar2 == 0) && (local_8 != (HKEY)0x0)) {
        (**(code **)(*(int *)param_2 + 0xa4))(param_2,L"Lobby",local_8);
        RegCloseKey(local_8);
        local_8 = (HKEY)0x0;
      }
      if (param_2 != (LPCWSTR)0x0) {
        (**(code **)(*(int *)param_2 + 8))(param_2);
      }
      iVar1 = 0;
    }
  }
  return iVar1;
}


#na lokaciji 6f027f9d


int FUN_6f027edd(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  LSTATUS LVar4;
  WCHAR local_814 [1024];
  int *local_14;
  DWORD local_10;
  int *local_c;
  HKEY local_8;
  
  piVar1 = param_1;
  local_8 = (HKEY)0x0;
  while (puVar2 = (undefined4 *)FUN_6f02587b(piVar1 + 8), puVar2 != (undefined4 *)0x0) {
    if ((HWND)*puVar2 != (HWND)0x0) {
      DestroyWindow((HWND)*puVar2);
    }
    if (puVar2 != (undefined4 *)0x0) {
      FUN_6f0263b0((int)puVar2);
      FUN_6f03b71c((int)puVar2);
    }
  }
  FUN_6f028dee((ushort *)(piVar1 + 99),FUN_6f0284c9,piVar1);
  local_14 = piVar1 + 0x2c;
  if ((*(short *)(piVar1 + 0x2c) == 0) || (*(short *)(piVar1 + 0x1c) == 0)) {
LAB_6f028069:
    iVar3 = 0;
  }
  else {
    param_1 = (int *)0x0;
    local_c = piVar1 + 0x1c;
    iVar3 = (**(code **)(*piVar1 + 0x74))(piVar1,&DAT_6f014d08,&DAT_6f014c48,&param_1);
    if (iVar3 < 0) {
      if (param_1 == (int *)0x0) {
        return iVar3;
      }
      (**(code **)(*param_1 + 8))(param_1);
      return iVar3;
    }
    wsprintfW(local_814,u_%s\%s\Zone_6f03fb48,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
              piVar1 + 0x1c);
    LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
    if (LVar4 == 0) {
      (**(code **)(*param_1 + 0xa0))(param_1,L"Zone",local_8);
      RegCloseKey(local_8);
      wsprintfW(local_814,u_%s\%s\%s_6f03fb34,PTR_u_SOFTWARE\Microsoft\zone.com\Free_6f03fa58,
                local_c,local_14);
      LVar4 = RegCreateKeyExW((HKEY)0x80000001,local_814,0,(LPWSTR)0x0,0,0xf003f,
                              (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_10);
      if (LVar4 == 0) {
        (**(code **)(*param_1 + 0xa0))(param_1,L"Lobby",local_8);
        RegCloseKey(local_8);
        if (param_1 != (int *)0x0) {
          (**(code **)(*param_1 + 8))(param_1);
        }
        goto LAB_6f028069;
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
    iVar3 = -0x7fffbffb;
  }
  return iVar3;
}


#slicno kao prethodni kod
#zanimljivo je to da je ovde kraj sa \Zone koje bi moglo znaciti da se neki stringovi ocekuju da zavese sa \Zone

#clsid


undefined4
FUN_6f028119(LPCWSTR param_1,undefined4 param_2,int param_3,undefined4 param_4,undefined4 *param _5)

{
  LPWSTR lpString1;
  LPCWSTR pWVar1;
  undefined4 *this;
  void *pvVar2;
  int iVar3;
  WCHAR local_6b4 [260];
  WCHAR local_4ac [512];
  OLECHAR local_ac [64];
  CLSID local_2c;
  CLSID local_1c;
  undefined4 local_c;
  undefined4 local_8;
  
  local_8 = 0x80;
  local_c = 0x208;
  if (((param_3 != 0) && (pWVar1 = FUN_6f03c006(param_1,u_srvid_6f03fb74), pWVar1 != (LPCWSTR)0x 0))
     && (pWVar1 != param_1)) {
    iVar3 = (int)pWVar1 - (int)param_1 >> 1;
    lstrcpynW(local_4ac,param_1,iVar3 + 1);
    lpString1 = local_4ac + iVar3;
    lstrcpyW(lpString1,u_srvid_6f03fb74);
    iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_8);
    if (-1 < iVar3) {
      CLSIDFromString(local_ac,&local_1c);
      iVar3 = memcmp(&local_1c,&_Buf2_6f015dd0,0x10);
      if (iVar3 != 0) {
        lstrcpyW(lpString1,u_clsid_6f03fb68);
        local_8 = 0x80;
        iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_ 8);
        if (-1 < iVar3) {
          CLSIDFromString(local_ac,&local_2c);
          lstrcpyW(lpString1,(LPCWSTR)&lpString2_6f03fb60);
          iVar3 = (**(code **)(*(int *)*param_5 + 0x58))
                            ((int *)*param_5,local_4ac,local_6b4,&local_c);
          if (-1 < iVar3) {
            *lpString1 = L'\0';
            iVar3 = FUN_6f028d90(param_5[1] + 0x1b8,&local_1c);
            if (iVar3 == 0) {
              this = FUN_6f03b6fa(0x328);
              if (this == (undefined4 *)0x0) {
                pvVar2 = (void *)0x0;
              }
              else {
                pvVar2 = FUN_6f02857d(this,&local_2c.Data1,&local_1c.Data1,local_4ac,local_6b4);
              }
              if (pvVar2 == (void *)0x0) {
                return 0x8007000e;
              }
              iVar3 = FUN_6f025a69(param_5[1] + 0x1b8,(size_t)&local_1c);
              if (iVar3 == 0) {
                FUN_6f03b71c((int)pvVar2);
              }
            }
          }
        }
      }
    }
  }
  return 0;
}


#moguce da se ocekuje neki kod i funkcija da napravi velicinu i podatke
#Ocekuje se neki zapis...

#srvid

#na lokaciji 6f028140


undefined4
FUN_6f028119(LPCWSTR param_1,undefined4 param_2,int param_3,undefined4 param_4,undefined4 *param _5)

{
  LPWSTR lpString1;
  LPCWSTR pWVar1;
  undefined4 *this;
  void *pvVar2;
  int iVar3;
  WCHAR local_6b4 [260];
  WCHAR local_4ac [512];
  OLECHAR local_ac [64];
  CLSID local_2c;
  CLSID local_1c;
  undefined4 local_c;
  undefined4 local_8;
  
  local_8 = 0x80;
  local_c = 0x208;
  if (((param_3 != 0) && (pWVar1 = FUN_6f03c006(param_1,u_srvid_6f03fb74), pWVar1 != (LPCWSTR)0x 0))
     && (pWVar1 != param_1)) {
    iVar3 = (int)pWVar1 - (int)param_1 >> 1;
    lstrcpynW(local_4ac,param_1,iVar3 + 1);
    lpString1 = local_4ac + iVar3;
    lstrcpyW(lpString1,u_srvid_6f03fb74);
    iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_8);
    if (-1 < iVar3) {
      CLSIDFromString(local_ac,&local_1c);
      iVar3 = memcmp(&local_1c,&_Buf2_6f015dd0,0x10);
      if (iVar3 != 0) {
        lstrcpyW(lpString1,u_clsid_6f03fb68);
        local_8 = 0x80;
        iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_ 8);
        if (-1 < iVar3) {
          CLSIDFromString(local_ac,&local_2c);
          lstrcpyW(lpString1,(LPCWSTR)&lpString2_6f03fb60);
          iVar3 = (**(code **)(*(int *)*param_5 + 0x58))
                            ((int *)*param_5,local_4ac,local_6b4,&local_c);
          if (-1 < iVar3) {
            *lpString1 = L'\0';
            iVar3 = FUN_6f028d90(param_5[1] + 0x1b8,&local_1c);
            if (iVar3 == 0) {
              this = FUN_6f03b6fa(0x328);
              if (this == (undefined4 *)0x0) {
                pvVar2 = (void *)0x0;
              }
              else {
                pvVar2 = FUN_6f02857d(this,&local_2c.Data1,&local_1c.Data1,local_4ac,local_6b4);
              }
              if (pvVar2 == (void *)0x0) {
                return 0x8007000e;
              }
              iVar3 = FUN_6f025a69(param_5[1] + 0x1b8,(size_t)&local_1c);
              if (iVar3 == 0) {
                FUN_6f03b71c((int)pvVar2);
              }
            }
          }
        }
      }
    }
  }
  return 0;
}


#na lokaciji 6f028145


undefined4
FUN_6f028119(LPCWSTR param_1,undefined4 param_2,int param_3,undefined4 param_4,undefined4 *param _5)

{
  LPWSTR lpString1;
  LPCWSTR pWVar1;
  undefined4 *this;
  void *pvVar2;
  int iVar3;
  WCHAR local_6b4 [260];
  WCHAR local_4ac [512];
  OLECHAR local_ac [64];
  CLSID local_2c;
  CLSID local_1c;
  undefined4 local_c;
  undefined4 local_8;
  
  local_8 = 0x80;
  local_c = 0x208;
  if (((param_3 != 0) && (pWVar1 = FUN_6f03c006(param_1,u_srvid_6f03fb74), pWVar1 != (LPCWSTR)0x 0))
     && (pWVar1 != param_1)) {
    iVar3 = (int)pWVar1 - (int)param_1 >> 1;
    lstrcpynW(local_4ac,param_1,iVar3 + 1);
    lpString1 = local_4ac + iVar3;
    lstrcpyW(lpString1,u_srvid_6f03fb74);
    iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_8);
    if (-1 < iVar3) {
      CLSIDFromString(local_ac,&local_1c);
      iVar3 = memcmp(&local_1c,&_Buf2_6f015dd0,0x10);
      if (iVar3 != 0) {
        lstrcpyW(lpString1,u_clsid_6f03fb68);
        local_8 = 0x80;
        iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_ 8);
        if (-1 < iVar3) {
          CLSIDFromString(local_ac,&local_2c);
          lstrcpyW(lpString1,(LPCWSTR)&lpString2_6f03fb60);
          iVar3 = (**(code **)(*(int *)*param_5 + 0x58))
                            ((int *)*param_5,local_4ac,local_6b4,&local_c);
          if (-1 < iVar3) {
            *lpString1 = L'\0';
            iVar3 = FUN_6f028d90(param_5[1] + 0x1b8,&local_1c);
            if (iVar3 == 0) {
              this = FUN_6f03b6fa(0x328);
              if (this == (undefined4 *)0x0) {
                pvVar2 = (void *)0x0;
              }
              else {
                pvVar2 = FUN_6f02857d(this,&local_2c.Data1,&local_1c.Data1,local_4ac,local_6b4);
              }
              if (pvVar2 == (void *)0x0) {
                return 0x8007000e;
              }
              iVar3 = FUN_6f025a69(param_5[1] + 0x1b8,(size_t)&local_1c);
              if (iVar3 == 0) {
                FUN_6f03b71c((int)pvVar2);
              }
            }
          }
        }
      }
    }
  }
  return 0;
}


#na lokaciji 6f028181


undefined4
FUN_6f028119(LPCWSTR param_1,undefined4 param_2,int param_3,undefined4 param_4,undefined4 *param _5)

{
  LPWSTR lpString1;
  LPCWSTR pWVar1;
  undefined4 *this;
  void *pvVar2;
  int iVar3;
  WCHAR local_6b4 [260];
  WCHAR local_4ac [512];
  OLECHAR local_ac [64];
  CLSID local_2c;
  CLSID local_1c;
  undefined4 local_c;
  undefined4 local_8;
  
  local_8 = 0x80;
  local_c = 0x208;
  if (((param_3 != 0) && (pWVar1 = FUN_6f03c006(param_1,u_srvid_6f03fb74), pWVar1 != (LPCWSTR)0x 0))
     && (pWVar1 != param_1)) {
    iVar3 = (int)pWVar1 - (int)param_1 >> 1;
    lstrcpynW(local_4ac,param_1,iVar3 + 1);
    lpString1 = local_4ac + iVar3;
    lstrcpyW(lpString1,u_srvid_6f03fb74);
    iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_8);
    if (-1 < iVar3) {
      CLSIDFromString(local_ac,&local_1c);
      iVar3 = memcmp(&local_1c,&_Buf2_6f015dd0,0x10);
      if (iVar3 != 0) {
        lstrcpyW(lpString1,u_clsid_6f03fb68);
        local_8 = 0x80;
        iVar3 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4ac,local_ac,&local_ 8);
        if (-1 < iVar3) {
          CLSIDFromString(local_ac,&local_2c);
          lstrcpyW(lpString1,(LPCWSTR)&lpString2_6f03fb60);
          iVar3 = (**(code **)(*(int *)*param_5 + 0x58))
                            ((int *)*param_5,local_4ac,local_6b4,&local_c);
          if (-1 < iVar3) {
            *lpString1 = L'\0';
            iVar3 = FUN_6f028d90(param_5[1] + 0x1b8,&local_1c);
            if (iVar3 == 0) {
              this = FUN_6f03b6fa(0x328);
              if (this == (undefined4 *)0x0) {
                pvVar2 = (void *)0x0;
              }
              else {
                pvVar2 = FUN_6f02857d(this,&local_2c.Data1,&local_1c.Data1,local_4ac,local_6b4);
              }
              if (pvVar2 == (void *)0x0) {
                return 0x8007000e;
              }
              iVar3 = FUN_6f025a69(param_5[1] + 0x1b8,(size_t)&local_1c);
              if (iVar3 == 0) {
                FUN_6f03b71c((int)pvVar2);
              }
            }
          }
        }
      }
    }
  }
  return 0;
}


#mozda je nesto oko identifikacije servera???

#/srvid


LPCWSTR FUN_6f0282ba(LPCWSTR param_1,undefined4 param_2,int param_3,undefined4 param_4,
                    undefined4 *param_5)

{
  int iVar1;
  LPCWSTR pWVar2;
  undefined4 *this;
  void *pvVar3;
  WCHAR local_4a0 [512];
  OLECHAR local_a0 [64];
  CLSID local_20;
  undefined4 local_10;
  int local_c;
  int *local_8;
  
  local_8 = (int *)0x0;
  local_c = 0;
  local_10 = 0x80;
  if (param_3 == 0) {
    lstrcpyW(local_4a0,param_1);
    lstrcatW(local_4a0,u_/srvid_6f03fb80);
    iVar1 = (**(code **)(*(int *)*param_5 + 0x58))((int *)*param_5,local_4a0,local_a0,&local_10);
    if (-1 < iVar1) {
      CLSIDFromString(local_a0,&local_20);
      iVar1 = memcmp(&local_20,&_Buf2_6f015dd0,0x10);
      if (((iVar1 != 0) && (iVar1 = memcmp(&local_20,&_Buf2_6f014cd8,0x10), iVar1 != 0)) &&
         (iVar1 = memcmp(&local_20,&_Buf2_6f014d18,0x10), iVar1 != 0)) {
        pWVar2 = FUN_6f0280d7(param_5[1],&local_20,&DAT_6f015da0,(int)&local_8,&local_c);
        if (-1 < (int)pWVar2) {
          this = FUN_6f03b6fa(0x18);
          if (this == (undefined4 *)0x0) {
            pvVar3 = (void *)0x0;
          }
          else {
            pvVar3 = FUN_6f028538(this,&local_20.Data1,local_8,local_c);
          }
          if (pvVar3 != (void *)0x0) {
            iVar1 = FUN_6f025a69(param_5[1] + 0x18c,(size_t)pvVar3);
            if (iVar1 != 0) goto LAB_6f028403;
            FUN_6f028567((int)pvVar3);
            FUN_6f03b71c((int)pvVar3);
          }
          if (local_8 != (int *)0x0) {
            (**(code **)(*local_8 + 8))(local_8);
          }
          return (LPCWSTR)0x8007000e;
        }
LAB_6f028403:
        if (local_8 == (int *)0x0) {
          return pWVar2;
        }
        (**(code **)(*local_8 + 8))(local_8);
        return pWVar2;
      }
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return (LPCWSTR)0x0;
}



#mozda neki samostalniji kod o registrovanju/identifikovanju servera?

#\VarFileInfo\Translation


undefined4 FUN_6f0285bc(HMODULE param_1,uint *param_2)

{
  uint uVar1;
  undefined4 *lpData;
  DWORD DVar2;
  BOOL BVar3;
  undefined4 uVar4;
  CHAR local_12c [260];
  undefined4 local_28;
  undefined4 local_24;
  undefined4 local_20;
  void *local_1c;
  undefined4 local_18;
  ushort *local_14;
  size_t local_10;
  uint local_c;
  DWORD local_8;
  
  local_8 = 0;
  local_20 = 0;
  local_28 = 0x10;
  local_24 = 1;
  uVar1 = FUN_6f0286d1(8,param_1,&local_28,3,&local_18);
  if (((uVar1 & 0xc0000000) == 0) &&
     (uVar1 = FUN_6f02872c(param_1,local_18,&local_1c,&local_10), (uVar1 & 0xc0000000) == 0)) {
    lpData = FUN_6f03b6fa(local_10);
    if (lpData == (undefined4 *)0x0) {
      return 0x8007000e;
    }
    memcpy(lpData,local_1c,local_10);
LAB_6f02868d:
    local_c = 0;
    BVar3 = VerQueryValueA(lpData,s_\VarFileInfo\Translation_6f03fb90,&local_14,&local_c);
    if ((BVar3 != 0) && (1 < local_c)) {
      uVar4 = 0;
      *param_2 = (uint)*local_14;
      goto LAB_6f0286c2;
    }
  }
  else {
    DVar2 = GetModuleFileNameA(param_1,local_12c,0x104);
    if ((DVar2 == 0) || (DVar2 = GetFileVersionInfoSizeA(local_12c,&local_8), DVar2 == 0)) {
      return 0x80004005;
    }
    lpData = FUN_6f03b6fa(DVar2);
    if (lpData == (undefined4 *)0x0) {
      return 0x8007000e;
    }
    BVar3 = GetFileVersionInfoA(local_12c,local_8,DVar2,lpData);
    if (BVar3 != 0) goto LAB_6f02868d;
  }
  uVar4 = 0x80004005;
LAB_6f0286c2:
  FUN_6f03b71c((int)lpData);
  return uVar4;
}


#moguci kod da prevodi(translation) varijaciju informacije o datoteci
#mozda korisno da se provere imena i informacije podataka

#LdrFindResourceEx_U


int FUN_6f0286d1(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                undefined4 param_5)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_ntdll.dll_6f03fbc0);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_LdrFindResourceEx_U_6f03fbac);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2,param_3,param_4,param_5);
      goto LAB_6f028719;
    }
  }
  SetLastError(1);
  iVar2 = -0x3ffffffe;
LAB_6f028719:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#sansa da trazi neki izvor(resource)?
#mozda zavisnosti od igre trazi njen resource fajl (npr. za Backgammon, bckgres.dll)

#ntdll.dll

#na lokaciji 6f0286d6


int FUN_6f0286d1(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                undefined4 param_5)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_ntdll.dll_6f03fbc0);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_LdrFindResourceEx_U_6f03fbac);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2,param_3,param_4,param_5);
      goto LAB_6f028719;
    }
  }
  SetLastError(1);
  iVar2 = -0x3ffffffe;
LAB_6f028719:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#na lokaciji 6f02872e


int FUN_6f02872c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_ntdll.dll_6f03fbc0);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_LdrAccessResource_6f03fbcc);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2,param_3,param_4);
      goto LAB_6f028772;
    }
  }
  SetLastError(1);
  iVar2 = -0x3ffffffe;
LAB_6f028772:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#moguce da je naci kako se poziva windows mehanika ntdll.dll
#mozda kljucno za citanje i koristenje .dll podataka

#LdrAccessResource


int FUN_6f02872c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_ntdll.dll_6f03fbc0);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_LdrAccessResource_6f03fbcc);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2,param_3,param_4);
      goto LAB_6f028772;
    }
  }
  SetLastError(1);
  iVar2 = -0x3ffffffe;
LAB_6f028772:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Moguce da je kod koji se pokrene da pristupi izvoru(resource)
#Mozda nastupa nakon uspesnog LdrFindResourceEx_U

DOSTA EVENT STRINGOVA BEZ KODA POSLE....

#Tahoma


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#mozda nacin da se izrade parami da se napravi font
#ako se ne lazem da je Tahoma font teksta?

#COMBOBOX


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#mozda tehnika neka?
#ne znam sta je ovo. neki box, valjda dugme ili prostor

#LISTBOX


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#Ocigledno neki box i nacin da se prikaze?

#BUTTON

#na lokaciji 6f028ee7


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#na lokaciji 6f028f02


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#na lokaciji 6f028ede


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#Nekoliki isti kodovi duzni da prave dugme ili nesto slicno...

#RichEdit20A

#na lokaciji 6f028e83



undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#na lokaciji 6f028ea6


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}


#na lokaciji 6f028e99


undefined4 * __fastcall FUN_6f028e48(undefined4 *param_1)

{
  code *pcVar1;
  BSTR pOVar2;
  uint uVar3;
  
  *param_1 = &PTR_LAB_6f012874;
  param_1[1] = &PTR_LAB_6f015334;
  param_1[0x31] = 0;
  FUN_6f018a58(param_1 + 2);
  FUN_6f017128(param_1 + 0x22);
  pcVar1 = DefWindowProcW_exref;
  uVar3 = -(uint)(param_1 != (undefined4 *)0x0) & (uint)(param_1 + 0x14);
  param_1[0x30] = &PTR_LAB_6f0117a0;
  param_1[0x32] = 0;
  param_1[0x37] = u_RichEdit20A_6f040dd8;
  param_1[0x38] = pcVar1;
  param_1[0x39] = uVar3;
  param_1[0x3a] = 1;
  param_1[0x3b] = 0;
  FUN_6f02bc0b(param_1 + 0x3c,u_RichEdit20A_6f040dd8,uVar3,2);
  FUN_6f02c63a(param_1 + 0x46);
  param_1[0x61] = 0;
  param_1[0x66] = u_BUTTON_6f040dc8;
  param_1[0x67] = pcVar1;
  param_1[0x68] = uVar3;
  param_1[0x69] = 3;
  param_1[0x6a] = 0;
  param_1[0x6b] = 0;
  param_1[0x70] = u_BUTTON_6f040dc8;
  param_1[0x71] = pcVar1;
  param_1[0x72] = uVar3;
  param_1[0x73] = 4;
  param_1[0x74] = 0;
  param_1[0x75] = 0;
  param_1[0x7a] = u_LISTBOX_6f040db8;
  param_1[0x7b] = pcVar1;
  param_1[0x7c] = uVar3;
  param_1[0x7d] = 5;
  param_1[0x7e] = 0;
  param_1[0x7f] = 0;
  param_1[0x84] = u_COMBOBOX_6f040da4;
  param_1[0x85] = pcVar1;
  param_1[0x86] = uVar3;
  param_1[0x87] = 6;
  param_1[0x88] = 0;
  param_1[0x89] = 0;
  param_1[0x8a] = 0;
  param_1[0x8b] = 0;
  param_1[0x8c] = 0;
  param_1[0xa8] = 0x3c;
  param_1[0x10d2] = 0;
  param_1[0x10d3] = 0;
  param_1[0x10d4] = 0;
  param_1[0x10d5] = 0;
  *(undefined *)(param_1 + 0x10da) = 0;
  *(undefined *)((int)param_1 + 0x4369) = 0;
  *(undefined *)((int)param_1 + 0x436a) = 0;
  param_1[0x10db] = 0;
  param_1[0x13] = param_1[0x13] | 0x40;
  param_1[0xa3] = 0x1e;
  param_1[0xa4] = 1;
  param_1[0xa5] = 0x14;
  param_1[0xa6] = 0xa5;
  param_1[0xcd] = 1;
  param_1[0xab] = 0;
  param_1[0xac] = 0;
  param_1[0xad] = 0;
  pOVar2 = SysAllocString((OLECHAR *)&psz_6f040da0);
  param_1[0xb2] = pOVar2;
  *(undefined *)(param_1 + 0x10d6) = 0;
  *(undefined *)(param_1 + 0xaa) = 0;
  memset(param_1 + 0xb5,0,0x5c);
  param_1[0xb5] = 0x5c;
  param_1[0xb6] = 0xe000000f;
  param_1[0xb8] = 0xb4;
  param_1[0xba] = 0x2000000;
  *(undefined *)((int)param_1 + 0x2ed) = 0;
  lstrcpyW((LPWSTR)((int)param_1 + 0x2ee),u_Tahoma_6f040d90);
  param_1[0xaf] = 0;
  param_1[0xae] = 0;
  *(undefined2 *)((int)param_1 + 0x346) = 0;
  *(undefined2 *)((int)param_1 + 0xb46) = 0;
  *(undefined2 *)((int)param_1 + 0x1346) = 0;
  *(undefined2 *)((int)param_1 + 0x1b46) = 0;
  *(undefined2 *)((int)param_1 + 0x2346) = 0;
  *(undefined2 *)((int)param_1 + 0x2b46) = 0;
  *(undefined2 *)((int)param_1 + 0x3346) = 0;
  param_1[0xce] = 0;
  param_1[0xa7] = 0;
  param_1[0xcf] = 0;
  param_1[0xd0] = 0;
  *(undefined *)(param_1 + 0xd1) = 0;
  param_1[0xa9] = 0;
  *(undefined *)((int)param_1 + 0x4359) = 1;
  *(undefined *)((int)param_1 + 0x435a) = 0;
  SetRectEmpty((LPRECT)(param_1 + 0x95));
  param_1[0x10d7] = 0;
  param_1[0x10d8] = 0;
  return param_1;
}



#doslovno napisano obogacen tekst...
#valjda ukrasavanje postojaceg teksta ili necega

#RichEd20.dll


undefined4 __fastcall FUN_6f02a0c6(void *param_1)

{
  int *piVar1;
  HGDIOBJ dwNewLong;
  HMODULE pHVar2;
  LRESULT LVar3;
  WPARAM WVar4;
  HMENU pHVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  bool bVar9;
  tagRECT local_3c;
  tagRECT local_2c;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  dwNewLong = GetStockObject(5);
  SetClassLongW(*(HWND *)((int)param_1 + 0x54),-10,(LONG)dwNewLong);
  FUN_6f029f2a((int)param_1);
  pHVar2 = LoadLibraryW(u_RichEd20.dll_6f040df0);
  *(HMODULE *)((int)param_1 + 0x2a4) = pHVar2;
  if (pHVar2 != (HMODULE)0x0) {
    FUN_6f02bb90((undefined4 *)((int)param_1 + 200),*(HWND *)((int)param_1 + 0x54),
                 (int *)((int)param_1 + 0x234),(LPCWSTR)0x0,0x50210044,0,(HMENU)0x1);
    SendMessageW(*(HWND *)((int)param_1 + 200),0x30,*(WPARAM *)((int)param_1 + 0x4348),0);
    EnableWindow(*(HWND *)((int)param_1 + 200),0);
    local_8 = (int *)0x0;
    LVar3 = SendMessageW(*(HWND *)((int)param_1 + 200),0x43c,0,(LPARAM)&local_8);
    if ((LVar3 != 0) && (local_8 != (int *)0x0)) {
      (**(code **)*local_8)(local_8,&DAT_6f015158,(int)param_1 + 0x2ac);
      (**(code **)(*local_8 + 8))(local_8);
      piVar1 = *(int **)((int)param_1 + 0x2ac);
      if (piVar1 != (int *)0x0) {
        (**(code **)(*piVar1 + 0x60))(piVar1,0,0,(int)param_1 + 0x2b0);
        (**(code **)(**(int **)((int)param_1 + 0x2ac) + 0x60))
                  (*(int **)((int)param_1 + 0x2ac),0,0,(int)param_1 + 0x2b4);
        piVar1 = *(int **)((int)param_1 + 0x2b0);
        if (piVar1 != (int *)0x0) {
          (**(code **)(*piVar1 + 0x48))(piVar1,&local_c);
          (**(code **)(*local_c + 0x1c))(local_c,(int)param_1 + 700);
          (**(code **)(*local_c + 0x1c))(local_c,(int)param_1 + 0x2b8);
          (**(code **)(*local_c + 8))(local_c);
          (**(code **)(**(int **)((int)param_1 + 0x2b8) + 0x54))
                    (*(int **)((int)param_1 + 0x2b8),0xffffffff);
          (**(code **)(**(int **)((int)param_1 + 700) + 0x54))(*(int **)((int)param_1 + 700),0);
        }
      }
      FUN_6f02c024((void *)((int)param_1 + 0x1fc),*(HWND *)((int)param_1 + 0x54),
                   (int *)((int)param_1 + 0x244),(LPCWSTR)0x0,0x50210003,0,(HMENU)&DAT_00000006,
                   (LPVOID)0x0);
      SendMessageW(*(HWND *)((int)param_1 + 0x1fc),0x30,*(WPARAM *)((int)param_1 + 0x4354),0);
      FUN_6f02a48b((int)param_1);
      SendMessageW(*(HWND *)((int)param_1 + 0x1fc),0x14e,0,0);
      GetClientRect(*(HWND *)((int)param_1 + 0x54),&local_3c);
      FUN_6f02bfa2((void *)((int)param_1 + 0x1d4),*(HWND *)((int)param_1 + 0x54),&local_3c.left,
                   (LPCWSTR)0x0,0x50000012,0,(HMENU)&DAT_00000005,(LPVOID)0x0);
      SendMessageW(*(HWND *)((int)param_1 + 0x1d4),0x30,*(WPARAM *)((int)param_1 + 0x4350),0);
      FUN_6f02bf20((void *)((int)param_1 + 0x184),*(HWND *)((int)param_1 + 0x54),&local_3c.left,
                   (LPCWSTR)((int)param_1 + 0xb46),0x50000009,0,(HMENU)0x3,(LPVOID)0x0);
      FUN_6f02bf20((void *)((int)param_1 + 0x1ac),*(HWND *)((int)param_1 + 0x54),&local_3c.left,
                   (LPCWSTR)((int)param_1 + 0x1346),0x50000009,0,(HMENU)&DAT_00000004,(LPVOID)0x0 );
      SendMessageW(*(HWND *)((int)param_1 + 0x184),0x30,*(WPARAM *)((int)param_1 + 0x434c),0);
      SendMessageW(*(HWND *)((int)param_1 + 0x1ac),0x30,*(WPARAM *)((int)param_1 + 0x434c),0);
      local_2c.left = *(int *)((int)param_1 + 0x26c);
      local_2c.top = *(int *)((int)param_1 + 0x270);
      local_2c.right = *(int *)((int)param_1 + 0x274);
      local_2c.bottom = *(int *)((int)param_1 + 0x278);
      OffsetRect(&local_2c,*(int *)((int)param_1 + 0x254),*(int *)((int)param_1 + 600));
      iVar7 = *(int *)((int)param_1 + 0x284) + *(int *)((int)param_1 + 0x26c) +
              *(int *)((int)param_1 + 0x254);
      iVar6 = ((local_2c.right - *(int *)((int)param_1 + 0x284)) - local_2c.left) + iVar7;
      local_18 = (*(int *)((int)param_1 + 0x288) - local_2c.top) + local_2c.bottom +
                 *(int *)((int)param_1 + 600);
      local_10 = *(int *)((int)param_1 + 0x29c) + local_18;
      iVar8 = *(int *)((int)param_1 + 0x29c) + local_10;
      local_1c = iVar7;
      local_14 = iVar6;
      SetWindowPos(*(HWND *)((int)param_1 + 0x184),(HWND)0x0,iVar7,local_18,iVar6 - iVar7,
                   local_10 - local_18,0xc);
      SetWindowPos(*(HWND *)((int)param_1 + 0x1ac),(HWND)0x0,iVar7,local_10,iVar6 - iVar7,
                   iVar8 - local_10,0xc);
      iVar6 = *(int *)((int)param_1 + 0x264) + local_2c.right;
      iVar7 = *(int *)((int)param_1 + 600) + *(int *)((int)param_1 + 0x268);
      SetWindowPos(*(HWND *)((int)param_1 + 0x1d4),(HWND)0x0,iVar6,iVar7,
                   (*(int *)((int)param_1 + 0x25c) + -1) - iVar6,
                   (*(int *)((int)param_1 + 0x2a0) + -1) - iVar7,0xc);
      bVar9 = *(char *)((int)param_1 + 0x4359) == '\0';
      if (bVar9) {
        CheckRadioButton(*(HWND *)((int)param_1 + 0x54),3,4,4);
      }
      else {
        CheckRadioButton(*(HWND *)((int)param_1 + 0x54),3,4,3);
      }
      FUN_6f029fe3(param_1,(int *)(uint)!bVar9,(int *)0x0);
      WVar4 = (**(code **)(**(int **)((int)param_1 + 0x9c) + 0x5c))(*(int **)((int)param_1 + 0x9c) );
      SendMessageW(*(HWND *)((int)param_1 + 0x1fc),0x45d,WVar4,0);
      WVar4 = (**(code **)(**(int **)((int)param_1 + 0x9c) + 0x5c))(*(int **)((int)param_1 + 0x9c) );
      SendMessageW(*(HWND *)((int)param_1 + 200),0x45d,WVar4,0);
      pHVar5 = (HMENU)(**(code **)(**(int **)((int)param_1 + 0xa8) + 0x18))
                                (*(int **)((int)param_1 + 0xa8),0x408);
      *(HMENU *)((int)param_1 + 0x224) = pHVar5;
      pHVar5 = GetSubMenu(pHVar5,0);
      *(HMENU *)((int)param_1 + 0x228) = pHVar5;
    }
  }
  return 0;
}


#Neki korisni kod ili mozda samo nacin kako da se pokrene/koristi .dll datoteka

#/%d %s


void FUN_6f02a947(void)

{
  int iVar1;
  int extraout_ECX;
  int iVar2;
  undefined4 *puVar3;
  undefined4 local_100e [511];
  WCHAR local_810;
  undefined2 auStackY_80e [987];
  undefined4 uStackY_58;
  
  FUN_6f03c940();
  FUN_6f02aa71(extraout_ECX);
  iVar1 = SendMessageW(*(HWND *)(extraout_ECX + 0x1fc),0x147,0,0);
  if ((iVar1 != 0) && (iVar1 != -1)) {
    if (0x18 < iVar1) {
      iVar1 = iVar1 + -0x591 + *(int *)(extraout_ECX + 0x435c);
    }
    puVar3 = local_100e;
    for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
      *puVar3 = 0;
      puVar3 = puVar3 + 1;
    }
    *(undefined2 *)puVar3 = 0;
    (**(code **)(**(int **)(extraout_ECX + 0xa8) + 0x28))();
    wsprintfW(&local_810,u_/%d_%s_6f040e0c);
    iVar2 = lstrlenW(&local_810);
    auStackY_80e[iVar2] = (short)iVar1;
    (**(code **)(**(int **)(extraout_ECX + 0xa4) + 0xc))();
    iVar1 = **(int **)(extraout_ECX + 0xa0);
    lstrlenW(&local_810);
    (**(code **)(iVar1 + 0x20))();
    uStackY_58 = 0x6f02aa6c;
    SendMessageW(*(HWND *)(extraout_ECX + 0x1fc),0x14e,0,0);
  }
  return;
}


#verovatno nesto oko stringova ili tako nesto
#cak mozda i decimale zbog %d

#ATL:


uint __fastcall FUN_6f02bc35(int param_1)

{
  LPWSTR lpszClass;
  ATOM AVar1;
  BOOL BVar2;
  uint uVar3;
  undefined2 extraout_var;
  tagWNDCLASSEXW local_68;
  tagWNDCLASSEXW local_38;
  LPWSTR local_8;
  
  lstrlenW(*(LPCWSTR *)(param_1 + 0x14));
  FUN_6f03c940();
  local_38.cbSize = 0x30;
  local_8 = (LPWSTR)&stack0xffffff8c;
  BVar2 = GetClassInfoExW((HINSTANCE)0x0,*(LPCWSTR *)(param_1 + 0x14),&local_38);
  if ((BVar2 == 0) &&
     (BVar2 = GetClassInfoExW(DAT_6f041b24,*(LPCWSTR *)(param_1 + 0x14),&local_38), BVar2 == 0))  {
    return 0;
  }
  *(WNDPROC *)(param_1 + 0x18) = local_38.lpfnWndProc;
  lstrcpyW(local_8,u_ATL:_6f040e1c);
  lpszClass = local_8;
  lstrcatW(local_8,*(LPCWSTR *)(param_1 + 0x14));
  local_68.cbSize = 0x30;
  uVar3 = GetClassInfoExW(DAT_6f041b24,lpszClass,&local_68);
  if ((short)uVar3 == 0) {
    local_38.style._1_1_ = local_38.style._1_1_ & 0xbf;
    local_38.hInstance = DAT_6f041b24;
    local_38.lpszClassName = lpszClass;
    local_38.lpfnWndProc = (WNDPROC)&LAB_6f02c0a6;
    AVar1 = RegisterClassExW(&local_38);
    uVar3 = CONCAT22(extraout_var,AVar1);
  }
  return uVar3;
}


#ne znam sta li treba ovaj kod raditi.
#moguce da je neka standardna funkcija....

#SetLayout


int FUN_6f02c2a4(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_gdi32.dll_6f040e34);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetLayout_6f040e28);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f02c2e0;
    }
  }
  SetLastError(1);
  iVar2 = -1;
LAB_6f02c2e0:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#kod koji probava najverovatnije da namesti raspored(layout)
#preko uzimanja biblioteke salje uzimanje adrese ili poslednje greske

#gdi32.dll



int FUN_6f02c2a4(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_gdi32.dll_6f040e34);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetLayout_6f040e28);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f02c2e0;
    }
  }
  SetLastError(1);
  iVar2 = -1;
LAB_6f02c2e0:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#ista kao prethodna funkcija ali vise valjda specifikovano da poziva gdi32.dll datoteku


#znetm.dll


LPCWSTR FUN_6f0316af(int *param_1,int *param_2,undefined4 param_3,LPCWSTR param_4)

{
  LPCWSTR pWVar1;
  HANDLE pvVar2;
  
  pWVar1 = (LPCWSTR)FUN_6f03b51a(param_1,param_2,param_3,param_4);
  if (-1 < (int)pWVar1) {
    pvVar2 = CreateEventW((LPSECURITY_ATTRIBUTES)0x0,1,0,(LPCWSTR)0x0);
    param_1[0x17] = (int)pvVar2;
    if (pvVar2 == (HANDLE)0x0) {
      pWVar1 = (LPCWSTR)0x80004005;
    }
    else {
      pWVar1 = FUN_6f03c0a8((int *)&DAT_6f041ba8,u_znetm.dll_6f040ee8,0,(undefined4 *)&DAT_6f0149 d8,
                            &DAT_6f0149c8,(int)(param_1 + 0x18));
      if (-1 < (int)pWVar1) {
        pWVar1 = (LPCWSTR)FUN_6f031714(param_1);
      }
    }
  }
  return pWVar1;
}


#neki kod koji valjda poziva/komunicira sa ZNetM.dll
#a mozda i pozajmljuje neke komponentne ili sl.

#Zone

#na lokaciji 6f031e58


int FUN_6f031db6(void)

{
  int iVar1;
  int extraout_ECX;
  WCHAR local_180c [1024];
  WCHAR local_100c [1024];
  WCHAR local_80c [960];
  undefined4 uStackY_8c;
  undefined4 *puStackY_88;
  undefined4 uStackY_84;
  undefined4 *puStackY_80;
  undefined4 uStackY_7c;
  undefined4 *puStackY_78;
  undefined4 uStackY_74;
  undefined4 *puStackY_70;
  undefined4 uStackY_6c;
  undefined4 *puStackY_68;
  undefined4 uStackY_64;
  
  FUN_6f03c940();
  FUN_6f01b8de();
  GetDialogBaseUnits();
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0xb4) + 0x6c))();
  if (iVar1 < 0) {
    return iVar1;
  }
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0xb4) + 0x5c))();
  if (-1 < iVar1) {
    iVar1 = (**(code **)(**(int **)(extraout_ECX + 0xa4) + 0x28))();
    if (iVar1 == 0) {
      lstrcpyW(local_80c,u_Zone_6f040f3c);
    }
    iVar1 = (**(code **)(**(int **)(extraout_ECX + 0xa4) + 0x28))();
    if (iVar1 == 0) {
      lstrcpyW(local_100c,(LPCWSTR)&lpString2_6f040f34);
    }
    uStackY_64 = 0x6f031ea6;
    iVar1 = FUN_6f01bbf9(local_100c,local_180c,0x400);
    if (iVar1 == 0) {
      lstrcpyW(local_180c,local_80c);
    }
    iVar1 = FUN_6f032c4e((void *)(extraout_ECX + 0x120),*(int **)(extraout_ECX + 0x98));
    if (-1 < iVar1) {
      uStackY_64 = 0x6f031ef0;
      iVar1 = FUN_6f032d00((void *)(extraout_ECX + 0x120),(HWND)0x0,(int *)local_180c,0,0);
      if ((-1 < iVar1) && (iVar1 = FUN_6f033548((int *)(extraout_ECX + 0xf8)), -1 < iVar1)) {
        *(undefined4 *)(extraout_ECX + 0xfc) = 0;
        iVar1 = FUN_6f0335be((int *)(extraout_ECX + 0x100));
        if ((((-1 < iVar1) &&
             (((iVar1 = FUN_6f0335f9((int *)(extraout_ECX + 0x104)), -1 < iVar1 &&
               (iVar1 = FUN_6f033634((int *)(extraout_ECX + 0x108)), -1 < iVar1)) &&
              (iVar1 = FUN_6f03366f((int *)(extraout_ECX + 0x10c)), -1 < iVar1)))) &&
            (((iVar1 = FUN_6f0336aa((int *)(extraout_ECX + 0x110)), -1 < iVar1 &&
              (iVar1 = FUN_6f0336e5((undefined4 *)(extraout_ECX + 0x114)), -1 < iVar1)) &&
             (iVar1 = FUN_6f0336fc((int *)(extraout_ECX + 0x118)), -1 < iVar1)))) &&
           (iVar1 = (**(code **)**(undefined4 **)(extraout_ECX + 0xf8))(), -1 < iVar1)) {
          uStackY_64 = 0x6f031fb2;
          iVar1 = (**(code **)**(undefined4 **)(extraout_ECX + 0x100))();
          if (-1 < iVar1) {
            puStackY_68 = *(undefined4 **)(extraout_ECX + 0x104);
            uStackY_6c = 0x6f031fc6;
            iVar1 = (**(code **)*puStackY_68)();
            if (-1 < iVar1) {
              puStackY_70 = *(undefined4 **)(extraout_ECX + 0x108);
              uStackY_74 = 0x6f031fda;
              iVar1 = (**(code **)*puStackY_70)();
              if (-1 < iVar1) {
                puStackY_78 = *(undefined4 **)(extraout_ECX + 0x10c);
                uStackY_7c = 0x6f031fee;
                iVar1 = (**(code **)*puStackY_78)();
                if (-1 < iVar1) {
                  puStackY_80 = *(undefined4 **)(extraout_ECX + 0x110);
                  uStackY_84 = 0x6f032002;
                  iVar1 = (**(code **)*puStackY_80)();
                  if (-1 < iVar1) {
                    puStackY_88 = *(undefined4 **)(extraout_ECX + 0x114);
                    if (puStackY_88 != (undefined4 *)0x0) {
                      uStackY_8c = 0x6f03201a;
                      iVar1 = (**(code **)*puStackY_88)();
                      if (iVar1 < 0) {
                        return -1;
                      }
                    }
                    puStackY_88 = *(undefined4 **)(extraout_ECX + 0x118);
                    uStackY_8c = 0x6f03202e;
                    iVar1 = (**(code **)*puStackY_88)();
                    return (-1 < iVar1) - 1;
                  }
                }
              }
            }
          }
        }
      }
    }
    return -1;
  }
  return iVar1;
}


#na lokaciji 6f03a45d


/* WARNING: Removing unreachable block (ram,0x6f03a617) */

void FUN_6f03a426(void)

{
  int iVar1;
  HWND hWnd;
  uint uVar2;
  int extraout_ECX;
  WCHAR local_205c [1024];
  WCHAR local_185c [1024];
  WCHAR local_105c [1024];
  WCHAR local_85c [994];
  undefined4 uStackY_98;
  int *piStackY_94;
  undefined4 uStackY_90;
  undefined4 uStackY_8c;
  undefined4 uStackY_88;
  undefined4 uStackY_84;
  undefined4 uStackY_80;
  undefined4 uStackY_7c;
  undefined4 uStackY_78;
  wchar_t *pwStackY_74;
  undefined4 local_5c;
  undefined4 uStack_58;
  int *piStack_54;
  wchar_t **ppwStack_50;
  undefined4 *puStack_4c;
  wchar_t *pwStack_48;
  int *piStack_44;
  LPCWSTR lpString;
  wchar_t *local_1c;
  WCHAR *local_18;
  LCID local_14;
  
  FUN_6f03c940();
  local_18 = local_185c;
  local_14 = 0x400;
  local_1c = (wchar_t *)0x4b0;
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_185c,u_Zone_6f040f3c);
  }
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_105c,(LPCWSTR)&lpString2_6f040f34);
  }
  piStack_44 = (int *)0x6f03a4b0;
  iVar1 = FUN_6f01bbf9(local_105c,local_205c,0x400);
  if (iVar1 == 0) {
    lstrcpyW(local_205c,local_185c);
  }
  lpString = *(LPCWSTR *)(extraout_ECX + 0x14);
  hWnd = (HWND)(**(code **)(*(int *)lpString + 0x54))();
  SetWindowTextW(hWnd,lpString);
  if (*(char *)(extraout_ECX + 0x385c) == '\0') {
    *(char *)(extraout_ECX + 0x385c) = '\x01';
    piStack_44 = *(int **)(extraout_ECX + 0x1c);
    local_5c = (wchar_t *)((uint)local_5c._2_2_ << 0x10);
    pwStack_48 = L"삅ᙼ䖋跼\xf455赒ꡕࢋ桒㡬漁ｐ塑㥦ꡝ萏Ù";
    iVar1 = (**(code **)(*piStack_44 + 0x10))();
    if (-1 < iVar1) {
      pwStack_48 = (wchar_t *)&stack0xfffffff0;
      puStack_4c = &local_5c;
      ppwStack_50 = (wchar_t **)0x6f01386c;
      piStack_54 = (int *)0x0;
      uStack_58 = 0x6f03a52d;
      (**(code **)(iRam00000000 + 0x58))();
    }
    if ((short)local_5c != 0) {
      ppwStack_50 = *(wchar_t ***)(extraout_ECX + 0x14);
      puStack_4c = &local_5c;
      pwStack_48 = u_Windows_User_6f041310;
      piStack_54 = (int *)0x6f03a549;
      iVar1 = (**(code **)((int)*ppwStack_50 + 0x10))();
      if (-1 < iVar1) {
        piStack_54 = *(int **)(extraout_ECX + 0x34);
        pwStack_48 = (wchar_t *)&stack0xfffffff4;
        ppwStack_50 = &local_1c;
        local_1c = L"Lobby";
        local_18 = L"ChatOnAtStartup";
        puStack_4c = (undefined4 *)0x2;
        uStack_58 = 0x6f03a579;
        (**(code **)(*piStack_54 + 0x5c))();
        uStack_58 = 1;
        local_5c = L"LocalChatStatus";
        (**(code **)(iRam00000000 + 0x20))();
        local_14 = GetUserDefaultLCID();
        pwStackY_74 = 
        L"삅❽盿贠ꢅ\xfff7埿卐Ῠ-蔀緀贒ꢅ\xfff7棿რ漄ｐ谕Ē譯ﱅ閍\xf7a8\xffff桒㶠漁ࢋｐᡑ䖋￼\xf075ࢋ뱨Ľ偯凿謠ᡶ卓譓樆 棿\x03\x03ɪｖ᱐䖋㯼瓃謆倈凿弈孞쏉譕臬䣬\b匀譖埱\xe068ļ㍯跛ц䗇ﻴ\x03倀䖍僸襦뢝\xfff7\xe8ff樳\xffff事謬 贀\xf47dᆋ赗뢽\xfff7埿児勿赘\xf84d\xf88b쫨\x14㬀緻㈇\xe9c0À"
        ;
        uVar2 = FUN_6f03d2de(local_14,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
        if ((int)uVar2 < 0) {
          pwStackY_74 = 
          L"삅ች薍\xf7a8\xffff\xe068А偯ᗿኌ漁䖋跼ꢕ\xfff7勿ꁨĽ譯倈凿謘ﱅ痿诰栈㶼漁ｐ⁑皋匘卓ڋｪͨ̀樀嘂僿謜ﱅ쌻ٴࢋｐࡑ幟 쥛嗃\xec8b\xec81ࡈ"
          ;
          uVar2 = FUN_6f03d2de(0,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
          if ((int)uVar2 < 0) {
            lstrcpyW(local_85c,u_Unknown_Language_6f0410e0);
          }
        }
        (**(code **)(iRam00000000 + 0x18))();
        pwStackY_74 = L"LocalLCID";
        uStackY_78 = 0;
        uStackY_7c = 0x6f03a5fb;
        (**(code **)(iRam00000000 + 0x20))();
        piStackY_94 = *(int **)(extraout_ECX + 0x18);
        uStackY_7c = 0;
        uStackY_80 = 0;
        uStackY_84 = 0;
        uStackY_88 = 0xffffffff;
        uStackY_8c = 0x30003;
        uStackY_90 = 2;
        uStackY_98 = 0x6f03a610;
        (**(code **)(*piStackY_94 + 0x1c))();
      }
    }
  }
  return;
}


#MOZDA ILI SIGURNO!
#neki kod koji sluzi u vezi handshake sistema?
#Nacin na koji bi mozda se desifrovao Firstmsg i sl.?
#Moglo bi biti veoma korisno

#BeforeEnd


void __thiscall FUN_6f03269c(void *this,int *param_1)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  BSTR bstrString;
  BSTR bstrString_00;
  int iVar5;
  WCHAR local_818 [1024];
  int *local_18;
  int local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  piVar1 = param_1;
  local_8 = (int *)0x0;
  local_c = (int *)0x0;
  iVar2 = (**(code **)(*param_1 + 0x48))(param_1,&local_8);
  if (-1 < iVar2) {
    FUN_6f019666((int *)&local_c,local_8,&DAT_6f040f58);
    if (local_c == (int *)0x0) goto LAB_6f0327fd;
    param_1 = (int *)0x0;
    iVar2 = (**(code **)(*local_c + 0x24))(local_c,&param_1);
    if (-1 < iVar2) {
      local_10 = (int *)0x0;
      piVar3 = (int *)(**(code **)(**(int **)((int)this + 0x28) + 0xc))(*(int **)((int)this + 0x28 ))
      ;
      iVar2 = (**(code **)(*piVar3 + 0x74))(piVar3,&DAT_6f014d28,&DAT_6f0150f8,&local_10);
      if (-1 < iVar2) {
        local_818[0] = L'\0';
        lstrcatW(local_818,u_<span_style='display:none'>h</sp_6f040fa8);
        lstrcatW(local_818,u_<ZONE_ID="?_6f040f90);
        local_18 = local_10;
        local_14 = *local_10;
        iVar5 = (piVar1 != *(int **)((int)this + 0x48)) + 2;
        iVar2 = lstrlenW(local_818);
        iVar2 = 0x3f7 - iVar2;
        iVar4 = lstrlenW(local_818);
        (**(code **)(local_14 + 0xc))(local_18,local_818 + iVar4,iVar2,iVar5);
        lstrcatW(local_818,u_"></ZONE>_6f040f7c);
        bstrString = SysAllocString(u_BeforeEnd_6f040f68);
        bstrString_00 = SysAllocString(local_818);
        (**(code **)(*param_1 + 0x104))(param_1,bstrString,bstrString_00);
        SysFreeString(bstrString_00);
        SysFreeString(bstrString);
      }
      if (local_10 != (int *)0x0) {
        (**(code **)(*local_10 + 8))(local_10);
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
  }
  if (local_c != (int *)0x0) {
    (**(code **)(*local_c + 8))(local_c);
  }
LAB_6f0327fd:
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return;
}


#Neki kod koji se valjda koristi pre kraja necega (veze? socket? partija?)

#"></ZONE>


void __thiscall FUN_6f03269c(void *this,int *param_1)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  BSTR bstrString;
  BSTR bstrString_00;
  int iVar5;
  WCHAR local_818 [1024];
  int *local_18;
  int local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  piVar1 = param_1;
  local_8 = (int *)0x0;
  local_c = (int *)0x0;
  iVar2 = (**(code **)(*param_1 + 0x48))(param_1,&local_8);
  if (-1 < iVar2) {
    FUN_6f019666((int *)&local_c,local_8,&DAT_6f040f58);
    if (local_c == (int *)0x0) goto LAB_6f0327fd;
    param_1 = (int *)0x0;
    iVar2 = (**(code **)(*local_c + 0x24))(local_c,&param_1);
    if (-1 < iVar2) {
      local_10 = (int *)0x0;
      piVar3 = (int *)(**(code **)(**(int **)((int)this + 0x28) + 0xc))(*(int **)((int)this + 0x28 ))
      ;
      iVar2 = (**(code **)(*piVar3 + 0x74))(piVar3,&DAT_6f014d28,&DAT_6f0150f8,&local_10);
      if (-1 < iVar2) {
        local_818[0] = L'\0';
        lstrcatW(local_818,u_<span_style='display:none'>h</sp_6f040fa8);
        lstrcatW(local_818,u_<ZONE_ID="?_6f040f90);
        local_18 = local_10;
        local_14 = *local_10;
        iVar5 = (piVar1 != *(int **)((int)this + 0x48)) + 2;
        iVar2 = lstrlenW(local_818);
        iVar2 = 0x3f7 - iVar2;
        iVar4 = lstrlenW(local_818);
        (**(code **)(local_14 + 0xc))(local_18,local_818 + iVar4,iVar2,iVar5);
        lstrcatW(local_818,u_"></ZONE>_6f040f7c);
        bstrString = SysAllocString(u_BeforeEnd_6f040f68);
        bstrString_00 = SysAllocString(local_818);
        (**(code **)(*param_1 + 0x104))(param_1,bstrString,bstrString_00);
        SysFreeString(bstrString_00);
        SysFreeString(bstrString);
      }
      if (local_10 != (int *)0x0) {
        (**(code **)(*local_10 + 8))(local_10);
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
  }
  if (local_c != (int *)0x0) {
    (**(code **)(*local_c + 8))(local_c);
  }
LAB_6f0327fd:
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return;
}


#mozda isti kod ali ima neke veze ovo sa "ZONE" stringom....
#jel neka adresa, redirekcija, podaci, nezz...

#<ZONE ID="?


void __thiscall FUN_6f03269c(void *this,int *param_1)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  BSTR bstrString;
  BSTR bstrString_00;
  int iVar5;
  WCHAR local_818 [1024];
  int *local_18;
  int local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  piVar1 = param_1;
  local_8 = (int *)0x0;
  local_c = (int *)0x0;
  iVar2 = (**(code **)(*param_1 + 0x48))(param_1,&local_8);
  if (-1 < iVar2) {
    FUN_6f019666((int *)&local_c,local_8,&DAT_6f040f58);
    if (local_c == (int *)0x0) goto LAB_6f0327fd;
    param_1 = (int *)0x0;
    iVar2 = (**(code **)(*local_c + 0x24))(local_c,&param_1);
    if (-1 < iVar2) {
      local_10 = (int *)0x0;
      piVar3 = (int *)(**(code **)(**(int **)((int)this + 0x28) + 0xc))(*(int **)((int)this + 0x28 ))
      ;
      iVar2 = (**(code **)(*piVar3 + 0x74))(piVar3,&DAT_6f014d28,&DAT_6f0150f8,&local_10);
      if (-1 < iVar2) {
        local_818[0] = L'\0';
        lstrcatW(local_818,u_<span_style='display:none'>h</sp_6f040fa8);
        lstrcatW(local_818,u_<ZONE_ID="?_6f040f90);
        local_18 = local_10;
        local_14 = *local_10;
        iVar5 = (piVar1 != *(int **)((int)this + 0x48)) + 2;
        iVar2 = lstrlenW(local_818);
        iVar2 = 0x3f7 - iVar2;
        iVar4 = lstrlenW(local_818);
        (**(code **)(local_14 + 0xc))(local_18,local_818 + iVar4,iVar2,iVar5);
        lstrcatW(local_818,u_"></ZONE>_6f040f7c);
        bstrString = SysAllocString(u_BeforeEnd_6f040f68);
        bstrString_00 = SysAllocString(local_818);
        (**(code **)(*param_1 + 0x104))(param_1,bstrString,bstrString_00);
        SysFreeString(bstrString_00);
        SysFreeString(bstrString);
      }
      if (local_10 != (int *)0x0) {
        (**(code **)(*local_10 + 8))(local_10);
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
  }
  if (local_c != (int *)0x0) {
    (**(code **)(*local_c + 8))(local_c);
  }
LAB_6f0327fd:
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return;
}


#opet isti kod ali string valjda 'luči' na to da se ocekuje neka ZONE identifikacija
#sumnjam ali mozda onaj id sobe, lobby, klineta, ili nesto sl.

#<span style='display:none'>h</span>


void __thiscall FUN_6f03269c(void *this,int *param_1)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  BSTR bstrString;
  BSTR bstrString_00;
  int iVar5;
  WCHAR local_818 [1024];
  int *local_18;
  int local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  piVar1 = param_1;
  local_8 = (int *)0x0;
  local_c = (int *)0x0;
  iVar2 = (**(code **)(*param_1 + 0x48))(param_1,&local_8);
  if (-1 < iVar2) {
    FUN_6f019666((int *)&local_c,local_8,&DAT_6f040f58);
    if (local_c == (int *)0x0) goto LAB_6f0327fd;
    param_1 = (int *)0x0;
    iVar2 = (**(code **)(*local_c + 0x24))(local_c,&param_1);
    if (-1 < iVar2) {
      local_10 = (int *)0x0;
      piVar3 = (int *)(**(code **)(**(int **)((int)this + 0x28) + 0xc))(*(int **)((int)this + 0x28 ))
      ;
      iVar2 = (**(code **)(*piVar3 + 0x74))(piVar3,&DAT_6f014d28,&DAT_6f0150f8,&local_10);
      if (-1 < iVar2) {
        local_818[0] = L'\0';
        lstrcatW(local_818,u_<span_style='display:none'>h</sp_6f040fa8);
        lstrcatW(local_818,u_<ZONE_ID="?_6f040f90);
        local_18 = local_10;
        local_14 = *local_10;
        iVar5 = (piVar1 != *(int **)((int)this + 0x48)) + 2;
        iVar2 = lstrlenW(local_818);
        iVar2 = 0x3f7 - iVar2;
        iVar4 = lstrlenW(local_818);
        (**(code **)(local_14 + 0xc))(local_18,local_818 + iVar4,iVar2,iVar5);
        lstrcatW(local_818,u_"></ZONE>_6f040f7c);
        bstrString = SysAllocString(u_BeforeEnd_6f040f68);
        bstrString_00 = SysAllocString(local_818);
        (**(code **)(*param_1 + 0x104))(param_1,bstrString,bstrString_00);
        SysFreeString(bstrString_00);
        SysFreeString(bstrString);
      }
      if (local_10 != (int *)0x0) {
        (**(code **)(*local_10 + 8))(local_10);
      }
    }
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 8))(param_1);
    }
  }
  if (local_c != (int *)0x0) {
    (**(code **)(*local_c + 8))(local_c);
  }
LAB_6f0327fd:
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return;
}


#jos jednom opet isti kod...
#ne znam, ali ovo mozda navodi na to da se stvara neki stil i valjda ocekuje 'display:none'

#PlugNPlay

#ovaj na zalost nema reference sa ikakvim kodom.
#izgleda po imenu da je neki sistemcic prikljucenja i igranja?
#verovatno nacin kako se u lobby prikljuce dva slicna igraca i pocnu igrati partiju.

#BitmapText/Splash



undefined4 UndefinedFunction_6f03399b(int param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  
  *(int **)(param_1 + 0x28) = param_2;
  piVar2 = (int *)(**(code **)(*param_2 + 0x24))(param_2);
  piVar3 = (int *)(**(code **)(**(int **)(param_1 + 0x28) + 0x10))(*(int **)(param_1 + 0x28));
  FUN_6f03ca77((int *)(param_1 + 0x40),(LPCWSTR)&DAT_000003fc,piVar3,piVar2,(WCHAR *)0x0);
  piVar2 = *(int **)(param_1 + 0x28);
  iVar1 = *(int *)(param_1 + 0x40);
  piVar3 = (int *)(**(code **)(*piVar2 + 0x24))(piVar2,u_BitmapText/Splash_6f041064);
  FUN_6f03cb22(iVar1,piVar3,(int)piVar2);
  piVar2 = (int *)(**(code **)(**(int **)(param_1 + 0x28) + 0x24))(*(int **)(param_1 + 0x28));
  piVar3 = (int *)(**(code **)(**(int **)(param_1 + 0x28) + 0x10))(*(int **)(param_1 + 0x28));
  FUN_6f03ca77((void *)(param_1 + 0xb8),(LPCWSTR)&DAT_000003fc,piVar3,piVar2,(WCHAR *)0x0);
  *(undefined *)(param_1 + 0x130) = 0;
  return 0;
}


#moguce da je namestanje teksture ili bitmape sa programom(sinhronizacija?)
#mozda samo neko testiranje bitmape, nezz

#res://%s/HTML_UPSHELL.HTM


undefined4 __fastcall FUN_6f034236(void *param_1)

{
  undefined4 *puVar1;
  undefined4 *this;
  int *piVar2;
  HWND pHVar3;
  HMODULE hModule;
  DWORD DVar4;
  BSTR bstrString;
  WCHAR local_480 [286];
  WCHAR local_244 [260];
  tagRECT local_3c;
  undefined4 *local_2c;
  undefined4 *local_28;
  int *local_24;
  int *local_20;
  tagRECT local_1c;
  uint local_c;
  int *local_8;
  
  puVar1 = (undefined4 *)((int)param_1 + 0x3c);
  pHVar3 = GetDlgItem(*(HWND *)((int)param_1 + 0xc),0x711);
  *puVar1 = pHVar3;
  this = (undefined4 *)((int)param_1 + 0x40);
  pHVar3 = GetDlgItem(*(HWND *)((int)param_1 + 0xc),0x712);
  *this = pHVar3;
  GetWindowRect(*(HWND *)((int)param_1 + 0xc),&local_3c);
  *(LONG *)((int)param_1 + 0x2c) = local_3c.right - local_3c.left;
  *(LONG *)((int)param_1 + 0x30) = local_3c.bottom - local_3c.top;
  GetWindowRect((HWND)*puVar1,&local_1c);
  *(int *)((int)param_1 + 0x30) =
       *(int *)((int)param_1 + 0x30) +
       (*(int *)((int)param_1 + 0x60) - local_1c.bottom) + local_1c.top;
  *(int *)((int)param_1 + 0x2c) =
       *(int *)((int)param_1 + 0x2c) +
       (local_1c.left - local_1c.right) + *(int *)((int)param_1 + 0x5c);
  GetClientRect(*(HWND *)((int)param_1 + 0xc),&local_3c);
  *(LONG *)((int)param_1 + 100) =
       ((local_3c.right - local_1c.right) - local_3c.left) + local_1c.left;
  FUN_6f033cd2(param_1,(LPPOINT)&local_1c);
  local_1c.bottom = *(int *)((int)param_1 + 0x60) + local_1c.top;
  local_1c.right = local_1c.left + *(int *)((int)param_1 + 0x5c);
  MoveWindow((HWND)*puVar1,local_1c.left,local_1c.top,local_1c.right - local_1c.left,
             local_1c.bottom - local_1c.top,0);
  MoveWindow((HWND)*this,local_1c.left,local_1c.top,local_1c.right - local_1c.left,
             local_1c.bottom - local_1c.top,0);
  FUN_6f034a71((int)param_1);
  FUN_6f02382c(puVar1,&DAT_6f015ea0,(undefined4 *)((int)param_1 + 0x44));
  FUN_6f02382c(this,&DAT_6f015ea0,(undefined4 *)((int)param_1 + 0x48));
  local_8 = (int *)0x0;
  FUN_6f0237cc(puVar1,&DAT_6f03f698,&local_8);
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 0x68))(local_8,&local_c);
    local_c = local_c | 0xb;
    (**(code **)(*local_8 + 100))(local_8,local_c);
    (**(code **)(*local_8 + 0x74))(local_8,0);
    piVar2 = local_8;
    if (local_8 != (int *)0x0) {
      local_8 = (int *)0x0;
      (**(code **)(*piVar2 + 8))(piVar2);
    }
  }
  FUN_6f0237cc(this,&DAT_6f03f698,&local_8);
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 0x68))(local_8,&local_c);
    local_c = local_c | 0xb;
    (**(code **)(*local_8 + 100))(local_8,local_c);
    (**(code **)(*local_8 + 0x74))(local_8,0);
    piVar2 = local_8;
    if (local_8 != (int *)0x0) {
      local_8 = (int *)0x0;
      (**(code **)(*piVar2 + 8))(piVar2);
    }
  }
  puVar1 = (undefined4 *)((int)param_1 + 0x44);
  (**(code **)(**(int **)((int)param_1 + 0x44) + 0xf0))(*(int **)((int)param_1 + 0x44),1);
  (**(code **)(**(int **)((int)param_1 + 0x48) + 0xf0))(*(int **)((int)param_1 + 0x48),1);
  local_2c = (undefined4 *)0x0;
  FUN_6f034c11(&local_2c);
  local_20 = (int *)0x0;
  if (local_2c != (undefined4 *)0x0) {
    local_2c[2] = param_1;
    local_2c[3] = *(undefined4 *)((int)param_1 + 0x48);
    (**(code **)*local_2c)(local_2c,&DAT_6f015da0,&local_20);
    if ((local_20 != (int *)0x0) && (*(undefined4 **)((int)param_1 + 0x48) != (undefined4 *)0x0))  {
      FUN_6f01e30d(*(undefined4 **)((int)param_1 + 0x48),local_20,&DAT_6f015fa0,(int)param_1 + 0x 50)
      ;
    }
  }
  local_28 = (undefined4 *)0x0;
  FUN_6f034c11(&local_28);
  local_24 = (int *)0x0;
  if (local_28 != (undefined4 *)0x0) {
    local_28[2] = param_1;
    local_28[3] = *puVar1;
    (**(code **)*local_28)(local_28,&DAT_6f015da0,&local_24);
    if ((local_24 != (int *)0x0) && ((undefined4 *)*puVar1 != (undefined4 *)0x0)) {
      FUN_6f01e30d((undefined4 *)*puVar1,local_24,&DAT_6f015fa0,(int)param_1 + 0x54);
    }
  }
  hModule = DAT_6f041b28;
  if (DAT_6f041ba4 != (int *)0x0) {
    hModule = (HMODULE)(**(code **)(*DAT_6f041ba4 + 0xc))
                                 (DAT_6f041ba4,u_HTML_UPSELL.HTM_6f0410bc,0x17);
  }
  if ((hModule != (HMODULE)0x0) && (DVar4 = GetModuleFileNameW(hModule,local_244,0x104), DVar4 ! = 0)
     ) {
    wsprintfW(local_480,u_res://%s/HTML_UPSELL.HTM_6f041088,local_244);
    bstrString = SysAllocString(local_480);
    (**(code **)(*(int *)*puVar1 + 0x2c))((int *)*puVar1,bstrString,0,0,0,0);
    SysFreeString(bstrString);
  }
  FUN_6f034758((int)param_1);
  if (local_24 != (int *)0x0) {
    (**(code **)(*local_24 + 8))(local_24);
  }
  if (local_20 != (int *)0x0) {
    (**(code **)(*local_20 + 8))(local_20);
  }
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return 1;
}


#stvarno nemam blage sta li ovaj kod treba uraditi
#string ime je veoma cudno isto....

#HTML_UPSHELL.HTM


undefined4 __fastcall FUN_6f034236(void *param_1)

{
  undefined4 *puVar1;
  undefined4 *this;
  int *piVar2;
  HWND pHVar3;
  HMODULE hModule;
  DWORD DVar4;
  BSTR bstrString;
  WCHAR local_480 [286];
  WCHAR local_244 [260];
  tagRECT local_3c;
  undefined4 *local_2c;
  undefined4 *local_28;
  int *local_24;
  int *local_20;
  tagRECT local_1c;
  uint local_c;
  int *local_8;
  
  puVar1 = (undefined4 *)((int)param_1 + 0x3c);
  pHVar3 = GetDlgItem(*(HWND *)((int)param_1 + 0xc),0x711);
  *puVar1 = pHVar3;
  this = (undefined4 *)((int)param_1 + 0x40);
  pHVar3 = GetDlgItem(*(HWND *)((int)param_1 + 0xc),0x712);
  *this = pHVar3;
  GetWindowRect(*(HWND *)((int)param_1 + 0xc),&local_3c);
  *(LONG *)((int)param_1 + 0x2c) = local_3c.right - local_3c.left;
  *(LONG *)((int)param_1 + 0x30) = local_3c.bottom - local_3c.top;
  GetWindowRect((HWND)*puVar1,&local_1c);
  *(int *)((int)param_1 + 0x30) =
       *(int *)((int)param_1 + 0x30) +
       (*(int *)((int)param_1 + 0x60) - local_1c.bottom) + local_1c.top;
  *(int *)((int)param_1 + 0x2c) =
       *(int *)((int)param_1 + 0x2c) +
       (local_1c.left - local_1c.right) + *(int *)((int)param_1 + 0x5c);
  GetClientRect(*(HWND *)((int)param_1 + 0xc),&local_3c);
  *(LONG *)((int)param_1 + 100) =
       ((local_3c.right - local_1c.right) - local_3c.left) + local_1c.left;
  FUN_6f033cd2(param_1,(LPPOINT)&local_1c);
  local_1c.bottom = *(int *)((int)param_1 + 0x60) + local_1c.top;
  local_1c.right = local_1c.left + *(int *)((int)param_1 + 0x5c);
  MoveWindow((HWND)*puVar1,local_1c.left,local_1c.top,local_1c.right - local_1c.left,
             local_1c.bottom - local_1c.top,0);
  MoveWindow((HWND)*this,local_1c.left,local_1c.top,local_1c.right - local_1c.left,
             local_1c.bottom - local_1c.top,0);
  FUN_6f034a71((int)param_1);
  FUN_6f02382c(puVar1,&DAT_6f015ea0,(undefined4 *)((int)param_1 + 0x44));
  FUN_6f02382c(this,&DAT_6f015ea0,(undefined4 *)((int)param_1 + 0x48));
  local_8 = (int *)0x0;
  FUN_6f0237cc(puVar1,&DAT_6f03f698,&local_8);
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 0x68))(local_8,&local_c);
    local_c = local_c | 0xb;
    (**(code **)(*local_8 + 100))(local_8,local_c);
    (**(code **)(*local_8 + 0x74))(local_8,0);
    piVar2 = local_8;
    if (local_8 != (int *)0x0) {
      local_8 = (int *)0x0;
      (**(code **)(*piVar2 + 8))(piVar2);
    }
  }
  FUN_6f0237cc(this,&DAT_6f03f698,&local_8);
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 0x68))(local_8,&local_c);
    local_c = local_c | 0xb;
    (**(code **)(*local_8 + 100))(local_8,local_c);
    (**(code **)(*local_8 + 0x74))(local_8,0);
    piVar2 = local_8;
    if (local_8 != (int *)0x0) {
      local_8 = (int *)0x0;
      (**(code **)(*piVar2 + 8))(piVar2);
    }
  }
  puVar1 = (undefined4 *)((int)param_1 + 0x44);
  (**(code **)(**(int **)((int)param_1 + 0x44) + 0xf0))(*(int **)((int)param_1 + 0x44),1);
  (**(code **)(**(int **)((int)param_1 + 0x48) + 0xf0))(*(int **)((int)param_1 + 0x48),1);
  local_2c = (undefined4 *)0x0;
  FUN_6f034c11(&local_2c);
  local_20 = (int *)0x0;
  if (local_2c != (undefined4 *)0x0) {
    local_2c[2] = param_1;
    local_2c[3] = *(undefined4 *)((int)param_1 + 0x48);
    (**(code **)*local_2c)(local_2c,&DAT_6f015da0,&local_20);
    if ((local_20 != (int *)0x0) && (*(undefined4 **)((int)param_1 + 0x48) != (undefined4 *)0x0))  {
      FUN_6f01e30d(*(undefined4 **)((int)param_1 + 0x48),local_20,&DAT_6f015fa0,(int)param_1 + 0x 50)
      ;
    }
  }
  local_28 = (undefined4 *)0x0;
  FUN_6f034c11(&local_28);
  local_24 = (int *)0x0;
  if (local_28 != (undefined4 *)0x0) {
    local_28[2] = param_1;
    local_28[3] = *puVar1;
    (**(code **)*local_28)(local_28,&DAT_6f015da0,&local_24);
    if ((local_24 != (int *)0x0) && ((undefined4 *)*puVar1 != (undefined4 *)0x0)) {
      FUN_6f01e30d((undefined4 *)*puVar1,local_24,&DAT_6f015fa0,(int)param_1 + 0x54);
    }
  }
  hModule = DAT_6f041b28;
  if (DAT_6f041ba4 != (int *)0x0) {
    hModule = (HMODULE)(**(code **)(*DAT_6f041ba4 + 0xc))
                                 (DAT_6f041ba4,u_HTML_UPSELL.HTM_6f0410bc,0x17);
  }
  if ((hModule != (HMODULE)0x0) && (DVar4 = GetModuleFileNameW(hModule,local_244,0x104), DVar4 ! = 0)
     ) {
    wsprintfW(local_480,u_res://%s/HTML_UPSELL.HTM_6f041088,local_244);
    bstrString = SysAllocString(local_480);
    (**(code **)(*(int *)*puVar1 + 0x2c))((int *)*puVar1,bstrString,0,0,0,0);
    SysFreeString(bstrString);
  }
  FUN_6f034758((int)param_1);
  if (local_24 != (int *)0x0) {
    (**(code **)(*local_24 + 8))(local_24);
  }
  if (local_20 != (int *)0x0) {
    (**(code **)(*local_20 + 8))(local_20);
  }
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return 1;
}

#opet isti kod...
#sta ako je nesto u vezi odrzavanja pokreta prozora u kom se nalazi? (to je glupo...)

#Unknown Language

#na lokaciji 6f03536f


/* WARNING: Removing unreachable block (ram,0x6f03540a) */
/* WARNING: Removing unreachable block (ram,0x6f035332) */
/* WARNING: Removing unreachable block (ram,0x6f035436) */

undefined4 FUN_6f0351fb(void *param_1,int param_2,uint param_3)

{
  DWORD DVar1;
  int *piVar2;
  int iVar3;
  wchar_t *pwVar4;
  wchar_t *pwVar5;
  undefined4 *puVar6;
  undefined local_2810 [6144];
  wchar_t local_1010 [17];
  undefined4 local_fee [503];
  WCHAR local_810 [960];
  undefined4 uStackY_90;
  
  FUN_6f03c940();
  if (*(int *)((int)param_1 + 0xc) == 0) {
    return 1;
  }
  if (param_2 == 0) {
    if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
      DVar1 = GetTickCount();
      *(undefined *)((int)param_1 + 0x48) = 0;
      *(int *)((int)param_1 + 0x40) =
           *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
      FUN_6f034ffe((int)param_1);
    }
    FUN_6f03550f(param_1,'\x01');
    FUN_6f0354b7(param_1,0);
    piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
    iVar3 = (**(code **)(*piVar2 + 0x28))();
    if (iVar3 == 0) {
      return 0x80004005;
    }
    SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
  }
  else {
    if (param_2 == 1) {
      if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
        DVar1 = GetTickCount();
        *(undefined *)((int)param_1 + 0x48) = 0;
        *(int *)((int)param_1 + 0x40) =
             *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
        FUN_6f034ffe((int)param_1);
      }
      FUN_6f03550f(param_1,'\0');
      FUN_6f0354b7(param_1,param_3);
      piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
      iVar3 = (**(code **)(*piVar2 + 0x28))();
      if (iVar3 != 0) {
        piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
        iVar3 = (**(code **)(*piVar2 + 0x28))();
        if (iVar3 != 0) {
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x28))();
          (**(code **)(*piVar2 + 0x5c))();
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
          iVar3 = (**(code **)(*piVar2 + 0x28))();
          if (iVar3 != 0) {
            pwVar4 = u_Unknown_Language_6f0410e0;
            pwVar5 = local_1010;
            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {
              *(undefined4 *)pwVar5 = *(undefined4 *)pwVar4;
              pwVar4 = pwVar4 + 2;
              pwVar5 = pwVar5 + 2;
            }
            *pwVar5 = *pwVar4;
            puVar6 = local_fee;
            for (iVar3 = 0x1f7; iVar3 != 0; iVar3 = iVar3 + -1) {
              *puVar6 = 0;
              puVar6 = puVar6 + 1;
            }
            *(undefined2 *)puVar6 = 0;
            piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x14))();
            iVar3 = (**(code **)(*piVar2 + 0x10))();
            if (-1 < iVar3) {
              (**(code **)(iRam00000000 + 0x58))();
            }
            uStackY_90 = 0x6f0353fc;
            iVar3 = FUN_6f01bbf9(local_2810,local_810,0x400);
            if (iVar3 != 0) {
              SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
              return 0;
            }
          }
        }
      }
      return 0x80004005;
    }
    if (param_2 == 2) {
      if (*(char *)((int)param_1 + 0x48) == '\0') {
        *(undefined *)((int)param_1 + 0x48) = 1;
        DVar1 = GetTickCount();
        *(DWORD *)((int)param_1 + 0x44) = DVar1;
        KillTimer(*(HWND *)((int)param_1 + 0xc),499);
      }
      FUN_6f03550f(param_1,'\0');
    }
    else if (param_2 == 3) {
      DVar1 = GetTickCount();
      *(DWORD *)((int)param_1 + 0x40) = DVar1 - *(int *)((int)param_1 + 0x3c) * param_3;
      FUN_6f034ffe((int)param_1);
    }
  }
  return 0;
}


#na lokaciji 6f03537b


/* WARNING: Removing unreachable block (ram,0x6f03540a) */
/* WARNING: Removing unreachable block (ram,0x6f035332) */
/* WARNING: Removing unreachable block (ram,0x6f035436) */

undefined4 FUN_6f0351fb(void *param_1,int param_2,uint param_3)

{
  DWORD DVar1;
  int *piVar2;
  int iVar3;
  wchar_t *pwVar4;
  wchar_t *pwVar5;
  undefined4 *puVar6;
  undefined local_2810 [6144];
  wchar_t local_1010 [17];
  undefined4 local_fee [503];
  WCHAR local_810 [960];
  undefined4 uStackY_90;
  
  FUN_6f03c940();
  if (*(int *)((int)param_1 + 0xc) == 0) {
    return 1;
  }
  if (param_2 == 0) {
    if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
      DVar1 = GetTickCount();
      *(undefined *)((int)param_1 + 0x48) = 0;
      *(int *)((int)param_1 + 0x40) =
           *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
      FUN_6f034ffe((int)param_1);
    }
    FUN_6f03550f(param_1,'\x01');
    FUN_6f0354b7(param_1,0);
    piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
    iVar3 = (**(code **)(*piVar2 + 0x28))();
    if (iVar3 == 0) {
      return 0x80004005;
    }
    SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
  }
  else {
    if (param_2 == 1) {
      if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
        DVar1 = GetTickCount();
        *(undefined *)((int)param_1 + 0x48) = 0;
        *(int *)((int)param_1 + 0x40) =
             *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
        FUN_6f034ffe((int)param_1);
      }
      FUN_6f03550f(param_1,'\0');
      FUN_6f0354b7(param_1,param_3);
      piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
      iVar3 = (**(code **)(*piVar2 + 0x28))();
      if (iVar3 != 0) {
        piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
        iVar3 = (**(code **)(*piVar2 + 0x28))();
        if (iVar3 != 0) {
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x28))();
          (**(code **)(*piVar2 + 0x5c))();
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
          iVar3 = (**(code **)(*piVar2 + 0x28))();
          if (iVar3 != 0) {
            pwVar4 = u_Unknown_Language_6f0410e0;
            pwVar5 = local_1010;
            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {
              *(undefined4 *)pwVar5 = *(undefined4 *)pwVar4;
              pwVar4 = pwVar4 + 2;
              pwVar5 = pwVar5 + 2;
            }
            *pwVar5 = *pwVar4;
            puVar6 = local_fee;
            for (iVar3 = 0x1f7; iVar3 != 0; iVar3 = iVar3 + -1) {
              *puVar6 = 0;
              puVar6 = puVar6 + 1;
            }
            *(undefined2 *)puVar6 = 0;
            piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x14))();
            iVar3 = (**(code **)(*piVar2 + 0x10))();
            if (-1 < iVar3) {
              (**(code **)(iRam00000000 + 0x58))();
            }
            uStackY_90 = 0x6f0353fc;
            iVar3 = FUN_6f01bbf9(local_2810,local_810,0x400);
            if (iVar3 != 0) {
              SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
              return 0;
            }
          }
        }
      }
      return 0x80004005;
    }
    if (param_2 == 2) {
      if (*(char *)((int)param_1 + 0x48) == '\0') {
        *(undefined *)((int)param_1 + 0x48) = 1;
        DVar1 = GetTickCount();
        *(DWORD *)((int)param_1 + 0x44) = DVar1;
        KillTimer(*(HWND *)((int)param_1 + 0xc),499);
      }
      FUN_6f03550f(param_1,'\0');
    }
    else if (param_2 == 3) {
      DVar1 = GetTickCount();
      *(DWORD *)((int)param_1 + 0x40) = DVar1 - *(int *)((int)param_1 + 0x3c) * param_3;
      FUN_6f034ffe((int)param_1);
    }
  }
  return 0;
}


#na lokaciji 6f03537d


/* WARNING: Removing unreachable block (ram,0x6f03540a) */
/* WARNING: Removing unreachable block (ram,0x6f035332) */
/* WARNING: Removing unreachable block (ram,0x6f035436) */

undefined4 FUN_6f0351fb(void *param_1,int param_2,uint param_3)

{
  DWORD DVar1;
  int *piVar2;
  int iVar3;
  wchar_t *pwVar4;
  wchar_t *pwVar5;
  undefined4 *puVar6;
  undefined local_2810 [6144];
  wchar_t local_1010 [17];
  undefined4 local_fee [503];
  WCHAR local_810 [960];
  undefined4 uStackY_90;
  
  FUN_6f03c940();
  if (*(int *)((int)param_1 + 0xc) == 0) {
    return 1;
  }
  if (param_2 == 0) {
    if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
      DVar1 = GetTickCount();
      *(undefined *)((int)param_1 + 0x48) = 0;
      *(int *)((int)param_1 + 0x40) =
           *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
      FUN_6f034ffe((int)param_1);
    }
    FUN_6f03550f(param_1,'\x01');
    FUN_6f0354b7(param_1,0);
    piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
    iVar3 = (**(code **)(*piVar2 + 0x28))();
    if (iVar3 == 0) {
      return 0x80004005;
    }
    SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
  }
  else {
    if (param_2 == 1) {
      if ((*(char *)((int)param_1 + 0x48) != '\0') && (*(int *)((int)param_1 + 0x50) != 0)) {
        DVar1 = GetTickCount();
        *(undefined *)((int)param_1 + 0x48) = 0;
        *(int *)((int)param_1 + 0x40) =
             *(int *)((int)param_1 + 0x40) + (DVar1 - *(int *)((int)param_1 + 0x44));
        FUN_6f034ffe((int)param_1);
      }
      FUN_6f03550f(param_1,'\0');
      FUN_6f0354b7(param_1,param_3);
      piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
      iVar3 = (**(code **)(*piVar2 + 0x28))();
      if (iVar3 != 0) {
        piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
        iVar3 = (**(code **)(*piVar2 + 0x28))();
        if (iVar3 != 0) {
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x28))();
          (**(code **)(*piVar2 + 0x5c))();
          piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x10))();
          iVar3 = (**(code **)(*piVar2 + 0x28))();
          if (iVar3 != 0) {
            pwVar4 = u_Unknown_Language_6f0410e0;
            pwVar5 = local_1010;
            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {
              *(undefined4 *)pwVar5 = *(undefined4 *)pwVar4;
              pwVar4 = pwVar4 + 2;
              pwVar5 = pwVar5 + 2;
            }
            *pwVar5 = *pwVar4;
            puVar6 = local_fee;
            for (iVar3 = 0x1f7; iVar3 != 0; iVar3 = iVar3 + -1) {
              *puVar6 = 0;
              puVar6 = puVar6 + 1;
            }
            *(undefined2 *)puVar6 = 0;
            piVar2 = (int *)(**(code **)(**(int **)((int)param_1 + 0x28) + 0x14))();
            iVar3 = (**(code **)(*piVar2 + 0x10))();
            if (-1 < iVar3) {
              (**(code **)(iRam00000000 + 0x58))();
            }
            uStackY_90 = 0x6f0353fc;
            iVar3 = FUN_6f01bbf9(local_2810,local_810,0x400);
            if (iVar3 != 0) {
              SetDlgItemTextW(*(HWND *)((int)param_1 + 0xc),0x6d7,local_810);
              return 0;
            }
          }
        }
      }
      return 0x80004005;
    }
    if (param_2 == 2) {
      if (*(char *)((int)param_1 + 0x48) == '\0') {
        *(undefined *)((int)param_1 + 0x48) = 1;
        DVar1 = GetTickCount();
        *(DWORD *)((int)param_1 + 0x44) = DVar1;
        KillTimer(*(HWND *)((int)param_1 + 0xc),499);
      }
      FUN_6f03550f(param_1,'\0');
    }
    else if (param_2 == 3) {
      DVar1 = GetTickCount();
      *(DWORD *)((int)param_1 + 0x40) = DVar1 - *(int *)((int)param_1 + 0x3c) * param_3;
      FUN_6f034ffe((int)param_1);
    }
  }
  return 0;
}



#na lokaciji 6f037abc


void __thiscall FUN_6f037a32(void *this,undefined4 *param_1,int *param_2)

{
  int iVar1;
  uint uVar2;
  WCHAR local_804 [1024];
  
  if ((*(char *)((int)this + 0x5e) == '\0') && ((int *)0x27 < param_2)) {
    (**(code **)(**(int **)((int)this + 0x70) + 0x14))(*(int **)((int)this + 0x70),*param_1);
    param_2 = (int *)0x0;
    *(undefined *)((int)this + 0x5e) = 1;
    iVar1 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&param_2);
    if (-1 < iVar1) {
      uVar2 = FUN_6f03d2de(param_1[9],local_804,0x400,*(int **)((int)this + 0x24));
      if (((int)uVar2 < 0) &&
         (uVar2 = FUN_6f03d2de(0,local_804,0x400,*(int **)((int)this + 0x24)), (int)uVar2 < 0)) {
        lstrcpyW(local_804,u_Unknown_Language_6f0410e0);
      }
      (**(code **)(*param_2 + 0x18))(param_2,L"LocalLanguage",local_804);
      (**(code **)(*param_2 + 0x20))(param_2,L"LocalLCID",param_1[9]);
    }
    if (param_2 != (int *)0x0) {
      (**(code **)(*param_2 + 8))(param_2);
    }
  }
  return;
}


#na lokaciji 6f037c85


void __thiscall FUN_6f037b02(void *this,undefined4 *param_1,uint param_2)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  undefined4 *puVar6;
  WCHAR local_850 [1024];
  WCHAR local_50 [32];
  int *local_10;
  undefined4 *local_c;
  int *local_8;
  
  local_8 = (int *)0x0;
  if ((((*(char *)((int)this + 0x5e) != '\0') && (*(char *)((int)this + 0x60) == '\0')) &&
      (0x17 < param_2)) &&
     ((*(ushort *)(param_1 + 2) < 5 &&
      ((uint)(((short)*(ushort *)(param_1 + 2) + 1) * 0xc) <= param_2)))) {
    (**(code **)(**(int **)((int)this + 0x1c) + 0x1c))
              (*(int **)((int)this + 0x1c),2,0x30006,0xffffffff,0,0,0);
    (**(code **)(**(int **)((int)this + 0x1c) + 0x1c))
              (*(int **)((int)this + 0x1c),2,0x30005,0xffffffff,0,0,0);
    (**(code **)(**(int **)((int)this + 0x70) + 0x3c))(*(int **)((int)this + 0x70));
    (**(code **)(**(int **)((int)this + 0x70) + 0x1c))(*(int **)((int)this + 0x70));
    param_2 = 0;
    if (0 < *(short *)(param_1 + 2)) {
      local_c = &DAT_6f041170;
      puVar1 = param_1;
      do {
        puVar6 = puVar1 + 3;
        iVar3 = (**(code **)(**(int **)((int)this + 0x24) + 0x28))
                          (*(int **)((int)this + 0x24),*local_c,local_50,0x20);
        if ((iVar3 == 0) ||
           (iVar3 = (**(code **)(**(int **)((int)this + 0x70) + 0x10))
                              (*(int **)((int)this + 0x70),*puVar6,local_50), iVar3 < 0))
        goto LAB_6f037d37;
        iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                          (*(int **)((int)this + 0x20),0xffffffff,*puVar6,&local_8);
        if (-1 < iVar3) {
          (**(code **)(*local_8 + 0x20))(local_8,L"PlayerNumber",param_2);
          (**(code **)(*local_8 + 0x20))(local_8,L"PlayerReady",0);
          (**(code **)(*local_8 + 0x20))(local_8,L"ChatStatus",*(char *)(puVar1 + 5) != '\0');
          iVar3 = (int)*(short *)((int)puVar1 + 0x16);
          if ((iVar3 != 1) && (iVar3 != 2)) {
            iVar3 = 0;
          }
          (**(code **)(*local_8 + 0x20))(local_8,L"PlayerSkill",iVar3);
          uVar4 = FUN_6f03d2de(puVar1[4],local_850,0x400,*(int **)((int)this + 0x24));
          if (((int)uVar4 < 0) &&
             (uVar4 = FUN_6f03d2de(0,local_850,0x400,*(int **)((int)this + 0x24)), (int)uVar4 < 0 ))
          {
            lstrcpyW(local_850,u_Unknown_Language_6f0410e0);
          }
          (**(code **)(*local_8 + 0x18))(local_8,L"Language",local_850);
          piVar2 = local_8;
          if (local_8 != (int *)0x0) {
            local_8 = (int *)0x0;
            (**(code **)(*piVar2 + 8))(piVar2);
          }
          local_10 = *(int **)((int)this + 0x1c);
          iVar3 = *local_10;
          iVar5 = lstrlenW(local_50);
          (**(code **)(iVar3 + 0x20))(local_10,2,0x3000a,0xffffffff,*puVar6,local_50,iVar5 * 2 + 2);
        }
        param_2 = param_2 + 1;
        local_c = local_c + 1;
        puVar1 = puVar6;
      } while ((int)param_2 < (int)*(short *)(param_1 + 2));
    }
    (**(code **)(**(int **)((int)this + 0x1c) + 0x1c))
              (*(int **)((int)this + 0x1c),2,0x30007,0xffffffff,0,0,0);
    (**(code **)(**(int **)((int)this + 0x1c) + 0x1c))
              (*(int **)((int)this + 0x1c),2,0xa0005,0xffffffff,0,*param_1,
               (int)*(short *)((int)param_1 + 6));
    *(undefined *)((int)this + 0x60) = 1;
LAB_6f037d37:
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
  }
  return;
}


#na lokaciji 6f0380b7



void __thiscall FUN_6f037eff(void *this,undefined4 *param_1,int *param_2)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  WCHAR local_898 [1024];
  WCHAR local_98 [32];
  WCHAR local_58 [32];
  int *local_18;
  undefined4 local_14;
  undefined4 local_10 [2];
  int *local_8;
  
  puVar2 = param_1;
  if (*(char *)((int)this + 0x60) == '\0') {
    return;
  }
  if (param_2 < (int *)0x8) {
    return;
  }
  local_8 = (int *)0x0;
  param_2 = (int *)0x0;
  iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                    (*(int **)((int)this + 0x20),0xffffffff,*param_1,&local_8);
  if ((-1 < iVar3) &&
     (iVar3 = (**(code **)(*local_8 + 0x60))(local_8,L"PlayerNumber",&param_1), -1 < iVar3)) {
    local_14 = 0x40;
    iVar3 = (**(code **)(*local_8 + 0x58))(local_8,L"Name",local_98,&local_14);
    if ((-1 < iVar3) &&
       (iVar3 = (**(code **)(*local_8 + 0x60))(local_8,L"PlayerReady",local_10), piVar1 = local_8 ,
       -1 < iVar3)) {
      if (local_8 != (int *)0x0) {
        local_8 = (int *)0x0;
        (**(code **)(*piVar1 + 8))(piVar1);
      }
      local_18 = *(int **)((int)this + 0x1c);
      iVar3 = *local_18;
      iVar4 = lstrlenW(local_98);
      (**(code **)(iVar3 + 0x20))(local_18,2,0x3000b,0xffffffff,*puVar2,local_98,iVar4 * 2 + 2);
      (**(code **)(**(int **)((int)this + 0x1c) + 0x1c))
                (*(int **)((int)this + 0x1c),2,0x3000c,0xffffffff,*puVar2,0,0);
      iVar3 = (**(code **)(**(int **)((int)this + 0x24) + 0x28))
                        (*(int **)((int)this + 0x24),
                         *(undefined4 *)(&DAT_6f041180 + (int)param_1 * 4),local_58,0x20);
      if (((iVar3 != 0) &&
          (iVar3 = (**(code **)(**(int **)((int)this + 0x70) + 0x10))
                             (*(int **)((int)this + 0x70),puVar2[1],local_58), -1 < iVar3)) &&
         (iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                            (*(int **)((int)this + 0x20),0xffffffff,puVar2[1],&param_2), -1 < iVar 3)
         ) {
        (**(code **)(*param_2 + 0x20))(param_2,L"PlayerNumber",param_1);
        (**(code **)(*param_2 + 0x20))(param_2,L"PlayerReady",local_10[0]);
        (**(code **)(*param_2 + 0x20))(param_2,L"ChatStatus",0);
        (**(code **)(*param_2 + 0x20))(param_2,L"PlayerSkill",0xffffffff);
        uVar5 = FUN_6f03d2de(0,local_898,0x400,*(int **)((int)this + 0x24));
        if ((int)uVar5 < 0) {
          lstrcpyW(local_898,u_Unknown_Language_6f0410e0);
        }
        (**(code **)(*param_2 + 0x18))(param_2,L"Language",local_898);
        piVar1 = param_2;
        if (param_2 != (int *)0x0) {
          param_2 = (int *)0x0;
          (**(code **)(*piVar1 + 8))(piVar1);
        }
        piVar1 = *(int **)((int)this + 0x1c);
        iVar3 = *piVar1;
        iVar4 = lstrlenW(local_58);
        (**(code **)(iVar3 + 0x20))(piVar1,2,0x3000a,0xffffffff,puVar2[1],local_58,iVar4 * 2 + 2) ;
      }
      if (param_2 != (int *)0x0) {
        (**(code **)(*param_2 + 8))(param_2);
      }
      goto LAB_6f038123;
    }
  }
  if (param_2 != (int *)0x0) {
    (**(code **)(*param_2 + 8))(param_2);
  }
LAB_6f038123:
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 8))(local_8);
  }
  return;
}


#na lokaciji 6f03a5c9


/* WARNING: Removing unreachable block (ram,0x6f03a617) */

void FUN_6f03a426(void)

{
  int iVar1;
  HWND hWnd;
  uint uVar2;
  int extraout_ECX;
  WCHAR local_205c [1024];
  WCHAR local_185c [1024];
  WCHAR local_105c [1024];
  WCHAR local_85c [994];
  undefined4 uStackY_98;
  int *piStackY_94;
  undefined4 uStackY_90;
  undefined4 uStackY_8c;
  undefined4 uStackY_88;
  undefined4 uStackY_84;
  undefined4 uStackY_80;
  undefined4 uStackY_7c;
  undefined4 uStackY_78;
  wchar_t *pwStackY_74;
  undefined4 local_5c;
  undefined4 uStack_58;
  int *piStack_54;
  wchar_t **ppwStack_50;
  undefined4 *puStack_4c;
  wchar_t *pwStack_48;
  int *piStack_44;
  LPCWSTR lpString;
  wchar_t *local_1c;
  WCHAR *local_18;
  LCID local_14;
  
  FUN_6f03c940();
  local_18 = local_185c;
  local_14 = 0x400;
  local_1c = (wchar_t *)0x4b0;
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_185c,u_Zone_6f040f3c);
  }
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_105c,(LPCWSTR)&lpString2_6f040f34);
  }
  piStack_44 = (int *)0x6f03a4b0;
  iVar1 = FUN_6f01bbf9(local_105c,local_205c,0x400);
  if (iVar1 == 0) {
    lstrcpyW(local_205c,local_185c);
  }
  lpString = *(LPCWSTR *)(extraout_ECX + 0x14);
  hWnd = (HWND)(**(code **)(*(int *)lpString + 0x54))();
  SetWindowTextW(hWnd,lpString);
  if (*(char *)(extraout_ECX + 0x385c) == '\0') {
    *(char *)(extraout_ECX + 0x385c) = '\x01';
    piStack_44 = *(int **)(extraout_ECX + 0x1c);
    local_5c = (wchar_t *)((uint)local_5c._2_2_ << 0x10);
    pwStack_48 = L"삅ᙼ䖋跼\xf455赒ꡕࢋ桒㡬漁ｐ塑㥦ꡝ萏Ù";
    iVar1 = (**(code **)(*piStack_44 + 0x10))();
    if (-1 < iVar1) {
      pwStack_48 = (wchar_t *)&stack0xfffffff0;
      puStack_4c = &local_5c;
      ppwStack_50 = (wchar_t **)0x6f01386c;
      piStack_54 = (int *)0x0;
      uStack_58 = 0x6f03a52d;
      (**(code **)(iRam00000000 + 0x58))();
    }
    if ((short)local_5c != 0) {
      ppwStack_50 = *(wchar_t ***)(extraout_ECX + 0x14);
      puStack_4c = &local_5c;
      pwStack_48 = u_Windows_User_6f041310;
      piStack_54 = (int *)0x6f03a549;
      iVar1 = (**(code **)((int)*ppwStack_50 + 0x10))();
      if (-1 < iVar1) {
        piStack_54 = *(int **)(extraout_ECX + 0x34);
        pwStack_48 = (wchar_t *)&stack0xfffffff4;
        ppwStack_50 = &local_1c;
        local_1c = L"Lobby";
        local_18 = L"ChatOnAtStartup";
        puStack_4c = (undefined4 *)0x2;
        uStack_58 = 0x6f03a579;
        (**(code **)(*piStack_54 + 0x5c))();
        uStack_58 = 1;
        local_5c = L"LocalChatStatus";
        (**(code **)(iRam00000000 + 0x20))();
        local_14 = GetUserDefaultLCID();
        pwStackY_74 = 
        L"삅❽盿贠ꢅ\xfff7埿卐Ῠ-蔀緀贒ꢅ\xfff7棿რ漄ｐ谕Ē譯ﱅ閍\xf7a8\xffff桒㶠漁ࢋｐᡑ䖋￼\xf075ࢋ뱨Ľ偯凿謠ᡶ卓譓樆 棿\x03\x03ɪｖ᱐䖋㯼瓃謆倈凿弈孞쏉譕臬䣬\b匀譖埱\xe068ļ㍯跛ц䗇ﻴ\x03倀䖍僸襦뢝\xfff7\xe8ff樳\xffff事謬 贀\xf47dᆋ赗뢽\xfff7埿児勿赘\xf84d\xf88b쫨\x14㬀緻㈇\xe9c0À"
        ;
        uVar2 = FUN_6f03d2de(local_14,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
        if ((int)uVar2 < 0) {
          pwStackY_74 = 
          L"삅ች薍\xf7a8\xffff\xe068А偯ᗿኌ漁䖋跼ꢕ\xfff7勿ꁨĽ譯倈凿謘ﱅ痿诰栈㶼漁ｐ⁑皋匘卓ڋｪͨ̀樀嘂僿謜ﱅ쌻ٴࢋｐࡑ幟 쥛嗃\xec8b\xec81ࡈ"
          ;
          uVar2 = FUN_6f03d2de(0,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
          if ((int)uVar2 < 0) {
            lstrcpyW(local_85c,u_Unknown_Language_6f0410e0);
          }
        }
        (**(code **)(iRam00000000 + 0x18))();
        pwStackY_74 = L"LocalLCID";
        uStackY_78 = 0;
        uStackY_7c = 0x6f03a5fb;
        (**(code **)(iRam00000000 + 0x20))();
        piStackY_94 = *(int **)(extraout_ECX + 0x18);
        uStackY_7c = 0;
        uStackY_80 = 0;
        uStackY_84 = 0;
        uStackY_88 = 0xffffffff;
        uStackY_8c = 0x30003;
        uStackY_90 = 2;
        uStackY_98 = 0x6f03a610;
        (**(code **)(*piStackY_94 + 0x1c))();
      }
    }
  }
  return;
}


#samo bi po onom imenu stringa rekao da je u pitanju nesto oko (de)sifrovanja
#mozda nacin da prevede nepoznati tekst poslat ili onaj dobijeni kao prevod sta se desava u handshake procesu

#SLCID=<%d>ULCID=<%d>ILCID=<%d>UTCOFFSET=<%d>Skill=<%s>Chat=<%s>Exit=<%d>
#(ОЈ ИСУСЕ И МАРИЈО ДРАГА ХАХАХА)


undefined4 __thiscall FUN_6f03824d(void *this,undefined4 *param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  undefined *puVar5;
  _TIME_ZONE_INFORMATION local_d0;
  wchar_t *local_24;
  wchar_t *local_20;
  LCID local_1c;
  LCID local_18;
  undefined4 local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puVar1 = param_1;
  if (param_1 == (undefined4 *)0x0) {
    uVar2 = 0;
  }
  else {
    local_18 = GetSystemDefaultLCID();
    local_1c = GetUserDefaultLCID();
    local_14 = (**(code **)(**(int **)((int)this + 0x18) + 100))(*(int **)((int)this + 0x18));
    GetTimeZoneInformation(&local_d0);
    param_1 = (undefined4 *)0x0;
    local_24 = L"Lobby";
    local_20 = L"SkillLevel";
    (**(code **)(**(int **)((int)this + 0x38) + 0x5c))
              (*(int **)((int)this + 0x38),&local_24,2,&param_1);
    local_8 = (int *)0x0;
    local_10 = 0;
    iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&local_8);
    if (-1 < iVar3) {
      (**(code **)(*local_8 + 0x60))(local_8,L"LocalChatStatus",&local_10);
    }
    local_c = (int *)0x0;
    *(bool *)((int)this + 0x5c) = local_10 != 0;
    *puVar1 = 0x64756465;
    puVar1[1] = 1;
    (**(code **)(**(int **)((int)this + 0x18) + 0x74))
              (*(int **)((int)this + 0x18),&DAT_6f014d28,&DAT_6f0150f8,&local_c);
    if (local_c == (int *)0x0) {
      uVar2 = 0;
    }
    else {
      uVar2 = (**(code **)(*local_c + 0x18))(local_c,0xc,1);
    }
    puVar5 = &DAT_6f041204;
    if (*(char *)((int)this + 0x5c) == '\0') {
      puVar5 = &DAT_6f041200;
    }
    if (param_1 == (undefined4 *)0x2) {
      pcVar4 = s_Expert_6f0411f8;
    }
    else {
      pcVar4 = s_Intermediate_6f0411e8;
      if (param_1 != (undefined4 *)0x1) {
        pcVar4 = s_Beginner_6f0411dc;
      }
    }
    wsprintfA((LPSTR)(puVar1 + 2),s_SLCID=<%d>ULCID=<%d>ILCID=<%d>UT_6f041190,local_18,local_1c,
              local_14,local_d0.Bias,pcVar4,puVar5,uVar2);
    if (local_c != (int *)0x0) {
      (**(code **)(*local_c + 8))(local_c);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    uVar2 = 1;
  }
  return uVar2;
}


#Znaci(HAHAHA) ovaj kod bi mogao biti onaj koji valjda prenosi podatke igraca/klijenta
#njegov trenutni skill igranja, hoce li da razgovara u chatu, jel napustio i sl.

#Beginner


undefined4 __thiscall FUN_6f03824d(void *this,undefined4 *param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  undefined *puVar5;
  _TIME_ZONE_INFORMATION local_d0;
  wchar_t *local_24;
  wchar_t *local_20;
  LCID local_1c;
  LCID local_18;
  undefined4 local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puVar1 = param_1;
  if (param_1 == (undefined4 *)0x0) {
    uVar2 = 0;
  }
  else {
    local_18 = GetSystemDefaultLCID();
    local_1c = GetUserDefaultLCID();
    local_14 = (**(code **)(**(int **)((int)this + 0x18) + 100))(*(int **)((int)this + 0x18));
    GetTimeZoneInformation(&local_d0);
    param_1 = (undefined4 *)0x0;
    local_24 = L"Lobby";
    local_20 = L"SkillLevel";
    (**(code **)(**(int **)((int)this + 0x38) + 0x5c))
              (*(int **)((int)this + 0x38),&local_24,2,&param_1);
    local_8 = (int *)0x0;
    local_10 = 0;
    iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&local_8);
    if (-1 < iVar3) {
      (**(code **)(*local_8 + 0x60))(local_8,L"LocalChatStatus",&local_10);
    }
    local_c = (int *)0x0;
    *(bool *)((int)this + 0x5c) = local_10 != 0;
    *puVar1 = 0x64756465;
    puVar1[1] = 1;
    (**(code **)(**(int **)((int)this + 0x18) + 0x74))
              (*(int **)((int)this + 0x18),&DAT_6f014d28,&DAT_6f0150f8,&local_c);
    if (local_c == (int *)0x0) {
      uVar2 = 0;
    }
    else {
      uVar2 = (**(code **)(*local_c + 0x18))(local_c,0xc,1);
    }
    puVar5 = &DAT_6f041204;
    if (*(char *)((int)this + 0x5c) == '\0') {
      puVar5 = &DAT_6f041200;
    }
    if (param_1 == (undefined4 *)0x2) {
      pcVar4 = s_Expert_6f0411f8;
    }
    else {
      pcVar4 = s_Intermediate_6f0411e8;
      if (param_1 != (undefined4 *)0x1) {
        pcVar4 = s_Beginner_6f0411dc;
      }
    }
    wsprintfA((LPSTR)(puVar1 + 2),s_SLCID=<%d>ULCID=<%d>ILCID=<%d>UT_6f041190,local_18,local_1c,
              local_14,local_d0.Bias,pcVar4,puVar5,uVar2);
    if (local_c != (int *)0x0) {
      (**(code **)(*local_c + 8))(local_c);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    uVar2 = 1;
  }
  return uVar2;
}


#sada se mozda pocne ponavljati kod ali sa drugim oznacenim stringovima
#ovaj je beginner(pocetnik) u igri i valjda ce na osnovu toga traziti takve igrace.

#Intermediate


undefined4 __thiscall FUN_6f03824d(void *this,undefined4 *param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  undefined *puVar5;
  _TIME_ZONE_INFORMATION local_d0;
  wchar_t *local_24;
  wchar_t *local_20;
  LCID local_1c;
  LCID local_18;
  undefined4 local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puVar1 = param_1;
  if (param_1 == (undefined4 *)0x0) {
    uVar2 = 0;
  }
  else {
    local_18 = GetSystemDefaultLCID();
    local_1c = GetUserDefaultLCID();
    local_14 = (**(code **)(**(int **)((int)this + 0x18) + 100))(*(int **)((int)this + 0x18));
    GetTimeZoneInformation(&local_d0);
    param_1 = (undefined4 *)0x0;
    local_24 = L"Lobby";
    local_20 = L"SkillLevel";
    (**(code **)(**(int **)((int)this + 0x38) + 0x5c))
              (*(int **)((int)this + 0x38),&local_24,2,&param_1);
    local_8 = (int *)0x0;
    local_10 = 0;
    iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&local_8);
    if (-1 < iVar3) {
      (**(code **)(*local_8 + 0x60))(local_8,L"LocalChatStatus",&local_10);
    }
    local_c = (int *)0x0;
    *(bool *)((int)this + 0x5c) = local_10 != 0;
    *puVar1 = 0x64756465;
    puVar1[1] = 1;
    (**(code **)(**(int **)((int)this + 0x18) + 0x74))
              (*(int **)((int)this + 0x18),&DAT_6f014d28,&DAT_6f0150f8,&local_c);
    if (local_c == (int *)0x0) {
      uVar2 = 0;
    }
    else {
      uVar2 = (**(code **)(*local_c + 0x18))(local_c,0xc,1);
    }
    puVar5 = &DAT_6f041204;
    if (*(char *)((int)this + 0x5c) == '\0') {
      puVar5 = &DAT_6f041200;
    }
    if (param_1 == (undefined4 *)0x2) {
      pcVar4 = s_Expert_6f0411f8;
    }
    else {
      pcVar4 = s_Intermediate_6f0411e8;
      if (param_1 != (undefined4 *)0x1) {
        pcVar4 = s_Beginner_6f0411dc;
      }
    }
    wsprintfA((LPSTR)(puVar1 + 2),s_SLCID=<%d>ULCID=<%d>ILCID=<%d>UT_6f041190,local_18,local_1c,
              local_14,local_d0.Bias,pcVar4,puVar5,uVar2);
    if (local_c != (int *)0x0) {
      (**(code **)(*local_c + 8))(local_c);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    uVar2 = 1;
  }
  return uVar2;
}


#mozda srednji nivo igranja

#Expert

#na lokaciji 6f038340

undefined4 __thiscall FUN_6f03824d(void *this,undefined4 *param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  undefined *puVar5;
  _TIME_ZONE_INFORMATION local_d0;
  wchar_t *local_24;
  wchar_t *local_20;
  LCID local_1c;
  LCID local_18;
  undefined4 local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puVar1 = param_1;
  if (param_1 == (undefined4 *)0x0) {
    uVar2 = 0;
  }
  else {
    local_18 = GetSystemDefaultLCID();
    local_1c = GetUserDefaultLCID();
    local_14 = (**(code **)(**(int **)((int)this + 0x18) + 100))(*(int **)((int)this + 0x18));
    GetTimeZoneInformation(&local_d0);
    param_1 = (undefined4 *)0x0;
    local_24 = L"Lobby";
    local_20 = L"SkillLevel";
    (**(code **)(**(int **)((int)this + 0x38) + 0x5c))
              (*(int **)((int)this + 0x38),&local_24,2,&param_1);
    local_8 = (int *)0x0;
    local_10 = 0;
    iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&local_8);
    if (-1 < iVar3) {
      (**(code **)(*local_8 + 0x60))(local_8,L"LocalChatStatus",&local_10);
    }
    local_c = (int *)0x0;
    *(bool *)((int)this + 0x5c) = local_10 != 0;
    *puVar1 = 0x64756465;
    puVar1[1] = 1;
    (**(code **)(**(int **)((int)this + 0x18) + 0x74))
              (*(int **)((int)this + 0x18),&DAT_6f014d28,&DAT_6f0150f8,&local_c);
    if (local_c == (int *)0x0) {
      uVar2 = 0;
    }
    else {
      uVar2 = (**(code **)(*local_c + 0x18))(local_c,0xc,1);
    }
    puVar5 = &DAT_6f041204;
    if (*(char *)((int)this + 0x5c) == '\0') {
      puVar5 = &DAT_6f041200;
    }
    if (param_1 == (undefined4 *)0x2) {
      pcVar4 = s_Expert_6f0411f8;
    }
    else {
      pcVar4 = s_Intermediate_6f0411e8;
      if (param_1 != (undefined4 *)0x1) {
        pcVar4 = s_Beginner_6f0411dc;
      }
    }
    wsprintfA((LPSTR)(puVar1 + 2),s_SLCID=<%d>ULCID=<%d>ILCID=<%d>UT_6f041190,local_18,local_1c,
              local_14,local_d0.Bias,pcVar4,puVar5,uVar2);
    if (local_c != (int *)0x0) {
      (**(code **)(*local_c + 8))(local_c);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    uVar2 = 1;
  }
  return uVar2;
}


#na lokaciji 6f038359


undefined4 __thiscall FUN_6f03824d(void *this,undefined4 *param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  undefined *puVar5;
  _TIME_ZONE_INFORMATION local_d0;
  wchar_t *local_24;
  wchar_t *local_20;
  LCID local_1c;
  LCID local_18;
  undefined4 local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puVar1 = param_1;
  if (param_1 == (undefined4 *)0x0) {
    uVar2 = 0;
  }
  else {
    local_18 = GetSystemDefaultLCID();
    local_1c = GetUserDefaultLCID();
    local_14 = (**(code **)(**(int **)((int)this + 0x18) + 100))(*(int **)((int)this + 0x18));
    GetTimeZoneInformation(&local_d0);
    param_1 = (undefined4 *)0x0;
    local_24 = L"Lobby";
    local_20 = L"SkillLevel";
    (**(code **)(**(int **)((int)this + 0x38) + 0x5c))
              (*(int **)((int)this + 0x38),&local_24,2,&param_1);
    local_8 = (int *)0x0;
    local_10 = 0;
    iVar3 = (**(code **)(**(int **)((int)this + 0x20) + 0x10))
                      (*(int **)((int)this + 0x20),0xffffffff,0,&local_8);
    if (-1 < iVar3) {
      (**(code **)(*local_8 + 0x60))(local_8,L"LocalChatStatus",&local_10);
    }
    local_c = (int *)0x0;
    *(bool *)((int)this + 0x5c) = local_10 != 0;
    *puVar1 = 0x64756465;
    puVar1[1] = 1;
    (**(code **)(**(int **)((int)this + 0x18) + 0x74))
              (*(int **)((int)this + 0x18),&DAT_6f014d28,&DAT_6f0150f8,&local_c);
    if (local_c == (int *)0x0) {
      uVar2 = 0;
    }
    else {
      uVar2 = (**(code **)(*local_c + 0x18))(local_c,0xc,1);
    }
    puVar5 = &DAT_6f041204;
    if (*(char *)((int)this + 0x5c) == '\0') {
      puVar5 = &DAT_6f041200;
    }
    if (param_1 == (undefined4 *)0x2) {
      pcVar4 = s_Expert_6f0411f8;
    }
    else {
      pcVar4 = s_Intermediate_6f0411e8;
      if (param_1 != (undefined4 *)0x1) {
        pcVar4 = s_Beginner_6f0411dc;
      }
    }
    wsprintfA((LPSTR)(puVar1 + 2),s_SLCID=<%d>ULCID=<%d>ILCID=<%d>UT_6f041190,local_18,local_1c,
              local_14,local_d0.Bias,pcVar4,puVar5,uVar2);
    if (local_c != (int *)0x0) {
      (**(code **)(*local_c + 8))(local_c);
    }
    if (local_8 != (int *)0x0) {
      (**(code **)(*local_8 + 8))(local_8);
    }
    uVar2 = 1;
  }
  return uVar2;
}


#ovaj je nekim povodom na 2 lokacije smesten ili nekako, nezz
#sto se tice ovog nivoa, znaci tata-mata igre, sef igre jbt

#localhost


undefined4
FUN_6f03850e(int param_1,undefined4 param_2,int *param_3,int param_4,int **param_5,uint *param_6 ,
            undefined4 param_7)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int **lpString2;
  int *piStack_820;
  int *piStack_81c;
  int *local_804 [512];
  
  piVar2 = param_3;
  iVar1 = param_1;
  if (((param_3 == *(int **)(param_1 + 0x40)) && (param_4 == 0x726f7574)) &&
     (param_5 == (int **)0x0)) {
    piStack_81c = (int *)0x6f038543;
    FUN_6f03884c((void *)(param_1 + -0x40),param_6);
  }
  if (piVar2 == (int *)0x30001) {
    piStack_81c = (int *)0x6f038595;
    lstrcpyW((LPWSTR)(iVar1 + 0x68),u_localhost_6f041224);
    param_3 = (int *)0x0;
    *(LPSTR)(iVar1 + 0x58) = '\0';
    piStack_820 = *(int **)(iVar1 + -0x1c);
    piStack_81c = (int *)0xffffffff;
    iVar3 = (**(code **)(*piStack_820 + 0x10))();
    if (-1 < iVar3) {
      param_1 = 0x400;
      iVar3 = (**(code **)(*param_3 + 0x58))(param_3,L"InternalName",local_804,&param_1);
      if (-1 < iVar3) {
        lpString2 = local_804;
        if (local_804 != (int **)0x0) {
          iVar3 = lstrlenW((LPCWSTR)local_804);
          param_4 = iVar3 * 2 + 2;
          FUN_6f03c940();
          piStack_820 = (int *)((uint)piStack_820 & 0xffffff00);
          param_5 = &piStack_820;
          WideCharToMultiByte(0,0,(LPCWSTR)local_804,-1,(LPSTR)&piStack_820,param_4,(LPCSTR)0x0,
                              (LPBOOL)0x0);
          lpString2 = param_5;
        }
        lstrcpynA((LPSTR)(iVar1 + 0x58),(LPCSTR)lpString2,0x10);
        param_1 = 0x400;
        iVar3 = (**(code **)(*param_3 + 0x58))(param_3,L"Server",local_804,&param_1);
        if (-1 < iVar3) {
          lstrcpynW((LPWSTR)(iVar1 + 0x68),(LPCWSTR)local_804,0x400);
          FUN_6f038dab(iVar1 + -0x40);
        }
      }
    }
    if (param_3 != (int *)0x0) {
      (**(code **)(*param_3 + 8))(param_3);
    }
  }
  else if ((piVar2 == (int *)0xb0004) && (*(int *)(iVar1 + 0x28) == 0)) {
    *(undefined4 *)(iVar1 + 0x28) = 1;
    piStack_81c = *(int **)(iVar1 + 0x868);
    piStack_820 = (int *)0x6f038581;
    (**(code **)(*piStack_81c + 0xc))();
  }
  return 0;
}


#nije mi jasno kako je sta ovaj kod.
#samo znam da se valjda neke funkcije odvijaju na lokalnoj mrezi(localhost)

#Number%1!d!

#na lokaciji 6f03990d


/* WARNING: Removing unreachable block (ram,0x6f03972e) */
/* WARNING: Removing unreachable block (ram,0x6f039767) */
/* WARNING: Removing unreachable block (ram,0x6f039745) */
/* WARNING: Removing unreachable block (ram,0x6f039765) */
/* WARNING: Removing unreachable block (ram,0x6f039bc1) */
/* WARNING: Removing unreachable block (ram,0x6f0399d9) */

undefined4
FUN_6f0394c5(int param_1,undefined4 param_2,uint param_3,undefined4 param_4,undefined4 param_5,
            HWND param_6,size_t param_7)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  BOOL BVar4;
  undefined local_2060 [2048];
  undefined2 local_1860;
  WCHAR local_1060 [1024];
  WCHAR local_860 [1024];
  DWORD local_60;
  ULONG local_5c;
  HWND local_58;
  LPCSTR local_54;
  int *local_50;
  LPCSTR local_4c;
  WCHAR *local_48;
  int local_44;
  HINSTANCE pHStackY_40;
  HWND pHStackY_3c;
  undefined *puVar5;
  uint uVar6;
  
  FUN_6f03c940();
  if (param_3 < 0x80004) {
    if (param_3 == 0x80003) {
      FUN_6f03a74b();
      return 0;
    }
    if (param_3 < 0x20020) {
      if (param_3 == 0x2001f) {
        if (param_6 == (HWND)&DAT_00000006) {
          (**(code **)(**(int **)(param_1 + -0x20) + 0x1c))();
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039ab8;
        }
        if (param_6 == (HWND)0x7) {
          local_50 = (int *)(param_1 + 0x3cf4);
          local_60 = 0x3c;
          local_5c = 0x500;
          local_58 = (HWND)0x0;
          local_54 = (LPCSTR)0x0;
          local_4c = (LPCSTR)0x0;
          local_48 = (WCHAR *)0x0;
          local_44 = 1;
          ShellExecuteExA((SHELLEXECUTEINFOA *)&local_60);
        }
        piVar2 = *(int **)(param_1 + -0x20);
      }
      else {
        if ((param_3 == 0x20001) || (param_3 == 0x2000b)) {
          iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x20))();
          if (iVar3 != 0) {
            if (DAT_6f041bf0 != '\0') {
              return 0;
            }
            local_48 = *(WCHAR **)(param_1 + -0x24);
            pHStackY_3c = (HWND)0x0;
            pHStackY_40 = (HINSTANCE)0x528;
            local_44 = 0;
            local_4c = (LPCSTR)0x6f039618;
            (**(code **)(*(int *)local_48 + 0x80))();
            DAT_6f041bf0 = 1;
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
LAB_6f039c92:
          (**(code **)(iVar3 + 0x1c))();
          return 0;
        }
        if (param_3 == 0x2000c) {
          iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x20))();
          if (1 < iVar3) {
            pHStackY_3c = (HWND)((iVar3 != 2) + 0x52b);
            local_48 = *(WCHAR **)(param_1 + -0x24);
            pHStackY_40 = (HINSTANCE)((iVar3 != 2) + 0x529);
            local_44 = 0;
            local_4c = (LPCSTR)0x6f0395b4;
            (**(code **)(*(int *)local_48 + 0x80))();
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039c92;
        }
        if (param_3 != 0x20015) {
          if (param_3 != 0x20016) {
            return 0;
          }
          if (param_6 != (HWND)&DAT_00000006) {
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039ab8;
        }
        DAT_6f041bf0 = '\0';
        if (param_6 != (HWND)&DAT_00000006) {
          DAT_6f041bf0 = 0;
          return 0;
        }
        piVar2 = *(int **)(param_1 + -0x20);
      }
      iVar3 = *piVar2;
    }
    else {
      if (param_3 == 0x30001) {
        FUN_6f03a426();
        return 0;
      }
      if (param_3 == 0x30003) {
        param_6 = (HWND)0x0;
        do {
          FUN_6f01bbf9(u_Number%1!d!_6f041258,local_860,0x400);
          (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
          param_6 = (HWND)((int)&param_6->unused + 1);
        } while ((int)param_6 < 0xd);
        (**(code **)(*(int *)(param_1 + 4) + 0x10))();
        FUN_6f01bbf9(u_Number%1!d!_6f041258,local_860,0x400);
        puVar5 = &stack0xffffffec;
        uVar6 = 0;
        iVar3 = (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
        if (iVar3 < 0) {
          GetSystemTime((LPSYSTEMTIME)&stack0xffffffdc);
          *(uint *)(param_1 + 0x3cf0) =
               ((((uint)puVar5 & 0xffff) << 8 | (uint)puVar5 >> 0x10) << 8 | uVar6 >> 0x10) ^
               0x5f3da215;
          pHStackY_3c = (HWND)0x6f0399ad;
          (**(code **)(**(int **)(param_1 + -4) + 0x1c))();
        }
        pHStackY_3c = (HWND)0x6f0399ca;
        (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
        iVar3 = **(int **)(param_1 + -0x20);
        goto LAB_6f039c92;
      }
      if (param_3 == 0x3000b) {
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          return 0;
        }
        iVar3 = FUN_6f01bbf9(local_1060,local_860,0x400);
        if (iVar3 == 0) {
          return 0;
        }
        piVar2 = *(int **)(param_1 + -0x20);
        iVar3 = *piVar2;
        lstrlenW(local_860);
        pHStackY_40 = (HINSTANCE)0x6f0398d0;
        pHStackY_3c = (HWND)piVar2;
        (**(code **)(iVar3 + 0x20))();
        return 0;
      }
      if (param_3 != 0x30032) {
        if (param_3 != 0x30033) {
          return 0;
        }
        iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x10))();
        if (iVar3 < 0) {
          return 0;
        }
        local_1860 = 0;
        (**(code **)(iRam00000000 + 0x60))();
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          return 0;
        }
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          local_860[0] = L'\0';
        }
        pHStackY_3c = param_6;
        pHStackY_40 = (HINSTANCE)(param_1 + 4);
        local_44 = 0x6f0397c9;
        iVar3 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))();
        if (iVar3 < 0) {
          return 0;
        }
        pHStackY_3c = (HWND)0x6f0397fa;
        iVar3 = FUN_6f01bbf9(local_2060,local_1060,0x400);
        if (iVar3 == 0) {
          return 0;
        }
        local_50 = *(int **)(param_1 + -0x24);
        pHStackY_3c = (HWND)0x0;
        pHStackY_40 = (HINSTANCE)0x514;
        local_48 = local_1060;
        local_44 = 0;
        local_4c = (LPCSTR)0x0;
        local_54 = (LPCSTR)0x6f039827;
        (**(code **)(*local_50 + 0x80))();
        return 0;
      }
      if (((uint)param_6 & 1) == 0) {
        return 0;
      }
      if (*(char *)(param_1 + 0x3825) == '\0') {
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x20);
    }
  }
  else {
    if (0xa0005 < param_3) {
      if (param_3 != 0xb0001) {
        if (param_3 == 0xb0002) {
          (**(code **)(*(int *)(param_1 + 4) + 0x10))();
          return 0;
        }
        if (param_3 == 0xb0003) {
          *(undefined *)(param_1 + 0x3825) = 0;
          (**(code **)(*(int *)(param_1 + 4) + 0x10))();
        }
        else {
          if (param_3 == 0xb0006) {
            *(undefined4 *)(param_1 + 0x3828) = 1;
            memcpy(*(void **)(param_1 + 0x3c7c),param_6,param_7);
            cVar1 = *(char *)(param_1 + 0x3825);
          }
          else {
            if (param_3 != 0xb0007) {
              return 0;
            }
            *(undefined4 *)(param_1 + 0x3828) = 2;
            cVar1 = *(char *)(param_1 + 0x3825);
          }
          if (cVar1 != '\0') {
            return 0;
          }
        }
        FUN_6f039c9f();
        return 0;
      }
      *(undefined *)(param_1 + 0x3825) = 1;
      *(undefined4 *)(param_1 + 0x3828) = 0;
      (**(code **)(*(int *)(param_1 + 4) + 0x10))();
      iVar3 = **(int **)(param_1 + -0x20);
      goto LAB_6f039c92;
    }
    if (param_3 == 0xa0005) {
      *(undefined4 *)(param_1 + 0x3c84) = 0;
      do {
        (**(code **)(**(int **)(param_1 + -0x1c) + 0x2c))();
        *(int *)(param_1 + 0x3c84) = *(int *)(param_1 + 0x3c84) + 1;
      } while (*(int *)(param_1 + 0x3c84) < 4);
      if (*(short *)(param_1 + 0x824) == 0) {
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x1c);
      (**(code **)(iVar3 + 0xc))();
      iVar3 = (**(code **)(iVar3 + 0x10))();
      if (iVar3 < 0) {
        return 0;
      }
      iVar3 = (**(code **)(iRam00000000 + 0x58))();
      if (iVar3 < 0) {
        return 0;
      }
      iVar3 = FUN_6f01bbf9((LPCVOID)(param_1 + 0x824),local_860,0x400);
      if (iVar3 == 0) {
        return 0;
      }
      piVar2 = *(int **)(param_1 + -0x20);
      iVar3 = *piVar2;
      lstrlenW(local_860);
      pHStackY_40 = (HINSTANCE)0x6f039bb6;
      pHStackY_3c = (HWND)piVar2;
      (**(code **)(iVar3 + 0x20))();
      return 0;
    }
    if (param_3 == 0x80004) {
      FUN_6f03a622(param_1 + -0x38);
      return 0;
    }
    if (param_3 == 0x80005) {
      FUN_6f03a84e(param_1 + -0x38);
      iVar3 = **(int **)(param_1 + -0x20);
    }
    else {
      if (param_3 != 0x90001) {
        if (param_3 != 0x90002) {
          if (param_3 != 0x90003) {
            return 0;
          }
          (**(code **)(**(int **)(param_1 + -0x24) + 0x7c))();
          return 0;
        }
        BVar4 = IsWindow(param_6);
        if (BVar4 != 0) {
          DestroyWindow(param_6);
        }
        if (param_7 == 0) {
          return 0;
        }
        FUN_6f03b71c(param_7);
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x20);
    }
  }
LAB_6f039ab8:
  (**(code **)(iVar3 + 0x1c))();
  return 0;
}


#na lokaciji 6f03994f


/* WARNING: Removing unreachable block (ram,0x6f03972e) */
/* WARNING: Removing unreachable block (ram,0x6f039767) */
/* WARNING: Removing unreachable block (ram,0x6f039745) */
/* WARNING: Removing unreachable block (ram,0x6f039765) */
/* WARNING: Removing unreachable block (ram,0x6f039bc1) */
/* WARNING: Removing unreachable block (ram,0x6f0399d9) */

undefined4
FUN_6f0394c5(int param_1,undefined4 param_2,uint param_3,undefined4 param_4,undefined4 param_5,
            HWND param_6,size_t param_7)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  BOOL BVar4;
  undefined local_2060 [2048];
  undefined2 local_1860;
  WCHAR local_1060 [1024];
  WCHAR local_860 [1024];
  DWORD local_60;
  ULONG local_5c;
  HWND local_58;
  LPCSTR local_54;
  int *local_50;
  LPCSTR local_4c;
  WCHAR *local_48;
  int local_44;
  HINSTANCE pHStackY_40;
  HWND pHStackY_3c;
  undefined *puVar5;
  uint uVar6;
  
  FUN_6f03c940();
  if (param_3 < 0x80004) {
    if (param_3 == 0x80003) {
      FUN_6f03a74b();
      return 0;
    }
    if (param_3 < 0x20020) {
      if (param_3 == 0x2001f) {
        if (param_6 == (HWND)&DAT_00000006) {
          (**(code **)(**(int **)(param_1 + -0x20) + 0x1c))();
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039ab8;
        }
        if (param_6 == (HWND)0x7) {
          local_50 = (int *)(param_1 + 0x3cf4);
          local_60 = 0x3c;
          local_5c = 0x500;
          local_58 = (HWND)0x0;
          local_54 = (LPCSTR)0x0;
          local_4c = (LPCSTR)0x0;
          local_48 = (WCHAR *)0x0;
          local_44 = 1;
          ShellExecuteExA((SHELLEXECUTEINFOA *)&local_60);
        }
        piVar2 = *(int **)(param_1 + -0x20);
      }
      else {
        if ((param_3 == 0x20001) || (param_3 == 0x2000b)) {
          iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x20))();
          if (iVar3 != 0) {
            if (DAT_6f041bf0 != '\0') {
              return 0;
            }
            local_48 = *(WCHAR **)(param_1 + -0x24);
            pHStackY_3c = (HWND)0x0;
            pHStackY_40 = (HINSTANCE)0x528;
            local_44 = 0;
            local_4c = (LPCSTR)0x6f039618;
            (**(code **)(*(int *)local_48 + 0x80))();
            DAT_6f041bf0 = 1;
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
LAB_6f039c92:
          (**(code **)(iVar3 + 0x1c))();
          return 0;
        }
        if (param_3 == 0x2000c) {
          iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x20))();
          if (1 < iVar3) {
            pHStackY_3c = (HWND)((iVar3 != 2) + 0x52b);
            local_48 = *(WCHAR **)(param_1 + -0x24);
            pHStackY_40 = (HINSTANCE)((iVar3 != 2) + 0x529);
            local_44 = 0;
            local_4c = (LPCSTR)0x6f0395b4;
            (**(code **)(*(int *)local_48 + 0x80))();
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039c92;
        }
        if (param_3 != 0x20015) {
          if (param_3 != 0x20016) {
            return 0;
          }
          if (param_6 != (HWND)&DAT_00000006) {
            return 0;
          }
          iVar3 = **(int **)(param_1 + -0x20);
          goto LAB_6f039ab8;
        }
        DAT_6f041bf0 = '\0';
        if (param_6 != (HWND)&DAT_00000006) {
          DAT_6f041bf0 = 0;
          return 0;
        }
        piVar2 = *(int **)(param_1 + -0x20);
      }
      iVar3 = *piVar2;
    }
    else {
      if (param_3 == 0x30001) {
        FUN_6f03a426();
        return 0;
      }
      if (param_3 == 0x30003) {
        param_6 = (HWND)0x0;
        do {
          FUN_6f01bbf9(u_Number%1!d!_6f041258,local_860,0x400);
          (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
          param_6 = (HWND)((int)&param_6->unused + 1);
        } while ((int)param_6 < 0xd);
        (**(code **)(*(int *)(param_1 + 4) + 0x10))();
        FUN_6f01bbf9(u_Number%1!d!_6f041258,local_860,0x400);
        puVar5 = &stack0xffffffec;
        uVar6 = 0;
        iVar3 = (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
        if (iVar3 < 0) {
          GetSystemTime((LPSYSTEMTIME)&stack0xffffffdc);
          *(uint *)(param_1 + 0x3cf0) =
               ((((uint)puVar5 & 0xffff) << 8 | (uint)puVar5 >> 0x10) << 8 | uVar6 >> 0x10) ^
               0x5f3da215;
          pHStackY_3c = (HWND)0x6f0399ad;
          (**(code **)(**(int **)(param_1 + -4) + 0x1c))();
        }
        pHStackY_3c = (HWND)0x6f0399ca;
        (**(code **)(**(int **)(param_1 + -4) + 0x5c))();
        iVar3 = **(int **)(param_1 + -0x20);
        goto LAB_6f039c92;
      }
      if (param_3 == 0x3000b) {
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          return 0;
        }
        iVar3 = FUN_6f01bbf9(local_1060,local_860,0x400);
        if (iVar3 == 0) {
          return 0;
        }
        piVar2 = *(int **)(param_1 + -0x20);
        iVar3 = *piVar2;
        lstrlenW(local_860);
        pHStackY_40 = (HINSTANCE)0x6f0398d0;
        pHStackY_3c = (HWND)piVar2;
        (**(code **)(iVar3 + 0x20))();
        return 0;
      }
      if (param_3 != 0x30032) {
        if (param_3 != 0x30033) {
          return 0;
        }
        iVar3 = (**(code **)(**(int **)(param_1 + -0x1c) + 0x10))();
        if (iVar3 < 0) {
          return 0;
        }
        local_1860 = 0;
        (**(code **)(iRam00000000 + 0x60))();
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          return 0;
        }
        iVar3 = (**(code **)(**(int **)(param_1 + -0x18) + 0x28))();
        if (iVar3 == 0) {
          local_860[0] = L'\0';
        }
        pHStackY_3c = param_6;
        pHStackY_40 = (HINSTANCE)(param_1 + 4);
        local_44 = 0x6f0397c9;
        iVar3 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))();
        if (iVar3 < 0) {
          return 0;
        }
        pHStackY_3c = (HWND)0x6f0397fa;
        iVar3 = FUN_6f01bbf9(local_2060,local_1060,0x400);
        if (iVar3 == 0) {
          return 0;
        }
        local_50 = *(int **)(param_1 + -0x24);
        pHStackY_3c = (HWND)0x0;
        pHStackY_40 = (HINSTANCE)0x514;
        local_48 = local_1060;
        local_44 = 0;
        local_4c = (LPCSTR)0x0;
        local_54 = (LPCSTR)0x6f039827;
        (**(code **)(*local_50 + 0x80))();
        return 0;
      }
      if (((uint)param_6 & 1) == 0) {
        return 0;
      }
      if (*(char *)(param_1 + 0x3825) == '\0') {
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x20);
    }
  }
  else {
    if (0xa0005 < param_3) {
      if (param_3 != 0xb0001) {
        if (param_3 == 0xb0002) {
          (**(code **)(*(int *)(param_1 + 4) + 0x10))();
          return 0;
        }
        if (param_3 == 0xb0003) {
          *(undefined *)(param_1 + 0x3825) = 0;
          (**(code **)(*(int *)(param_1 + 4) + 0x10))();
        }
        else {
          if (param_3 == 0xb0006) {
            *(undefined4 *)(param_1 + 0x3828) = 1;
            memcpy(*(void **)(param_1 + 0x3c7c),param_6,param_7);
            cVar1 = *(char *)(param_1 + 0x3825);
          }
          else {
            if (param_3 != 0xb0007) {
              return 0;
            }
            *(undefined4 *)(param_1 + 0x3828) = 2;
            cVar1 = *(char *)(param_1 + 0x3825);
          }
          if (cVar1 != '\0') {
            return 0;
          }
        }
        FUN_6f039c9f();
        return 0;
      }
      *(undefined *)(param_1 + 0x3825) = 1;
      *(undefined4 *)(param_1 + 0x3828) = 0;
      (**(code **)(*(int *)(param_1 + 4) + 0x10))();
      iVar3 = **(int **)(param_1 + -0x20);
      goto LAB_6f039c92;
    }
    if (param_3 == 0xa0005) {
      *(undefined4 *)(param_1 + 0x3c84) = 0;
      do {
        (**(code **)(**(int **)(param_1 + -0x1c) + 0x2c))();
        *(int *)(param_1 + 0x3c84) = *(int *)(param_1 + 0x3c84) + 1;
      } while (*(int *)(param_1 + 0x3c84) < 4);
      if (*(short *)(param_1 + 0x824) == 0) {
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x1c);
      (**(code **)(iVar3 + 0xc))();
      iVar3 = (**(code **)(iVar3 + 0x10))();
      if (iVar3 < 0) {
        return 0;
      }
      iVar3 = (**(code **)(iRam00000000 + 0x58))();
      if (iVar3 < 0) {
        return 0;
      }
      iVar3 = FUN_6f01bbf9((LPCVOID)(param_1 + 0x824),local_860,0x400);
      if (iVar3 == 0) {
        return 0;
      }
      piVar2 = *(int **)(param_1 + -0x20);
      iVar3 = *piVar2;
      lstrlenW(local_860);
      pHStackY_40 = (HINSTANCE)0x6f039bb6;
      pHStackY_3c = (HWND)piVar2;
      (**(code **)(iVar3 + 0x20))();
      return 0;
    }
    if (param_3 == 0x80004) {
      FUN_6f03a622(param_1 + -0x38);
      return 0;
    }
    if (param_3 == 0x80005) {
      FUN_6f03a84e(param_1 + -0x38);
      iVar3 = **(int **)(param_1 + -0x20);
    }
    else {
      if (param_3 != 0x90001) {
        if (param_3 != 0x90002) {
          if (param_3 != 0x90003) {
            return 0;
          }
          (**(code **)(**(int **)(param_1 + -0x24) + 0x7c))();
          return 0;
        }
        BVar4 = IsWindow(param_6);
        if (BVar4 != 0) {
          DestroyWindow(param_6);
        }
        if (param_7 == 0) {
          return 0;
        }
        FUN_6f03b71c(param_7);
        return 0;
      }
      iVar3 = **(int **)(param_1 + -0x20);
    }
  }
LAB_6f039ab8:
  (**(code **)(iVar3 + 0x1c))();
  return 0;
}


#na lokaciji 6f03b2c6


undefined4 FUN_6f03b284(int param_1,int param_2)

{
  int *piVar1;
  undefined4 uVar2;
  WCHAR local_810 [1024];
  wchar_t *local_10;
  wchar_t *local_c;
  WCHAR *local_8;
  
  if ((param_2 < 0) || (0xc < param_2)) {
    uVar2 = 0x80070057;
  }
  else {
    local_8 = local_810;
    piVar1 = (int *)(param_1 + 0x3c84 + param_2 * 8);
    *piVar1 = *piVar1 + 1;
    piVar1 = (int *)(param_1 + 0x3c88 + param_2 * 8);
    *piVar1 = *piVar1 + 1;
    local_10 = L"Lobby";
    local_c = L"Numbers";
    FUN_6f01bbf9(u_Number%1!d!_6f041258,local_810,0x400);
    (**(code **)(**(int **)(param_1 + -8) + 0x1c))
              (*(int **)(param_1 + -8),&local_10,3,*(undefined4 *)(param_1 + 0x3c84 + param_2 * 8 ));
    uVar2 = 0;
  }
  return uVar2;
}


#na lokaciji 6f03b348


undefined4 FUN_6f03b304(int param_1,int param_2)

{
  undefined4 uVar1;
  WCHAR local_810 [1024];
  wchar_t *local_10;
  wchar_t *local_c;
  WCHAR *local_8;
  
  if ((param_2 < 0) || (0xc < param_2)) {
    uVar1 = 0x80070057;
  }
  else {
    *(undefined4 *)(param_1 + 0x3c84 + param_2 * 8) = 0;
    *(undefined4 *)(param_1 + 0x3c88 + param_2 * 8) = 0;
    local_8 = local_810;
    local_10 = L"Lobby";
    local_c = L"Numbers";
    FUN_6f01bbf9(u_Number%1!d!_6f041258,local_810,0x400);
    (**(code **)(**(int **)(param_1 + -8) + 0x1c))
              (*(int **)(param_1 + -8),&local_10,3,*(undefined4 *)(param_1 + 0x3c84 + param_2 * 8 ));
    uVar1 = 0;
  }
  return uVar1;
}


#imam dosta mogucnosti sta li bi ovo trebalo biti
#brojac ukupnih bodova u lobby?
#brojac igracevih brojeva koje dobije/izgubi u rundama?
#brojac koji sabira/oduzima/duplira/odvaja bodove po igracu ili mecu?

#http://www.microsoft.com/isapi/redir.dll?PRD=Zone&SBP=IGames&PVER=WinUpdate


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#verovatno nacin kako se broje ili cuvaju ti bodovi komunicirajuci sa web linkom?

#http://www.micorsoft.com/


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#sada krecu verovatno komunikacije sa serverom i slicnim potrebama.

#http://www.zone.com/

#na lokaciji 6f039e36


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e88


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#jedan od linkova koje microsoft drzi vezano za ZONE

#http://zone.msn.com/

#na lokaciji 6f039e78


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e70 (nesto saopstava ghidra da je ovaj READ<<OFFCUT>>


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e5c


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e25


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e33


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#na lokaciji 6f039e59


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}



#na lokaciji 6f039e99


/* WARNING: Removing unreachable block (ram,0x6f039d18) */
/* WARNING: Removing unreachable block (ram,0x6f039fbb) */
/* WARNING: Removing unreachable block (ram,0x6f039fd5) */
/* WARNING: Removing unreachable block (ram,0x6f039fde) */
/* WARNING: Removing unreachable block (ram,0x6f039f22) */
/* WARNING: Removing unreachable block (ram,0x6f03a023) */
/* WARNING: Removing unreachable block (ram,0x6f039df0) */

void FUN_6f039c9f(void)

{
  LPSTR lpString1;
  short sVar1;
  int iVar2;
  short *psVar3;
  int extraout_ECX;
  char cVar4;
  undefined4 *puVar5;
  WCHAR local_293c [1024];
  WCHAR local_213c [1024];
  short local_193c;
  undefined4 local_193a [511];
  short local_113c;
  undefined4 local_113a [511];
  short local_93c;
  undefined4 local_93a [511];
  DWORD local_13c;
  WCHAR aWStackY_80 [2];
  int *piStackY_7c;
  WCHAR aWStackY_78 [2];
  WCHAR *pWStackY_74;
  WCHAR aWStackY_70 [2];
  int *piStackY_6c;
  WCHAR aWStackY_68 [2];
  WCHAR *pWStackY_64;
  int *piStack_3c;
  char *local_28;
  char *local_24;
  wchar_t *local_20;
  wchar_t *local_1c;
  LPCSTR local_18;
  undefined4 local_14;
  char *pcVar6;
  char **ppcVar7;
  
  FUN_6f03c940();
  local_14 = 0;
  local_18 = (LPCSTR)0x0;
  local_1c = (wchar_t *)0x0;
  local_20 = (wchar_t *)0xffffffff;
  local_24 = (char *)0x20029;
  local_28 = (char *)0x1;
  (**(code **)(**(int **)(extraout_ECX + 0x18) + 0x1c))();
  iVar2 = *(int *)(extraout_ECX + 0x3860);
  if (iVar2 == 0) {
    piStack_3c = (int *)0x2001f;
    (**(code **)(**(int **)(extraout_ECX + 0x14) + 0x80))();
  }
  else if (iVar2 == 1) {
    lpString1 = (LPSTR)(extraout_ECX + 0x3d2c);
    local_14 = 0x530;
    *lpString1 = '\0';
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 1) {
      local_14 = 0x531;
      local_28 = s_http://zone.msn.com/_6f0412f8;
      local_24 = s_http://www.zone.com/_6f0412e0;
      local_20 = (wchar_t *)s_http://www.microsoft.com/_6f0412c4;
      local_1c = (wchar_t *)0x0;
      piStack_3c = (int *)0x6f039e4d;
      lstrcpynA(lpString1,(LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c),0x400);
      ppcVar7 = &local_28;
      pcVar6 = s_http://zone.msn.com/_6f0412f8;
      do {
        iVar2 = 0;
        cVar4 = *pcVar6;
        while ((cVar4 != '\0' && (lpString1[iVar2] == cVar4))) {
          iVar2 = iVar2 + 1;
          cVar4 = pcVar6[iVar2];
        }
        if (pcVar6[iVar2] == '\0') break;
        ppcVar7 = ppcVar7 + 1;
        pcVar6 = *ppcVar7;
      } while (pcVar6 != (char *)0x0);
      if (*ppcVar7 == (char *)0x0) {
        piStack_3c = (int *)0x6f039ea3;
        lstrcpynA(lpString1,s_http://zone.msn.com/_6f0412f8,0x400);
      }
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 3) {
      local_93c = (short)lpString_6f041bb8;
      local_193c = (short)lpString_6f041bb8;
      puVar5 = local_93a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      puVar5 = local_193a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      (**(code **)(**(int **)(extraout_ECX + 0x14) + 100))();
      local_20 = L"Version";
      local_1c = L"VersionStr";
      piStack_3c = (int *)0xffffffff;
      (**(code **)(**(int **)(extraout_ECX + 0x1c) + 0x10))();
      iVar2 = 0;
      sVar1 = local_93c;
      while (sVar1 != 0) {
        if (*(short *)((int)local_93a + iVar2 * 2 + -2) == 0x2e) {
          iVar2 = iVar2 + 1;
          for (psVar3 = (short *)((int)local_93a + iVar2 * 2 + -2); *psVar3 != 0;
              psVar3 = psVar3 + 1) {
            if (*psVar3 == 0x2e) {
              *psVar3 = 0;
              iVar2 = iVar2 + -1;
              psVar3 = psVar3 + -1;
            }
            iVar2 = iVar2 + 1;
          }
        }
        iVar2 = iVar2 + 1;
        sVar1 = *(short *)((int)local_93a + iVar2 * 2 + -2);
      }
      local_13c = 0x114;
      GetVersionExW((LPOSVERSIONINFOW)&local_13c);
      puVar5 = local_113a;
      for (iVar2 = 0x1ff; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar5 = 0;
        puVar5 = puVar5 + 1;
      }
      *(undefined2 *)puVar5 = 0;
      local_18 = (LPCSTR)0x400;
      local_113c = (short)lpString_6f041bb8;
      local_193c = 0;
      local_14 = 0x532;
      piStack_3c = (int *)0x6f03a019;
      wsprintfA(lpString1,s_http://www.microsoft.com/isapi/r_6f041270);
    }
    if (*(int *)(*(int *)(extraout_ECX + 0x3cb4) + 0x48) == 4) {
      local_14 = 0x533;
    }
    piStack_3c = *(int **)(extraout_ECX + 0x20);
    iVar2 = (**(code **)(*piStack_3c + 0x28))();
    if (iVar2 != 0) {
      local_18 = (LPCSTR)(*(int *)(extraout_ECX + 0x3cb4) + 0x4c);
      if (local_18 != (LPCSTR)0x0) {
        iVar2 = lstrlenA(local_18);
        FUN_6f03c940();
        piStack_3c = (int *)((uint)piStack_3c & 0xffff0000);
        MultiByteToWideChar(0,0,local_18,-1,(LPWSTR)&piStack_3c,iVar2 + 1);
      }
      iVar2 = FUN_6f01bbf9(local_213c,local_293c,0x400);
      if (iVar2 != 0) {
        piStackY_6c = *(int **)(extraout_ECX + 0x14);
        pWStackY_64 = local_293c;
        aWStackY_68[0] = L'\0';
        aWStackY_68[1] = L'\0';
        aWStackY_70[0] = L'ꃻ';
        aWStackY_70[1] = L'漃';
        (**(code **)(*piStackY_6c + 0x80))();
      }
    }
  }
  else if (iVar2 == 2) {
    piStack_3c = *(int **)(extraout_ECX + 0x1c);
    iVar2 = (**(code **)(*piStack_3c + 0x10))();
    if (-1 < iVar2) {
      (**(code **)(iRam00000000 + 0x60))();
    }
    iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
    if (iVar2 != 0) {
      iVar2 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
      if (iVar2 == 0) {
        local_193c = 0;
      }
      pWStackY_64 = &local_113c;
      aWStackY_68[0] = L'\0';
      aWStackY_68[1] = L'\0';
      piStackY_6c = (int *)(extraout_ECX + 0x3c);
      aWStackY_70[0] = L'鶍';
      aWStackY_70[1] = L'漃';
      iVar2 = (**(code **)(*(int *)(extraout_ECX + 0x3c) + 0x1c))();
      if (-1 < iVar2) {
        pWStackY_64 = L"쒃蔔瓀謫ᑶ卓ｪڋὨȀ樀栂ԙ";
        iVar2 = FUN_6f01bbf9(&local_93c,local_213c,0x400);
        if (iVar2 != 0) {
          piStackY_7c = *(int **)(extraout_ECX + 0x14);
          pWStackY_64 = (WCHAR *)0x519;
          aWStackY_68[0] = L'\0';
          aWStackY_68[1] = L'\0';
          piStackY_6c = (int *)0x51a;
          pWStackY_74 = local_213c;
          aWStackY_70[0] = L'\0';
          aWStackY_70[1] = L'\0';
          aWStackY_78[0] = L'\0';
          aWStackY_78[1] = L'\0';
          aWStackY_80[0] = L'鷥';
          aWStackY_80[1] = L'漃';
          (**(code **)(*piStackY_7c + 0x80))();
        }
      }
    }
  }
  return;
}


#glavni link za sve Zone-vezano

#Windows User


/* WARNING: Removing unreachable block (ram,0x6f03a617) */

void FUN_6f03a426(void)

{
  int iVar1;
  HWND hWnd;
  uint uVar2;
  int extraout_ECX;
  WCHAR local_205c [1024];
  WCHAR local_185c [1024];
  WCHAR local_105c [1024];
  WCHAR local_85c [994];
  undefined4 uStackY_98;
  int *piStackY_94;
  undefined4 uStackY_90;
  undefined4 uStackY_8c;
  undefined4 uStackY_88;
  undefined4 uStackY_84;
  undefined4 uStackY_80;
  undefined4 uStackY_7c;
  undefined4 uStackY_78;
  wchar_t *pwStackY_74;
  undefined4 local_5c;
  undefined4 uStack_58;
  int *piStack_54;
  wchar_t **ppwStack_50;
  undefined4 *puStack_4c;
  wchar_t *pwStack_48;
  int *piStack_44;
  LPCWSTR lpString;
  wchar_t *local_1c;
  WCHAR *local_18;
  LCID local_14;
  
  FUN_6f03c940();
  local_18 = local_185c;
  local_14 = 0x400;
  local_1c = (wchar_t *)0x4b0;
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_185c,u_Zone_6f040f3c);
  }
  iVar1 = (**(code **)(**(int **)(extraout_ECX + 0x20) + 0x28))();
  if (iVar1 == 0) {
    lstrcpyW(local_105c,(LPCWSTR)&lpString2_6f040f34);
  }
  piStack_44 = (int *)0x6f03a4b0;
  iVar1 = FUN_6f01bbf9(local_105c,local_205c,0x400);
  if (iVar1 == 0) {
    lstrcpyW(local_205c,local_185c);
  }
  lpString = *(LPCWSTR *)(extraout_ECX + 0x14);
  hWnd = (HWND)(**(code **)(*(int *)lpString + 0x54))();
  SetWindowTextW(hWnd,lpString);
  if (*(char *)(extraout_ECX + 0x385c) == '\0') {
    *(char *)(extraout_ECX + 0x385c) = '\x01';
    piStack_44 = *(int **)(extraout_ECX + 0x1c);
    local_5c = (wchar_t *)((uint)local_5c._2_2_ << 0x10);
    pwStack_48 = L"삅ᙼ䖋跼\xf455赒ꡕࢋ桒㡬漁ｐ塑㥦ꡝ萏Ù";
    iVar1 = (**(code **)(*piStack_44 + 0x10))();
    if (-1 < iVar1) {
      pwStack_48 = (wchar_t *)&stack0xfffffff0;
      puStack_4c = &local_5c;
      ppwStack_50 = (wchar_t **)0x6f01386c;
      piStack_54 = (int *)0x0;
      uStack_58 = 0x6f03a52d;
      (**(code **)(iRam00000000 + 0x58))();
    }
    if ((short)local_5c != 0) {
      ppwStack_50 = *(wchar_t ***)(extraout_ECX + 0x14);
      puStack_4c = &local_5c;
      pwStack_48 = u_Windows_User_6f041310;
      piStack_54 = (int *)0x6f03a549;
      iVar1 = (**(code **)((int)*ppwStack_50 + 0x10))();
      if (-1 < iVar1) {
        piStack_54 = *(int **)(extraout_ECX + 0x34);
        pwStack_48 = (wchar_t *)&stack0xfffffff4;
        ppwStack_50 = &local_1c;
        local_1c = L"Lobby";
        local_18 = L"ChatOnAtStartup";
        puStack_4c = (undefined4 *)0x2;
        uStack_58 = 0x6f03a579;
        (**(code **)(*piStack_54 + 0x5c))();
        uStack_58 = 1;
        local_5c = L"LocalChatStatus";
        (**(code **)(iRam00000000 + 0x20))();
        local_14 = GetUserDefaultLCID();
        pwStackY_74 = 
        L"삅❽盿贠ꢅ\xfff7埿卐Ῠ-蔀緀贒ꢅ\xfff7棿რ漄ｐ谕Ē譯ﱅ閍\xf7a8\xffff桒㶠漁ࢋｐᡑ䖋￼\xf075ࢋ뱨Ľ偯凿謠ᡶ卓譓樆 棿\x03\x03ɪｖ᱐䖋㯼瓃謆倈凿弈孞쏉譕臬䣬\b匀譖埱\xe068ļ㍯跛ц䗇ﻴ\x03倀䖍僸襦뢝\xfff7\xe8ff樳\xffff事謬 贀\xf47dᆋ赗뢽\xfff7埿児勿赘\xf84d\xf88b쫨\x14㬀緻㈇\xe9c0À"
        ;
        uVar2 = FUN_6f03d2de(local_14,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
        if ((int)uVar2 < 0) {
          pwStackY_74 = 
          L"삅ች薍\xf7a8\xffff\xe068А偯ᗿኌ漁䖋跼ꢕ\xfff7勿ꁨĽ譯倈凿謘ﱅ痿诰栈㶼漁ｐ⁑皋匘卓ڋｪͨ̀樀嘂僿謜ﱅ쌻ٴࢋｐࡑ幟 쥛嗃\xec8b\xec81ࡈ"
          ;
          uVar2 = FUN_6f03d2de(0,local_85c,0x400,*(int **)(extraout_ECX + 0x20));
          if ((int)uVar2 < 0) {
            lstrcpyW(local_85c,u_Unknown_Language_6f0410e0);
          }
        }
        (**(code **)(iRam00000000 + 0x18))();
        pwStackY_74 = L"LocalLCID";
        uStackY_78 = 0;
        uStackY_7c = 0x6f03a5fb;
        (**(code **)(iRam00000000 + 0x20))();
        piStackY_94 = *(int **)(extraout_ECX + 0x18);
        uStackY_7c = 0;
        uStackY_80 = 0;
        uStackY_84 = 0;
        uStackY_88 = 0xffffffff;
        uStackY_8c = 0x30003;
        uStackY_90 = 2;
        uStackY_98 = 0x6f03a610;
        (**(code **)(*piStackY_94 + 0x1c))();
      }
    }
  }
  return;
}


#valjda nekakvo proveravanje sa korisnikom windowsa.
#mozda desifruje i uzima ime korisnika kao ime igraca u igrama?

#iexplore

#na lokaciji 6f03a940


uint __fastcall FUN_6f03a84e(int param_1)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  ushort *puVar4;
  undefined4 *puVar5;
  byte local_810 [1024];
  undefined local_410 [2];
  undefined4 auStack_40e [255];
  undefined4 local_10;
  uint local_c;
  int *local_8;
  
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(**(int **)(param_1 + 0x1c) + 0x10))
                    (*(int **)(param_1 + 0x1c),0xffffffff,0,&local_8);
  if (-1 < iVar1) {
    _local_410 = CONCAT22((undefined2)auStack_40e[0],lpString_6f041bb8._0_2_);
    puVar5 = (undefined4 *)(local_410 + 2);
    for (iVar1 = 0xff; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar5 = 0;
      puVar5 = puVar5 + 1;
    }
    local_10 = 0x200;
    *(undefined2 *)puVar5 = 0;
    (**(code **)(*local_8 + 0x58))(local_8,&DAT_6f01465c,local_410,&local_10);
    if (local_410 != (undefined  [2])0x0) {
      puVar4 = (ushort *)local_410;
      uVar2 = _local_410;
      iVar1 = 0;
      do {
        local_810[iVar1] = *(byte *)puVar4 & 0x7f;
        iVar3 = iVar1 + 1;
        if ((short)uVar2 == 0x2f) {
          local_810[iVar1 + 1] = (byte)uVar2;
          iVar3 = iVar1 + 2;
        }
        puVar4 = puVar4 + 1;
        uVar2 = (uint)*puVar4;
        iVar1 = iVar3;
      } while (*puVar4 != 0);
      local_810[iVar3] = 0;
      iVar1 = FUN_6f03aa0f(local_810);
      if ((iVar1 == 0) || (iVar1 = FUN_6f03a9c6(local_810), iVar1 == 0)) {
        local_c = 0;
        iVar1 = FUN_6f03a979(0xd01,&local_c);
        if (iVar1 == 0) {
          if ((local_c & 0x300) != 0) {
            if (local_8 != (int *)0x0) {
              local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
            }
            return CONCAT31((int3)((uint)local_8 >> 8),1);
          }
          iVar1 = FUN_6f03aa0f(s_iexplore_6f04132c);
          if (iVar1 != 0) {
            FUN_6f03a9c6(s_iexplore_6f04132c);
          }
        }
      }
    }
  }
  if (local_8 != (int *)0x0) {
    local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
  }
  return (uint)local_8 & 0xffffff00;
}


#na lokaciji 6f03a945


uint __fastcall FUN_6f03a84e(int param_1)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  ushort *puVar4;
  undefined4 *puVar5;
  byte local_810 [1024];
  undefined local_410 [2];
  undefined4 auStack_40e [255];
  undefined4 local_10;
  uint local_c;
  int *local_8;
  
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(**(int **)(param_1 + 0x1c) + 0x10))
                    (*(int **)(param_1 + 0x1c),0xffffffff,0,&local_8);
  if (-1 < iVar1) {
    _local_410 = CONCAT22((undefined2)auStack_40e[0],lpString_6f041bb8._0_2_);
    puVar5 = (undefined4 *)(local_410 + 2);
    for (iVar1 = 0xff; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar5 = 0;
      puVar5 = puVar5 + 1;
    }
    local_10 = 0x200;
    *(undefined2 *)puVar5 = 0;
    (**(code **)(*local_8 + 0x58))(local_8,&DAT_6f01465c,local_410,&local_10);
    if (local_410 != (undefined  [2])0x0) {
      puVar4 = (ushort *)local_410;
      uVar2 = _local_410;
      iVar1 = 0;
      do {
        local_810[iVar1] = *(byte *)puVar4 & 0x7f;
        iVar3 = iVar1 + 1;
        if ((short)uVar2 == 0x2f) {
          local_810[iVar1 + 1] = (byte)uVar2;
          iVar3 = iVar1 + 2;
        }
        puVar4 = puVar4 + 1;
        uVar2 = (uint)*puVar4;
        iVar1 = iVar3;
      } while (*puVar4 != 0);
      local_810[iVar3] = 0;
      iVar1 = FUN_6f03aa0f(local_810);
      if ((iVar1 == 0) || (iVar1 = FUN_6f03a9c6(local_810), iVar1 == 0)) {
        local_c = 0;
        iVar1 = FUN_6f03a979(0xd01,&local_c);
        if (iVar1 == 0) {
          if ((local_c & 0x300) != 0) {
            if (local_8 != (int *)0x0) {
              local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
            }
            return CONCAT31((int3)((uint)local_8 >> 8),1);
          }
          iVar1 = FUN_6f03aa0f(s_iexplore_6f04132c);
          if (iVar1 != 0) {
            FUN_6f03a9c6(s_iexplore_6f04132c);
          }
        }
      }
    }
  }
  if (local_8 != (int *)0x0) {
    local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
  }
  return (uint)local_8 & 0xffffff00;
}


#na lokaciji 6f03a94f


uint __fastcall FUN_6f03a84e(int param_1)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  ushort *puVar4;
  undefined4 *puVar5;
  byte local_810 [1024];
  undefined local_410 [2];
  undefined4 auStack_40e [255];
  undefined4 local_10;
  uint local_c;
  int *local_8;
  
  local_8 = (int *)0x0;
  iVar1 = (**(code **)(**(int **)(param_1 + 0x1c) + 0x10))
                    (*(int **)(param_1 + 0x1c),0xffffffff,0,&local_8);
  if (-1 < iVar1) {
    _local_410 = CONCAT22((undefined2)auStack_40e[0],lpString_6f041bb8._0_2_);
    puVar5 = (undefined4 *)(local_410 + 2);
    for (iVar1 = 0xff; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar5 = 0;
      puVar5 = puVar5 + 1;
    }
    local_10 = 0x200;
    *(undefined2 *)puVar5 = 0;
    (**(code **)(*local_8 + 0x58))(local_8,&DAT_6f01465c,local_410,&local_10);
    if (local_410 != (undefined  [2])0x0) {
      puVar4 = (ushort *)local_410;
      uVar2 = _local_410;
      iVar1 = 0;
      do {
        local_810[iVar1] = *(byte *)puVar4 & 0x7f;
        iVar3 = iVar1 + 1;
        if ((short)uVar2 == 0x2f) {
          local_810[iVar1 + 1] = (byte)uVar2;
          iVar3 = iVar1 + 2;
        }
        puVar4 = puVar4 + 1;
        uVar2 = (uint)*puVar4;
        iVar1 = iVar3;
      } while (*puVar4 != 0);
      local_810[iVar3] = 0;
      iVar1 = FUN_6f03aa0f(local_810);
      if ((iVar1 == 0) || (iVar1 = FUN_6f03a9c6(local_810), iVar1 == 0)) {
        local_c = 0;
        iVar1 = FUN_6f03a979(0xd01,&local_c);
        if (iVar1 == 0) {
          if ((local_c & 0x300) != 0) {
            if (local_8 != (int *)0x0) {
              local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
            }
            return CONCAT31((int3)((uint)local_8 >> 8),1);
          }
          iVar1 = FUN_6f03aa0f(s_iexplore_6f04132c);
          if (iVar1 != 0) {
            FUN_6f03a9c6(s_iexplore_6f04132c);
          }
        }
      }
    }
  }
  if (local_8 != (int *)0x0) {
    local_8 = (int *)(**(code **)(*local_8 + 8))(local_8);
  }
  return (uint)local_8 & 0xffffff00;
}


#samo mi ime govori da je u pitanju Internet Explorer.
#zasto li poziva i uzima u funkcijama Internet Explorer(u smislu pretrazivaca)? nmp...

#CheckConnectionWizard


int FUN_6f03a979(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_CheckConnectionWizard_6f041338);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f03a9b4;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03a9b4:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#u bukvalnom smislu, carobnjak koji proverava vezu(sa serverom? sa kucnim internetu? u smislu da li imas internet da se povezujes?)
#moglo bi doci pri ruci ili pomoci sta u kodu.

#inetcfg.dll

#na lokaciji 6f03a97b


int FUN_6f03a979(undefined4 param_1,undefined4 param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_CheckConnectionWizard_6f041338);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1,param_2);
      goto LAB_6f03a9b4;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03a9b4:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#na lokaciji 6f03a9c8


int FUN_6f03a9c6(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetShellNext_6f04135c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f03a9fd;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03a9fd:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#na lokaciji 6f03aa11


int FUN_6f03aa0f(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetShellNextA_6f04136c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f03aa46;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03aa46:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#Valjda podaci ili opet nacin kako da se koristi inetcfg.dll datoteku.
#verovatno neki windows .dll module

#SetShellNext


int FUN_6f03a9c6(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetShellNext_6f04135c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f03a9fd;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03a9fd:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#namesta nekakvu Shell koja sledi

#SetShellNextA


int FUN_6f03aa0f(undefined4 param_1)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  
  hModule = LoadLibraryA(s_inetcfg.dll_6f041350);
  if (hModule != (HMODULE)0x0) {
    pFVar1 = GetProcAddress(hModule,s_SetShellNextA_6f04136c);
    if (pFVar1 != (FARPROC)0x0) {
      iVar2 = (*pFVar1)(param_1);
      goto LAB_6f03aa46;
    }
  }
  iVar2 = 1;
  SetLastError(1);
LAB_6f03aa46:
  if (hModule != (HMODULE)0x0) {
    FreeLibrary(hModule);
  }
  return iVar2;
}


#namesta sledecu Shell, ali sledecu, A

#%1&Q=%2!04X!


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#nekakav kod za komunikaciju i status interneta ili neceg slicnog...
#mozda nesto da sracunava ili tako....

#GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!08X!


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#ne znam sta li seovde desava.
#mogu ovde namisliti da je nesto za identifikaciju ili racunanje..

#GM=%1&ID=%2!d!&AL=%3!04X1&SL=%4!04X!&UL=%5!04X!&ZL=%6!04X!&Z=%7!d!&X=%8&W=%9&V=%10&U=%11!08X!&T=12!02X!&S=%13!08X!&R=%14(pripaziti jer je moguce da sam znak/broj fulo)


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#E ne verujem sta je ovo
#verovatno za racunanje, identifikaciju i sl.

#GM=%1&ID=%2!d!&AL=%3!04X1&SL=%4!04X!&UL=%5!04X!&ZL=%6!04X!&Z=%7!d!&Y=%8&X=%9&W=%10&V=%11&U=%12!08X!&T=%13!02X!&S=%14!08X!&R=%15


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#bog zna sta su ovi sifrovaci.
#sigurno neko racunjanje, zapisivanje i sl.

#CLSID\{32b9f4be-3472-11d1-927d-00c04fc2db04}


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}



#neki kod za identifikaciju (jel moguce da se ponavlja jedno 3 puta ovaj kod??)

#%1!02X!

#na lokaciiji 6f03ac9a


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#na lokaciji 6f03acb0


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#na lokaciji 6f03ad68


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#na lokaciji 6f03adf9


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#na lokaciji 6f03ae92


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#na lokaciji 6f03b050


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#nemam pojma biljane mi!

#modem


/* WARNING: Type propagation algorithm not settling */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

undefined4 FUN_6f03aa58(int param_1,LPWSTR param_2,DWORD param_3)

{
  ushort uVar1;
  int *piVar2;
  LANGID LVar3;
  int iVar4;
  HDC hdc;
  DWORD DVar5;
  uint uVar6;
  uint *puVar7;
  undefined2 *puVar8;
  LSTATUS LVar9;
  uint uVar10;
  undefined2 *puVar11;
  ushort uVar12;
  undefined2 unaff_BX;
  undefined2 uVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  WCHAR *pWVar16;
  WCHAR *pWVar17;
  WCHAR *pWVar18;
  undefined4 uVar19;
  uint uVar20;
  int *piStack_ce4;
  int iVar21;
  WCHAR local_cc8 [10];
  int iStack_cb4;
  undefined local_4c8 [424];
  CHAR local_320 [148];
  _TIME_ZONE_INFORMATION local_28c;
  WCHAR local_1e0 [26];
  WCHAR local_1ac [26];
  short local_178;
  WCHAR local_176 [33];
  WCHAR local_134 [22];
  WCHAR local_108 [34];
  WCHAR local_c4 [18];
  undefined4 local_a0;
  undefined4 uStack_9c;
  undefined2 uStack_98;
  DWORD local_94;
  byte local_90 [16];
  wchar_t *local_80;
  wchar_t *local_7c;
  DWORD local_78 [2];
  WCHAR local_70 [6];
  undefined4 local_64;
  byte local_60 [16];
  wchar_t *local_50;
  wchar_t *local_4c;
  int local_48;
  undefined4 local_44;
  uint local_40;
  undefined2 local_3c;
  undefined2 local_3a [4];
  undefined2 local_32;
  DWORD local_2c;
  HKEY local_28;
  DWORD local_24;
  uint local_20;
  char local_19;
  int local_18;
  int *local_14;
  byte local_10 [8];
  DWORD local_8;
  
  local_78[1] = 0x21;
  piStack_ce4 = (int *)0x6f03aa7c;
  memset(&local_178,0,0x42);
  local_14 = (int *)0x0;
  piStack_ce4 = *(int **)(param_1 + -0x20);
  iVar21 = -1;
  iVar4 = (**(code **)(*piStack_ce4 + 0x10))();
  if (-1 < iVar4) {
    iVar4 = (**(code **)(*local_14 + 0x58))(local_14,L"InternalName",&local_178,local_78 + 1);
    if ((iVar4 < 0) || (local_178 == 0)) {
      local_70[0] = L'\0';
    }
    else {
      lstrcpynW(local_70,local_176,5);
    }
    local_40 = 0;
    (**(code **)(*local_14 + 0x60))(local_14,L"LocalLCID",&local_40);
    GetTimeZoneInformation(&local_28c);
    hdc = GetDC((HWND)0x0);
    if (hdc != (HDC)0x0) {
      iVar4 = GetDeviceCaps(hdc,8);
      local_8 = GetDeviceCaps(hdc,10);
      local_2c = GetDeviceCaps(hdc,0xc);
      uVar13 = 0;
      ReleaseDC((HWND)0x0,hdc);
      local_24 = 0x330;
      local_4c8._0_4_ = 0x330;
      DVar5 = RasEnumConnectionsA((tagRASCONNA *)local_4c8,&local_24,local_78);
      if (((DVar5 == 0) && (local_78[0] == 1)) &&
         (DVar5 = RasGetConnectStatusA
                            ((HRASCONN)local_4c8._4_4_,(tagRASCONNSTATUSA *)(local_4c8 + 0x19c)),
         DVar5 == 0)) {
        uVar6 = lstrcmpA(local_320,s_modem_6f04164c);
        if ((uVar6 == 0) &&
           (local_24 = uVar6,
           RasGetEntryPropertiesA
                     ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
                      &local_24), 0x3f < local_24)) {
          FUN_6f03c940();
          memset(&piStack_ce4,0,local_24);
          DVar5 = RasGetEntryPropertiesA
                            ((LPCSTR)0x0,local_4c8 + 8,(tagRASENTRYA *)0x0,(LPDWORD)0x0,
                             (LPBYTE)&piStack_ce4,&local_24);
          if (((DVar5 == 0) && ((&DAT_0000003f < piStack_ce4 && (iVar21 == 0x10003)))) &&
             (iStack_cb4 == 6)) {
            uVar13 = unaff_BX;
          }
        }
      }
      local_64 = 0;
      InternetGetConnectedState(&local_64,0);
      iVar21 = FUN_6f03b4a0(param_1 + -0x3c);
      local_32 = (short)iVar21;
      local_3a[0] = (undefined2)local_8;
      local_3a[1] = (undefined2)local_2c;
      local_3c = (short)iVar4;
      local_3a[2] = uVar13;
      local_3a[3] = (undefined2)local_64;
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0xf6;
      local_10[1] = 5;
      local_10[2] = 0x9e;
      local_10[3] = 0x5a;
      local_10[4] = 0x2b;
      local_10[5] = 0x11;
      local_10[6] = 0x3a;
      local_10[7] = 0xae;
      local_8 = 0xf4290a86;
      iVar4 = 0;
      pWVar14 = local_1e0;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = local_3a;
      puVar7 = (uint *)(param_1 + 0x3c88);
      iVar4 = 3;
      do {
        if ((puVar7[-1] & 0xffff0000) == 0) {
          puVar11[-1] = *(undefined2 *)(puVar7 + -1);
        }
        else {
          puVar11[-1] = 0xffff;
        }
        if ((*puVar7 & 0xffff0000) == 0) {
          *puVar11 = *(undefined2 *)puVar7;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar7 = puVar7 + 2;
        puVar11 = puVar11 + 2;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 0xc);
      local_10[0] = 0x6f;
      local_10[1] = 0x58;
      local_10[2] = 0xa2;
      local_10[3] = 0x21;
      local_10[4] = 0x7b;
      local_10[5] = 0xc0;
      local_10[6] = 0xee;
      local_10[7] = 0x42;
      local_8 = 0x94c0f395;
      iVar4 = 0;
      pWVar14 = local_1ac;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0xc);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3c9c);
      iVar4 = 4;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 8);
      local_10[4] = 0x57;
      local_10[5] = 0x3e;
      local_10[6] = 0xa0;
      local_10[7] = 0x21;
      local_8 = 0xf34b8932;
      iVar4 = 0;
      pWVar14 = local_c4;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4 + 4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 8);
      puVar11 = &local_3c;
      puVar8 = (undefined2 *)(param_1 + 0x3cbc);
      iVar4 = 5;
      do {
        if (puVar8[1] == 0) {
          *puVar11 = *puVar8;
        }
        else {
          *puVar11 = 0xffff;
        }
        puVar8 = puVar8 + 4;
        puVar11 = puVar11 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      iVar4 = 0;
      do {
        local_60[iVar4] = *(byte *)((int)local_3a + iVar4 + -1);
        local_60[iVar4 + 1] = *(byte *)((int)local_3a + iVar4 + -2);
        iVar4 = iVar4 + 2;
      } while (iVar4 < 10);
      local_10[0] = 0x6a;
      local_10[1] = 0x31;
      local_10[2] = 0x95;
      local_10[3] = 0xe0;
      local_10[4] = 0x82;
      local_10[5] = 0xcc;
      local_10[6] = 0xcd;
      local_10[7] = 0x3d;
      local_8 = CONCAT22(local_8._2_2_,0x112a);
      iVar4 = 0;
      pWVar14 = local_134;
      do {
        local_60[iVar4] = local_60[iVar4] ^ local_10[iVar4];
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 10);
      local_20 = 0;
      local_18 = 1;
      local_50 = L"Lobby";
      local_4c = L"ChatOnAtStartup";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = 2;
      }
      local_18 = 1;
      local_4c = L"PrefSound";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 != 0) {
        local_20 = local_20 | 1;
      }
      local_18 = 0;
      local_4c = L"SkillLevel";
      (**(code **)(**(int **)(param_1 + -8) + 0x5c))(*(int **)(param_1 + -8),&local_50,2,&local_18 );
      if (local_18 == 2) {
        uVar6 = 0x10;
      }
      else {
        uVar6 = (-(uint)(local_18 != 1) & 0xfffffff8) + 8;
      }
      local_20 = local_20 | uVar6;
      local_18 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"LocalChatStatus",&local_18);
      if (local_18 != 0) {
        local_20 = local_20 | 4;
      }
      local_20 = local_20 ^ 0x6a;
      local_80 = L"Version";
      local_7c = L"VersionNum";
      (**(code **)(*local_14 + 0x5c))(local_14,&local_80,2,&local_44);
      local_a0 = _DAT_6f041630;
      uStack_9c = DAT_6f041634;
      uStack_98 = DAT_6f041638;
      local_28 = (HKEY)0x0;
      memset(local_90,0,0x10);
      LVar9 = RegCreateKeyExW((HKEY)0x80000000,u_CLSID\{32b9f4be-3472-11d1-927d-0_6f0415d4,0,
                              (LPWSTR)0x0,0,0x2001f,(LPSECURITY_ATTRIBUTES)0x0,&local_28,&local_9 4);
      if ((LVar9 == 0) && (local_28 != (HKEY)0x0)) {
        local_2c = 0;
        local_8 = 0x10;
        LVar9 = RegQueryValueExW(local_28,(LPCWSTR)&local_a0,(LPDWORD)0x0,&local_2c,local_90,
                                 &local_8);
        if ((LVar9 != 0) || ((local_2c != 3 || (local_8 != 0x10)))) {
          memset(local_90,0,0x10);
        }
        RegCloseKey(local_28);
      }
      local_19 = '\0';
      iVar4 = 0;
      pWVar14 = local_108;
      do {
        local_60[iVar4] = local_90[iVar4] ^ 0xa3;
        if ((local_90[iVar4] ^ 0xa3) != 0xa3) {
          local_19 = '\x01';
        }
        FUN_6f01bbf9(u_%1!02X!_6f04163c,pWVar14,3);
        iVar4 = iVar4 + 1;
        pWVar14 = pWVar14 + 2;
      } while (iVar4 < 0x10);
      if (local_19 == '\0') {
        local_108[1] = 0;
        local_108[0] = L'0';
      }
      local_48 = 0;
      (**(code **)(*local_14 + 0x60))(local_14,L"StatsAbility",&local_48);
      if (local_48 == 1) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        pWVar15 = local_1e0;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar15,pWVar16,pWVar17,pWVar18,uVar1 9,
                   uVar20,local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0414d4,local_cc8,0x400);
      }
      else if (local_48 == 2) {
        pWVar14 = local_108;
        piVar2 = *(int **)(param_1 + -0x28);
        uVar19 = *(undefined4 *)(param_1 + 0x3cec);
        pWVar18 = local_134;
        pWVar17 = local_c4;
        pWVar16 = local_1ac;
        uVar10 = local_40 & 0xffff;
        uVar20 = local_20;
        LVar3 = GetUserDefaultLangID();
        uVar6 = (uint)LVar3;
        LVar3 = GetSystemDefaultLangID();
        (**(code **)(*piVar2 + 100))
                  (piVar2,LVar3,uVar6,uVar10,local_28c.Bias,pWVar16,pWVar17,pWVar18,uVar19,uVar20 ,
                   local_44,pWVar14);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&SL=%4!_6f0413e0,local_cc8,0x400);
      }
      else {
        (**(code **)(**(int **)(param_1 + -0x28) + 100))(*(int **)(param_1 + -0x28),local_44);
        iVar4 = FUN_6f01bbf9(u_GM=%1&ID=%2!d!&AL=%3!04X!&S=%4!0_6f041398,local_cc8,0x400);
      }
      if (iVar4 != 0) {
        uVar6 = 0;
        for (iVar4 = 0; *(short *)((int)local_cc8 + iVar4) != 0; iVar4 = iVar4 + 4) {
          uVar12 = *(short *)((int)local_cc8 + iVar4) << 8;
          uVar1 = *(ushort *)((int)local_cc8 + iVar4 + 2);
          if (uVar1 == 0) {
            uVar12 = uVar12 | 0x4a;
          }
          else {
            uVar12 = uVar12 | uVar1;
          }
          uVar6 = uVar6 + uVar12;
          if (uVar1 == 0) break;
        }
        for (; (uVar6 & 0xffff0000) != 0; uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10)) {
        }
        iVar4 = FUN_6f01bbf9(u_%1&Q=%2!04X!_6f04137c,param_2,param_3);
        if (iVar4 != 0) {
          if (local_14 != (int *)0x0) {
            (**(code **)(*local_14 + 8))(local_14);
          }
          return 0;
        }
      }
    }
  }
  if (local_14 != (int *)0x0) {
    (**(code **)(*local_14 + 8))(local_14);
  }
  return 0x80004005;
}


#mozda proverava nestoko veze/konekcije?(KOLIKI JE PUT DA SE OVAJ JEBENI KOD PONAVLJA????)

#DllGetClassObject


undefined4 FUN_6f03c38d(undefined4 *param_1,LPCWSTR param_2,int param_3)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  LPWSTR lpString1;
  undefined4 uVar3;
  
  if ((param_2 == (LPCWSTR)0x0) || (*param_2 == L'\0')) {
    uVar3 = 0x80070057;
  }
  else {
    hModule = LoadLibraryW(param_2);
    param_1[3] = hModule;
    if (hModule == (HMODULE)0x0) {
      uVar3 = 0x88000001;
    }
    else {
      pFVar1 = GetProcAddress(hModule,s_SetResourceManager_6f041aac);
      param_1[2] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllCanUnloadNow_6f041a9c);
      param_1[1] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllGetClassObject_6f041a88);
      *param_1 = pFVar1;
      if (pFVar1 == (FARPROC)0x0) {
        uVar3 = 0x88000002;
      }
      else {
        iVar2 = lstrlenW(param_2);
        lpString1 = (LPWSTR)FUN_6f01610d(iVar2 * 2 + 2);
        param_1[4] = lpString1;
        if (lpString1 != (LPWSTR)0x0) {
          lstrcpyW(lpString1,param_2);
          if ((code *)param_1[2] == (code *)0x0) {
            return 0;
          }
          if (param_3 == 0) {
            return 0;
          }
          (*(code *)param_1[2])(param_3);
          *(undefined *)(param_1 + 7) = 1;
          return 0;
        }
        uVar3 = 0x8007000e;
      }
    }
  }
  param_1[5] = 0;
  *param_1 = 0;
  param_1[1] = 0;
  if (param_1[4] != 0) {
    FUN_6f03b71c(param_1[4]);
    param_1[4] = 0;
  }
  if ((HMODULE)param_1[3] != (HMODULE)0x0) {
    FreeLibrary((HMODULE)param_1[3]);
    param_1[3] = 0;
  }
  return uVar3;
}


#verovatno uzima potrebne .dll?

#DllCanUnloadNow


undefined4 FUN_6f03c38d(undefined4 *param_1,LPCWSTR param_2,int param_3)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  LPWSTR lpString1;
  undefined4 uVar3;
  
  if ((param_2 == (LPCWSTR)0x0) || (*param_2 == L'\0')) {
    uVar3 = 0x80070057;
  }
  else {
    hModule = LoadLibraryW(param_2);
    param_1[3] = hModule;
    if (hModule == (HMODULE)0x0) {
      uVar3 = 0x88000001;
    }
    else {
      pFVar1 = GetProcAddress(hModule,s_SetResourceManager_6f041aac);
      param_1[2] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllCanUnloadNow_6f041a9c);
      param_1[1] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllGetClassObject_6f041a88);
      *param_1 = pFVar1;
      if (pFVar1 == (FARPROC)0x0) {
        uVar3 = 0x88000002;
      }
      else {
        iVar2 = lstrlenW(param_2);
        lpString1 = (LPWSTR)FUN_6f01610d(iVar2 * 2 + 2);
        param_1[4] = lpString1;
        if (lpString1 != (LPWSTR)0x0) {
          lstrcpyW(lpString1,param_2);
          if ((code *)param_1[2] == (code *)0x0) {
            return 0;
          }
          if (param_3 == 0) {
            return 0;
          }
          (*(code *)param_1[2])(param_3);
          *(undefined *)(param_1 + 7) = 1;
          return 0;
        }
        uVar3 = 0x8007000e;
      }
    }
  }
  param_1[5] = 0;
  *param_1 = 0;
  param_1[1] = 0;
  if (param_1[4] != 0) {
    FUN_6f03b71c(param_1[4]);
    param_1[4] = 0;
  }
  if ((HMODULE)param_1[3] != (HMODULE)0x0) {
    FreeLibrary((HMODULE)param_1[3]);
    param_1[3] = 0;
  }
  return uVar3;
}


#dozvola da se valjda odma ne ocitaju?(unload) .dll datoteke.

#SetResourceManager



undefined4 FUN_6f03c38d(undefined4 *param_1,LPCWSTR param_2,int param_3)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  LPWSTR lpString1;
  undefined4 uVar3;
  
  if ((param_2 == (LPCWSTR)0x0) || (*param_2 == L'\0')) {
    uVar3 = 0x80070057;
  }
  else {
    hModule = LoadLibraryW(param_2);
    param_1[3] = hModule;
    if (hModule == (HMODULE)0x0) {
      uVar3 = 0x88000001;
    }
    else {
      pFVar1 = GetProcAddress(hModule,s_SetResourceManager_6f041aac);
      param_1[2] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllCanUnloadNow_6f041a9c);
      param_1[1] = pFVar1;
      pFVar1 = GetProcAddress((HMODULE)param_1[3],s_DllGetClassObject_6f041a88);
      *param_1 = pFVar1;
      if (pFVar1 == (FARPROC)0x0) {
        uVar3 = 0x88000002;
      }
      else {
        iVar2 = lstrlenW(param_2);
        lpString1 = (LPWSTR)FUN_6f01610d(iVar2 * 2 + 2);
        param_1[4] = lpString1;
        if (lpString1 != (LPWSTR)0x0) {
          lstrcpyW(lpString1,param_2);
          if ((code *)param_1[2] == (code *)0x0) {
            return 0;
          }
          if (param_3 == 0) {
            return 0;
          }
          (*(code *)param_1[2])(param_3);
          *(undefined *)(param_1 + 7) = 1;
          return 0;
        }
        uVar3 = 0x8007000e;
      }
    }
  }
  param_1[5] = 0;
  *param_1 = 0;
  param_1[1] = 0;
  if (param_1[4] != 0) {
    FUN_6f03b71c(param_1[4]);
    param_1[4] = 0;
  }
  if ((HMODULE)param_1[3] != (HMODULE)0x0) {
    FreeLibrary((HMODULE)param_1[3]);
    param_1[3] = 0;
  }
  return uVar3;
}


#namestanje menadzera za izvor

#BitmapText/%d


char __thiscall FUN_6f03ca77(void *this,LPCWSTR param_1,int *param_2,int *param_3,WCHAR *param_4 )

{
  char cVar1;
  int iVar2;
  wchar_t *pwVar3;
  WCHAR local_804 [1024];
  
  cVar1 = FUN_6f03ca29(this,param_1,param_2);
  if (cVar1 != '\0') {
    if ((short)((uint)param_1 >> 0x10) == 0) {
      pwVar3 = u_BitmapText/%d_6f041ad0;
    }
    else {
      pwVar3 = u_BitmapText/%s_6f041aec;
    }
    wsprintfW(local_804,pwVar3,param_1);
    if (param_4 == (WCHAR *)0x0) {
      param_4 = local_804;
    }
                    /* WARNING: Load size is inaccurate */
    iVar2 = FUN_6f03cb22(*this,param_3,(int)param_4);
    cVar1 = -1 < iVar2;
  }
  return cVar1;
}

#valjda pripremi bitmapni tekst u decimali(%d)

#BitmapText/%s


char __thiscall FUN_6f03ca77(void *this,LPCWSTR param_1,int *param_2,int *param_3,WCHAR *param_4 )

{
  char cVar1;
  int iVar2;
  wchar_t *pwVar3;
  WCHAR local_804 [1024];
  
  cVar1 = FUN_6f03ca29(this,param_1,param_2);
  if (cVar1 != '\0') {
    if ((short)((uint)param_1 >> 0x10) == 0) {
      pwVar3 = u_BitmapText/%d_6f041ad0;
    }
    else {
      pwVar3 = u_BitmapText/%s_6f041aec;
    }
    wsprintfW(local_804,pwVar3,param_1);
    if (param_4 == (WCHAR *)0x0) {
      param_4 = local_804;
    }
                    /* WARNING: Load size is inaccurate */
    iVar2 = FUN_6f03cb22(*this,param_3,(int)param_4);
    cVar1 = -1 < iVar2;
  }
  return cVar1;
}


#Namesta bitmapni tekst u stringovima(%s)